@using System.Globalization;
@model IEnumerable<PrototypeWithAuth.Models.ParentRequest>
@{
    ViewData["Title"] = "GeneralPaymentList";
    Layout = "~/Views/Shared/PaymentView.cshtml";
}
<div style="display:flex">

    <div style="width: 100px; height:930px" class="p-2 border-right box-shadow text-center">  
        @*<<<<< side navbar >>>>>*@
        <ul class="nav flex-column nav-pills nav-stacked mt-4">
            @{int yearCount = 0;}
            @foreach (var group in Model.GroupBy(m => m.OrderDate.Year))
            {
                <li class="nav-item text-dark m-3 acc-sidebar active">
                    <a href="#@group.Key"> 
                        <strong> @group.Key </strong>  
                    </a>
                </li>
                yearCount++;
            }
        </ul>

    </div>
    @*<<<< content >>>>>*@
    <div style="flex-grow:1;" class="ml-4 mt-5">

        @foreach (var group in Model.GroupBy(x => new { x.OrderDate.Year, x.OrderDate.Month }))
        {
            <table class="table table-noheaderlines table-headerspaced table-hover text-center" style="table-layout:fixed; width:100%;">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductSubcategory.ProductSubcategoryDescription)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.Vendor.VendorEnName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Cost)
                        </th>
                    </tr>
                </thead>

                <tbody>

                    @{int total = 0;}

                    @foreach (var item in group)
                    {
                        total++;
                        //int index = 0;
                        @if (total.Equals(group.Count()))
                        {
                            <h5 id=@item.OrderDate.Year>
                                @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(item.OrderDate.Month) [@total]
                            </h5>

                        }
                        var cult = System.Globalization.CultureInfo.CurrentCulture;
                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => item.OrderNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductName)
                            </td>
                            <td>
                                @Html.DisplayFor(modeIteml => item.OrderDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductSubcategory.ProductSubcategoryDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.Vendor.VendorEnName)
                            </td>

                            <td>
                                @{
                                    decimal cost = (decimal)item.Requests.FirstOrDefault().Cost;
                                    string formattedCost = cost.ToString("C02");

                                    //Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Cost);
                                }
                                @formattedCost
                            </td>

                            <td>
                                <a asp-action="Details" asp-route-id="@item.ParentRequestID"> <img src="~/images/css/accounting/icons/view.png" alt="Details" /> </a>
                            </td>
                        </tr>


                    }
                </tbody>

            </table>
            <br />
        }
            
    </div>
</div>


<script>
    hide = true;
    $('body').on("click", function () {
        if (hide) $('.acc-sidebar').removeClass('active');
        hide = true;
    });

    // add and remove .active
    $('body').on('click', '.acc-sidebar', function () {

        var self = $(this);

        //if (self.hasClass('active')) {
        //    $('.acc-sidebar').removeClass('active');
        //    return false;
        //}

        $('.acc-sidebar').removeClass('active');

        self.toggleClass('active');
        hide = false;
    });
</script>
   

