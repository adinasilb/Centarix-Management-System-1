@*@model IPagedList<PrototypeWithAuth.Models.ParentRequest>
    @using PrototypeWithAuth.AppData;

    @using X.PagedList.Mvc.Core;  import this so we get our HTML Helper
    @using X.PagedList;  import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

@model IEnumerable<PrototypeWithAuth.Models.ParentRequest>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/NotificationsNavView.cshtml";
}


@{int totalRequestsNotPayed = 0;}
@{int totalRequestsNoInvioce = 0;}

<h6 id="totalRequestsNotPayed"></h6>
&nbsp;

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderNumber)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductSubcategory.ProductSubcategoryDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.Vendor.VendorEnName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Cost)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            bool onlyOneRequest = true;
            if (item.Requests.Count() > 1)
            {
                onlyOneRequest = false;
            }
            if (item.Payed != true)
            {
                totalRequestsNotPayed += totalRequestsNotPayed;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNumber)
                    </td>
                    <td>
                        @if (onlyOneRequest)
                        {
                            Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductName);
                        }
                        else
                        {
                            Html.DisplayNameFor(model => model.ParentRequestID);
                        }
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @if (onlyOneRequest)
                        {
                            @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
                        }
                        else
                        {
                            Html.DisplayNameFor(model => model.ParentRequestID);
                        }
                    </td>
                    <td>
                        @if (onlyOneRequest)
                        {
                            @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductSubcategory.ProductSubcategoryDescription)
                        }
                        else
                        {
                            Html.DisplayNameFor(model => model.ParentRequestID);
                        }
                    </td>
                    <th>
                        @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.Vendor.VendorEnName)
                    </th>
                    <th>
                        @if (onlyOneRequest)
                        {
                            Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Cost);
                        }
                        else
                        {

                        }
                    </th>

                    <td>
                        <a asp-action="Details" asp-route-id="@item.ParentRequestID">Details</a> |
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<hr />

<h6 id="totalRequestsNoInvioce"></h6>
&nbsp;
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderNumber)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.ProductSubcategory.ProductSubcategoryDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Product.Vendor.VendorEnName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Cost)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            bool onlyOneRequest = true;
            if (item.Requests.Count() > 1)
            {
                onlyOneRequest = false;
            }
            if (item.InvoiceNumber == null)
            {
                totalRequestsNoInvioce += totalRequestsNoInvioce;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNumber)
                    </td>
                    <td>
                        @if (onlyOneRequest)
                        {
                            Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductName);
                        }
                        else
                        {
                            Html.DisplayNameFor(model => model.ParentRequestID);
                        }
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @if (onlyOneRequest)
                        {
                            @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
                        }
                        else
                        {
                            Html.DisplayNameFor(model => model.ParentRequestID);
                        }
                    </td>
                    <td>
                        @if (onlyOneRequest)
                        {
                            @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.ProductSubcategory.ProductSubcategoryDescription)
                        }
                        else
                        {
                            Html.DisplayNameFor(model => model.ParentRequestID);
                        }
                    </td>
                    <th>
                        @Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Product.Vendor.VendorEnName)
                    </th>
                    <th>
                        @if (onlyOneRequest)
                        {
                            Html.DisplayFor(modelItem => item.Requests.FirstOrDefault().Cost);
                        }
                        else
                        {

                        }
                    </th>

                    <td>
                        <a asp-action="Details" asp-route-id="@item.ParentRequestID">Details</a> |
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<hr />
<script>
    $(document).ready(function () {
        $("#totalRequestsNotPayed").html("To Pay [@totalRequestsNotPayed]")
    });

     $(document).ready(function () {
        $("#totalRequestsNoInvioce").html("No Invoice [@totalRequestsNoInvioce]")
    });

</script>
