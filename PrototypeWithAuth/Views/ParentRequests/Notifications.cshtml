@model PrototypeWithAuth.ViewModels.NotificationsListViewModel

@{
    ViewData["Title"] = "To Pay - Notifications";
    Layout = "~/Views/Shared/NotificationsView.cshtml";
}


    <table class="table table-headerspaced table-borderless table-hover">
        <thead>
            <tr style="border-color:transparent;">
                <th colspan="8" style="border-color:transparent;">
                    <h5>
                        <strong>To Pay</strong> [@Model.ParentRequestList.Values.SelectMany(pr => pr).ToList().Count]
                        @{
                            var TotalCost = Model.ParentRequestList.Values.SelectMany(pr => pr).Sum(pr => pr.Request.Cost);
                            var decCost = (decimal)TotalCost;
                            var formattedCostTotal = decCost.ToString("C02");
                        }
                        <span>&emsp; Total: </span><span>@formattedCostTotal</span>
                    </h5>
                </th>
            </tr>
            <tr class="text-center">
                <td style="width:8%;">
                    No
                </td>
                <td style="width:10%;"></td>
                <td style="width:20%;">
                    Name
                </td>
                <td style="width:10%">
                    Units
                </td>
                <td style="width:10%">
                    Price
                </td>
                <td style="width:10%">
                    Vendor
                </td>
                <td style="width:10%">
                    Category
                </td>
                <td style="width:10%">
                    Date
                </td>
                <td style="width:12%">
                </td>
            </tr>
        </thead>

        @foreach (var item in Model.ParentRequestList)
        {
    <tbody>
        <tr><td><div>@item.Key.VendorEnName</div></td></tr>

        @foreach (var parentRequestListViewModel in item.Value)
        {
            <tr class="text-center">
                <td class="text-center">
                    <div class="form-check text-center">
                        <input type="checkbox" class="form-check-input" id="@parentRequestListViewModel.ParentRequest.ParentRequestID" /><br />
                        <label for="@parentRequestListViewModel.ParentRequest.ParentRequestID" class="form-check-label pl-0" style="margin-left: -1.7rem">
                            @Html.DisplayFor(modelItem => parentRequestListViewModel.ParentRequest.OrderNumber)
                        </label>
                    </div>
                </td>
                <td>
                    @if (parentRequestListViewModel.ProductSubcategory.ImageURL != null)
                    {
                        var imageurl = parentRequestListViewModel.Product.ProductSubcategory.ImageURL;
                        <img src="@imageurl" alt="Image" width="75" class="category-image" />
                    }
                    else
                    {
                        <img src="~/images/css/accounting/sample_image.png" alt="Image" width="75" class="category-image" />
                    }
                </td>
                <td>
                    <button class="load-request-details btn no-box-shadow acc-link-clr" value="@parentRequestListViewModel.Request.RequestID">  @Html.DisplayFor(modelItem => parentRequestListViewModel.Product.ProductName) </button>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => parentRequestListViewModel.Request.Unit) @Html.DisplayFor(modelItem => parentRequestListViewModel.UnitType.UnitTypeDescription)<br />
                    @Html.DisplayFor(modelItem => parentRequestListViewModel.Request.SubUnit) @Html.DisplayFor(modelItem => parentRequestListViewModel.SubUnitType.UnitTypeDescription)<br />
                    @Html.DisplayFor(modelItem => parentRequestListViewModel.Request.SubSubUnit) @Html.DisplayFor(modelItem => parentRequestListViewModel.SubSubUnitType.UnitTypeDescription)
                </td>
                <td>
                    @{
                        var ItemCost = parentRequestListViewModel.Request.Cost;
                        var decItemCost = (decimal)ItemCost;
                        var stringItemCost = decItemCost.ToString("C02");
                    }
                    @stringItemCost
                </td>
                <td>
                    @Html.DisplayFor(modelItem => parentRequestListViewModel.Vendor.VendorEnName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => parentRequestListViewModel.ParentCategory.ParentCategoryDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => parentRequestListViewModel.ParentRequest.OrderDate)
                </td>
            </tr>
        }
    </tbody>
                }
        </table>