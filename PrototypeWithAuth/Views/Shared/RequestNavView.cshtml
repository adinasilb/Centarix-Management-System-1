@using PrototypeWithAuth.AppData
@{
    ViewData["Title"] = "RequestNavView";
    Layout = "~/Views/Shared/View.cshtml";

    AppUtility.RequestPageTypeEnum pageType = AppUtility.RequestPageTypeEnum.None;
    if (TempData["PageType"] != null)
    {
        pageType = (AppUtility.RequestPageTypeEnum)Enum.Parse(typeof(AppUtility.RequestPageTypeEnum), TempData["PageType"].ToString());
    }

    var categoryType = AppUtility.CategoryTypeEnum.Lab;

    bool Cart = false;
    bool Requests = false;
    bool Inventory = false;
    bool Summary = false;
    switch (pageType)
    {
        case AppUtility.RequestPageTypeEnum.Request:
            Requests = true;
            break;
        case AppUtility.RequestPageTypeEnum.Inventory:
            Inventory = true;
            break;
        case AppUtility.RequestPageTypeEnum.Summary:
            Summary = true;
            break;
        case AppUtility.RequestPageTypeEnum.Cart:
            Cart = true;
            break;
    }

    string originalNavClasses = " ";
    string activeClass = " font-weight-bold activeNavLink  ";
    string lastItem = originalNavClasses;
    string type = originalNavClasses;
    string vendor = originalNavClasses;
    string owner = originalNavClasses;
    string location = originalNavClasses;
    string cart = originalNavClasses;
    string addItem = originalNavClasses;
    string notifications = originalNavClasses;

    var SidebarType = TempData["SidebarTitle"];
    switch (SidebarType)
    {
        case AppUtility.RequestSidebarEnum.LastItem:
            lastItem += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.Type:
            type += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.Vendor:
            vendor += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.Owner:
            owner += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.Location:
            location += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.Cart:
            cart += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.AddItem:
            addItem += activeClass;
            break;
        case AppUtility.RequestSidebarEnum.Notifications:
            notifications += activeClass;
            break;
    }

    //not using this right now --> see with Faige if we should put it back in
    var SendEmail = "0";
    if (TempData["SendEmail"] != null)
    {
        SendEmail = TempData["SendEmail"].ToString();
    }

    //redo --> not used
    var CancelledEmail = false;
    if (TempData["CancelledEmail"] != null && TempData["CancelledEmail"].ToString().Equals("True"))
    {
        CancelledEmail = true;
    }

    if (TempData["RequestID"] == null)
    {
        TempData["RequestID"] = 0;
    }

}

@{
    if (TempData["SuccessMessage"] != null)
    {
        <div>@TempData["SuccessMessage"].ToString()</div>
    }
}


<div style="display: flex">
    <div style="min-width: 100px; min-height:100rem; padding: 5px;" class=" d-md-block sidebar-shadow   navbar-expand-lg navbar-light bg-white text-center ourNavBar ">
        @*<nav class="navbar navbar-expand-lg">*@
        <ul class="nav flex-column nav-pills nav-stacked mt-4">

            @if (Requests || Inventory || Summary)
            {

                <li class="nav-item mb-1 @lastItem">
                    <a href="@Url.ActionLink("Index", "Requests", new { @PageType = pageType })" class="bold-hover-effects opac87 p-1 add-item"><img src="~/images/css/inventory/sidebar/list.png" alt="Last item" /><br />Last Item</a>
                </li>
            }

            @if (Requests || Inventory || Summary)
            {
                <li class="nav-item my-1 @addItem">
                    <a href="@Url.ActionLink("CreateModalView", "Requests", new { @PageType = pageType })" class="bold-hover-effects opac87 p-1">  <img src="~/images/css/inventory/sidebar/add_circle_outline-2.png" alt="Add Item" /><br />Add Item</a>
                </li>
            }
            @if (Requests || Inventory || Summary)
            {
                <li class="nav-item bold-hover-effects my-1 @type">
                    <a href="@Url.ActionLink("Index", "ProductSubcategories", new { @PageType = pageType, @categoryType=1 })" class="bold-hover-effects opac87 p-1"><img src="~/images/css/inventory/sidebar/type.png" alt="Alternate Text" /><br />Type</a>
                </li>

            }
            @if (Requests || Inventory || Summary)
            {

                <li class="nav-item my-1 @vendor">
                    <a href="@Url.ActionLink("Index", "Vendors", new { @PageType = pageType,  @categoryType= categoryType })" class="bold-hover-effects opac87 p-1"><img src="~/images/css/inventory/sidebar/vendor.png" alt="Vendors" /><br />Vendors</a>
                </li>
            }
            @if (Requests || Inventory)
            {
                @*have to create contorller for application user?*@

                <li class="nav-item my-1 @owner">
                    <a href="@Url.ActionLink("Index", "ApplicationUsers", new { @PageType = pageType ,  @categoryType=categoryType})" class="bold-hover-effects opac87 p-1"><img src="~/images/css/inventory/sidebar/owner.png" alt="Owner" /><br />Owner</a>
                </li>
            }
            @if (Inventory || Summary)
            {

                @*Redo the location class in the controller*@
                <li class="nav-item my-1 @location">
                    <a href="@Url.ActionLink("IndexForInventory", "Locations", new { @PageType = pageType })" class="bold-hover-effects opac87 p-1"><img src="~/images/css/inventory/sidebar/location.png" alt="Location" /><br />Location</a>
                </li>
            }
            @if (Cart)
            {
                <li class="nav-item  mt-4 mb-4 bold-hover-effects">           
                    <a href="@Url.ActionLink("Cart", "Requests", new { @PageType = pageType })" class="@cart bold-hover-effects opac87 p-1"> <i class=" icon-shopping_cart-24px" style="font-size:1.5rem;"></i><br />Cart</a>
                </li>
                <li class="nav-item mb-3 bold-hover-effects">                  
                    <a href="@Url.ActionLink("NotificationsView", "Requests")" class="@notifications bold-hover-effects opac87 p-1">  <i class=" icon-notifications-24px" style=" font-size: 1.75rem;  "></i><br/>Notifications</a>
                </li>
            }

        </ul>
        @*</nav>*@
    </div>
    <div style="flex-grow: 1" class="mt-5 ml-5">
        <!--class="col-md-10 border-left"-->
        @RenderBody()
    </div>
</div>


<!-- Confirm Email Modal -->
<div class="modal confirm-email-modal" id="myModal">
</div>
