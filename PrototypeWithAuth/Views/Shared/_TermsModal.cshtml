@model PrototypeWithAuth.ViewModels.TermsViewModel
@using PrototypeWithAuth.AppData
@{
    Layout = null;
}

@{ await Html.RenderPartialAsync("_TempRequestHiddenFors", Model.TempRequestListViewModel);}

<script src="~/js/TermsModal.js"></script>
<script src="~/js/site.js"></script>
<script src="~/js/Validation/TermsModalFormValidation.js"></script>
<script src="~/js/validate.js"></script>
<script src="~/js/InitializeDatePicker.js"></script>

<input type="hidden" asp-for="ParentRequest.ParentRequestID" />
<div class="modal-header modal-header-padding">
    <div class="col-10 float-left">
        <span class="heading-1">Terms</span>
    </div>
</div>
<div class="modal-body">
    <div class="container">
        <div class="row error-message text-danger-centarix">
            @{ await Html.RenderPartialAsync("_ErrorMessage", Model.ErrorMessage); }
        </div>
        <div class="row">

            <div class="col-3">
                <label class="control-label">Terms</label>
                @Html.DropDownListFor(m => m.SelectedTerm,
                    Model.TermsList,
                    new { @class = "mdb-select custom select-dropdown form-control-plaintext Terms", @id = "Terms", @searchable = "default value" }
                )

            </div>

            <div class="col-3">
                @{
                    var currency = Model.TempRequestListViewModel.RequestIndexObject.SelectedCurrency == AppUtility.CurrencyEnum.NIS ? "&#x20aa;" : "&#36;";
                }
                <label asp-for="ParentRequest.Shipping" class="control-label"></label>
                <div class="input-group">
                    <span class="input-group-text pr-2">@Html.Raw(currency)</span>
                    <input asp-for="ParentRequest.Shipping" class="form-control-plaintext border-bottom" value="" />
                    <span asp-validation-for="ParentRequest.Shipping" class="text-danger-centarix"></span>
                </div>
            </div>
            @{var dNone = "d-none";
                @*var disabled = true;*@}
            @*@if (Model.SelectedTerm == 5)
                {
                    dNone = "";
                    disabled = false;
                }*@
            <div class="col-3 @dNone installments-amount-block">
                <label asp-for="Installments" class="control-label"></label>
                <input asp-for="Installments" disabled class="form-control-plaintext border-bottom" />
                <span asp-validation-for="Installments" class="text-danger-centarix"></span>
            </div>
            <div class="col-3 @dNone installments-amount-block">
                <div class="form-group ">
                    <label asp-for="@Model.InstallmentDate" class="control-label m-0 mt-2" style="width:100%;"></label>
                    <input asp-for="@Model.InstallmentDate" type="text" class="form-control-plaintext border-bottom align-with-select m-0 p-0 datepicker" disabled asp-format="@AppUtility.AspDateFormatString" data-val="@Model.InstallmentDate.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="@Model.InstallmentDate" class="text-danger-centarix"></span>
                </div>
            </div>

        </div>
        @if (Model.TempRequestListViewModel.TempRequestViewModels.FirstOrDefault().Request.OrderMethod.DescriptionEnum.ToString() != AppUtility.OrderMethod.AlreadyPurchased.ToString())
        {
            <div class="row">
                <div class="col-12">
                    <label class="control-label">Notes to the supplier</label>
                    <input asp-for="ParentRequest.NoteToSupplier" class="form-control-plaintext border-bottom" />
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <input type="hidden" id="vendor-orders-email" value="@Model.TempRequestListViewModel.TempRequestViewModels.FirstOrDefault().Request.Product.Vendor.OrdersEmail" />
                    <label class="control-label">Send to: (Add up to 5 email addresses@*- including the suppliers email address*@)</label>
                    <input class="form-control-plaintext border-bottom" type="text" id="allEmails" />
                    @for (int e = 0; e < Model.EmailAddresses.Count; e++)
                    {
                        var supplierEmailClass = "emailaddresses ";

                        <input type="hidden" asp-for="EmailAddresses[e]" class="@supplierEmailClass" />
                    }
                    <span class=" no-email-error text text-danger-centarix d-none">If no email is selected the order form will be sent to the vendor's default email</span>
                </div>
            </div>
        }

    </div>
</div>
<input type="hidden" asp-for="ParentRequest.OrderDate" />
<input type="hidden" asp-for="ParentRequest.OrderNumber" />
<input type="hidden" asp-for="ParentRequest.ApplicationUserID" />
<input type="hidden" asp-for="RedirectAction" />
<script>
    //$(document).ready(function () {
    //    $('.all-mail').prepend('<span class="email-ids">' + $("#vendor-orders-email").val() + '<span class="remove-email">&times;</span></span>');
    //});

    $(".terms .mdb-select").materialSelect()
    //$('.all-mail').prepend('<span class="email-ids supplier-email">' + $("#vendor-orders-email").val() + '</span>');
    
    $(".isSupplier").val($("#vendor-orders-email").val());
    if ($(".all-mail").length == 0) {
        let data = [
            $("#vendor-orders-email").val()
        ]
        $("#allEmails").email_multiple({
            data: data
        })
        var newEmailLine = $(".enter-mail-id");
        newEmailLine.removeAttr('placeholder');
        newEmailLine.addClass('form-control-plaintext');
        newEmailLine.addClass('border-bottom');
    }
</script>
<script>





    $.fn.CheckListLength = function () {
        //Disable if 5 emails
        var listlength = $(".email-ids").length;
      
        if (listlength >= 5) {
            $(".enter-mail-id").attr("disabled", true);
        }
        else {
            if (listlength == 0) {
                $(".no-email-error").removeClass("d-none");
            }
            else {
                $(".no-email-error").addClass("d-none")
            }
            $(".enter-mail-id").attr("disabled", false);
        }
    }

    $.fn.RemoveFromHiddenIds = function (emailValue) {
        $(".emailaddresses[value='" + emailValue + "']:first").val('');
    }

    $.fn.AddToHiddenIds = function (emailValue) {
        $(".emailaddresses[value='']:first").val(emailValue);
    }

    $(".submitTerms").off('click').on("click", function (e) {
        e.preventDefault();
        console.log("submit reorder");
        $(".termsModalForm").data("validator").settings.ignore = "";
        var valid = $(".termsModalForm").valid();
        console.log("valid form: " + valid)
        if (!valid) {

            if (!$('.activeSubmit').hasClass('disabled-submit')) {
                $('.activeSubmit').addClass('disabled-submit')
            }

        }
        else {
            $('.activeSubmit').removeClass('disabled-submit')
            $(".submitTerms").prop('disabled', true)
            $("#loading").show();
            $("#RedirectAction").val(window.location.href);
            console.log("$('#SectionType').val() : " + $("#masterSectionType").val())
            var formData = new FormData($(".termsModalForm")[0]);
            $.ajax({
                contentType: false,
                processData: false,
                async: true,
                url: "/Requests/TermsModal",
                data: formData,
                traditional: true,
                type: "POST",
                cache: true,
                timeout: 7200000,
                success: function (data) {
                    $(".submitTerms").prop('disabled', false)
                    //this if is not necessary right now because everythin is always _indextabledata
                    var sidebarType = $('#masterSidebarType').val();
                    var viewClass = "_IndexTableData";
                    if (sidebarType == "Quotes" || sidebarType == "Orders" || sidebarType == "Cart") {
                        viewClass = "_IndexTableDataByVendor";
                    }
                    if (data == "") {
                        if (sidebarType == "Add") {
                            window.location.href = "/Requests/?PageType=RequestRequest&SectionType=Requests&SidebarType=List"
                        }
                        else {
                            $.fn.ajaxPartialIndexTable( "/Requests/" + viewClass, "." + viewClass, "POST", formData, "terms, step-1, reorder-item");
                        }
                    }
                    else {
                        $('.termsModalForm .temprequesthiddenfors').html('');
                        $.fn.OpenModal('emailModal', 'confirm-email', data);
                    }
                    $("#loading").hide();
                    return true;
                },
                error: function (jqxhr) {
                    console.log('terms error')
                    /*if (jqxhr.status == 500) {
                        $.fn.OpenModal('termsModal', 'terms', jqxhr.responseText);
                    }*/
                    $('.termsModal .error-message').html(jqxhr.responseText)
                    $(".submitTerms").prop('disabled', false)
                    $("#loading").hide();
                    return true;
                }
            });
        }
        $(".termsModalForm").data("validator").settings.ignore = ':not(select:hidden, .location-error:hidden,input:visible, textarea:visible)';

        //return false;
    });</script>
<!-- Multiple email js -->
