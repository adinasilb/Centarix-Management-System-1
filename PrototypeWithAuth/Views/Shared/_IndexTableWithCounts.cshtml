@model PrototypeWithAuth.ViewModels.RequestIndexPartialViewModel
@using PrototypeWithAuth.AppData
@{


    @*string newActiveClass = "";*@
  

    @*newActiveClass = "new-button pt-4 ";*@
    string orderedActiveClass = "new-button pt-4 ";
    string receivedActiveClass = "new-button pt-4 ";
    string approvedActiveClass = "new-button pt-4 ";
    string recurringExpenseActiveClass = "new-button pt-4 ";

    var activeClasses = "new-button active  pt-4";
    if (Model.PageType == AppUtility.PageTypeEnum.OperationsRequest)
    {
        activeClasses += " new-oper-button ";
        //newActiveClass += " new-oper-button ";
        orderedActiveClass += " new-oper-button ";
        receivedActiveClass += " new-oper-button ";
        recurringExpenseActiveClass += " new-oper-button ";
    }

    switch (Model.TabName)
    {

        case AppUtility.IndexTabs.Ordered:
            orderedActiveClass = activeClasses;
            break;
        case AppUtility.IndexTabs.Received:
            receivedActiveClass = activeClasses;
            break;
        case AppUtility.IndexTabs.Requests:
            approvedActiveClass = activeClasses;
            break;
        case AppUtility.IndexTabs.RecurringExpenses:
            recurringExpenseActiveClass = activeClasses;
            break;
    }


}
<div class="">
    <div class="item-table @form">
        <ul class="pl-0">
            <li class="list-inline-item m-0">
                <a class="@approvedActiveClass countStatus" value="@AppUtility.IndexTabs.Requests.ToString()" data-val="6" href="#"> <i class="new-icon icon-approve-24px"></i><label class="new-button-text">@AppUtility.IndexTabs.Requests.ToString()</label> </a>

            </li>
            <li class="list-inline-item m-0">
                <a class="@orderedActiveClass countStatus" value="@AppUtility.IndexTabs.Ordered.ToString()" data-val="2" href="#"> <i class="new-icon icon-centarix-icons-03"></i><label class="new-button-text">@AppUtility.IndexTabs.Ordered.ToString()</label> </a>
            </li>

            <li class="list-inline-item ">
                <a class="@receivedActiveClass countStatus" value="@AppUtility.IndexTabs.Received.ToString()" data-val="3" href="#"> <i class="icon-done-24px new-icon"></i><label class="new-button-text">@AppUtility.IndexTabs.Received.ToString()</label> </a>
            </li>
            @if (Model.PageType == AppUtility.PageTypeEnum.OperationsRequest)
            {
                <li class="list-inline-item ">
                    <a class="@recurringExpenseActiveClass countStatus" value="@AppUtility.IndexTabs.RecurringExpenses.ToString()" href="#"> <i class="icon-auto_awesome_motion_black_24dp-1 new-icon"></i><label class="new-button-text">@AppUtility.GetDisplayNameOfEnumValue(AppUtility.IndexTabs.RecurringExpenses.ToString())</label> </a>
                </li>
            }
            @if (Model.SideBarType != AppUtility.SidebarEnum.Search)
            {
                <li class="list-inline-item m-0">
                    @{
                        await Html.RenderPartialAsync("_IndexFilter", Model.InventoryFilterViewModel);
                    }
                </li>
            }
        </ul>
    </div>
</div>
<div class="_IndexTable">
    @{
        await Html.RenderPartialAsync("_IndexTable", Model);
    }
</div>
<script src="~/js/IndexTableWithCounts.js"></script>