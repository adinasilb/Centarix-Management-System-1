@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using PrototypeWithAuth.AppData

@{
    var modalType = Model.ModalType;
    var markReadOnlyClass = "";
    var disabledDollarProperty = "disabled";
    var disabledShekelProperty = "";
    var hideVat = "";
    var hideNoQuote = "";
    var disableShekel = "";
    var disableDollar = "disabled-text";
    var dollarReadOnly = "";
    var shekelReadOnly = "";
    var disableIfNotReorder = "disabled";
    var markPriceUnitReadonly = "";
    var canBeDisabled = "can-be-disabled";

    var productOrderType = Model.OrderType.ToString();
    //var shekelSelected = "selected";
    //var disabledProperty = "";
    if (modalType == AppUtility.RequestModalType.Edit || modalType == AppUtility.RequestModalType.Summary)
    {
        //disabledProperty = "disabled";
        markReadOnlyClass = "mark-readonly";
        shekelReadOnly = "mark-readonly";
    }
    if (modalType != AppUtility.RequestModalType.Create)
    {
        if (Model.Requests[0].Currency.Equals("USD"))
        {
            disableShekel = "disabled-text";
            disableDollar = "";
            disabledDollarProperty = "";
            disabledShekelProperty = "readonly";
            shekelReadOnly = "";
            dollarReadOnly = "mark-readonly";
            //shekelSelected = "";
        }
        if (AppUtility.GetPermissionsForPriceTabMarkReadonly(Model.RequestRoles, Model.Requests.FirstOrDefault()) && Model.ModalType != AppUtility.RequestModalType.Reorder)
        {
            markPriceUnitReadonly = "mark-roles-readonly";
        }
    }
    if (modalType != AppUtility.RequestModalType.Create && (Model.Requests[0].QuoteStatusID == 2 || Model.Requests[0].QuoteStatusID == 1))
    {
        hideNoQuote = "d-none";
    }
    if (Model.Requests[0].IncludeVAT == false)
    {
        hideVat = "d-none";
    }
    if (Model.ModalType == AppUtility.RequestModalType.Reorder)
    {
        disableIfNotReorder = "";
    }
    var color = "order-inv-color";
    switch (Model.SectionType)
    {
        case AppUtility.MenuItems.Accounting:
            color = "accounting-color";
            break;
        case AppUtility.MenuItems.LabManagement:
            color = "lab-man-color";
            break;
        case AppUtility.MenuItems.Protocols:
            color = "protocols-color";
            break;
        case AppUtility.MenuItems.Operations:
            color = "oper-color";
            break;
    };
    var showUnitAmoutWarning = "";
    if(Model.Requests.FirstOrDefault().RequestStatusID==3)
    {
        showUnitAmoutWarning ="showUnitAmountWarning";
    }
}
<div class="row" id="edit">
    <div class="col-md-4  RequestUnitCard ">
        <div class="border h-100 pt-4" @*style="padding-right: 2rem; padding-left: 2rem;"*@>
            <div class="mx-2rem">
                <div class="row">
                    <div class="col-md-4 form-group">
                        <label asp-for="Requests[0].Unit" class="control-label"></label>
                        <input type="number" asp-for="@Model.Requests[0].Unit" value="@(AppUtility.ConvertIntToString(Model.Requests[0].Unit))" old-val="@Model.Requests[0].Unit.ToString()" class="unit form-control-plaintext border-bottom @markReadOnlyClass @markPriceUnitReadonly @showUnitAmoutWarning "
                               id="unit" />
                        @*@Html.EditorFor(vm => vm.Requests[0].Unit,
        new { htmlAttributes = new { @class = "form-control-plaintext border-bottom " + @markReadOnlyClass @markPriceUnitReadonly, @min = "1", @id = "unit", @value = AppUtility.ConvertIntToString(Model.Requests[0].Unit) } })*@
                        <span asp-validation-for="Requests[0].Unit" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-8 form-group dropdown-select-div">
                        <label asp-for="Requests[0].Product.UnitType" class="control-label"></label>
                        @*<select asp-for="Request.UnitTypeID" class="mdb-select custom select-dropdown form-control-plaintext @markReadOnlyClass">
                                <option value=""></option>
                                @foreach (var unitparenttype in Model.UnitTypes)
                                {
                                    <optgroup label="@unitparenttype.Key.UnitParentTypeDescription">
                                        @foreach (var unittype in unitparenttype)
                                        {
                                            <option value="@unittype.UnitTypeID">@unittype.UnitTypeDescription</option>
                                        }
                                    </optgroup>
                                }
                            </select>*@
                        @Html.DropDownList(
                            "Requests[0]."+productOrderType+".UnitTypeID",
                                 new SelectList(Model.UnitTypes, "UnitTypeID", "UnitTypeDescription", Model.Requests[0].Product.UnitTypeID, "UnitParentType.UnitParentTypeDescription"),
                            "",
                            htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext unit-type-select " + markReadOnlyClass,
                            @id = "unitTypeID" }
                            )
                        <span asp-validation-for="Requests[0].Product.UnitType" class="text-danger-centarix"></span>
                    </div>
                </div>
                <div class="form-group requestPriceQuote @hideNoQuote">
                    @{
                        var unitLabel = Model.Requests[0].Product.UnitType != null ? Model.Requests[0].Product.UnitType.UnitTypeDescription : "Unit";
                    }
                    <label class="control-label price-per-unit-label" style="text-transform: none">Price Per @unitLabel:</label>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text border-bottom request-cost-dollar-icon @disableDollar">&#36;</span>
                                <input type="text" class="form-control-plaintext border-bottom @dollarReadOnly @markPriceUnitReadonly @disableDollar requestPriceQuote" name="unit-price-dollars"
                                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].ExchangeRate == 0 ? 0 : Math.Round(Model.Requests[0].PricePerUnit / Model.Requests[0].ExchangeRate,2)))"
                                       id="unit-price-dollars" @disabledDollarProperty />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text request-cost-shekel-icon @disableShekel">&#x20aa;</span>
                                <input type="text" class="form-control-plaintext border-bottom requestPriceQuote @shekelReadOnly @disableShekel @markPriceUnitReadonly " name="unit-price-shekel"
                                       id="unit-price-shekel" value="@(AppUtility.ConvertIntToString(Math.Round(Model.Requests[0].PricePerUnit, 2)))" @disabledShekelProperty />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @{var cardDisplayNoneSub = "d-none";
        var cardDisabledSub = "disabled";
        var plusDisplayNoneSub = "";
        //var disabled = "";
        var subMarkReadOnly = "";
        if (Model.Requests[0].Product.SubUnit > 0)
        {
            cardDisplayNoneSub = "";
            cardDisabledSub = "";
            plusDisplayNoneSub = "d-none";
            subMarkReadOnly = markReadOnlyClass;
            //disabled = "disabled";
        }
    }
    <div class="col-4 pl-0 RequestSubunitCard">
        <div class="border h-100 ">
            <button type="button" class="close sub-close @cardDisplayNoneSub pr-2 pt-2  @markReadOnlyClass " aria-label="Close" style="/* display: flex; */float: right;">
                <span aria-hidden="true">×</span>
            </button>
            <div class="mx-2rem addSubUnitCard mt-4 @plusDisplayNoneSub">
                <div class="row " style="display:initial;">
                    <div class="col-8 offset-2 text-center font-weight-light">
                        <input type="button" value="+" class=" addSubUnit btn m-0 p-0 no-box-shadow @markReadOnlyClass " @disableIfNotReorder style="font-size: 5rem; line-height:normal" />
                        <br><span class="text-capitalize @color text">add sub unit</span>
                    </div>
                </div>
            </div>
            <div class="mx-2rem  subUnitsCard @cardDisplayNoneSub mt-4">


                <div class="row ">
                    <div class="col-md-4 pl-0 form-group">
                        <label asp-for="Requests[0].Product.SubUnit" class="control-label"></label>
                        <input type="number" name="Requests[0].@(productOrderType).SubUnit" value="@(Model.Requests[0].Product.SubUnit==0? "" : AppUtility.TrimZeros(Model.Requests[0].Product.SubUnit??0).ToString())" class="form-control-plaintext border-bottom @subMarkReadOnly "
                               id="subUnit" @disableIfNotReorder @cardDisabledSub />
                        <span asp-validation-for="Requests[0].Product.SubUnit" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-8 form-group">
                        <label asp-for="Requests[0].Product.SubUnitType" class="control-label"></label>
                        @if (Model.ModalType != AppUtility.RequestModalType.Reorder || cardDisabledSub == "disabled")
                        {
                            @Html.DropDownList(
                                "Requests[0]."+productOrderType+".SubUnitTypeID",
                                 new SelectList(Model.UnitTypes, "UnitTypeID", "UnitTypeDescription", Model.Requests[0].Product.SubUnitTypeID, "UnitParentType.UnitParentTypeDescription"),
                                "",
                                htmlAttributes: new
                                    {
                                        @class = "mdb-select custom select-dropdown form-control-plaintext subunit-type-select " + @subMarkReadOnly ,
                                        @disabled = "disabled",
                                        @id = "subUnitTypeID"
                                    }
                                )
                        }
                        else
                        {
                            @Html.DropDownList(
                                "Requests[0]."+productOrderType+".SubUnitTypeID",
                                 new SelectList(Model.UnitTypes, "UnitTypeID", "UnitTypeDescription", Model.Requests[0].Product.SubUnitTypeID, "UnitParentType.UnitParentTypeDescription"),
                                "",
                                htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext subunit-type-select " + @subMarkReadOnly,
                                 @id = "subUnitTypeID"})
                        }
                        <span asp-validation-for="Requests[0].Product.SubUnitType" class="text-danger-centarix"></span>
                    </div>
                </div>

                <div class="form-group requestPriceQuote @hideNoQuote">
                    @{
                        var subunitLabel = Model.Requests[0].Product.SubUnitType != null ? Model.Requests[0].Product.SubUnitType.UnitTypeDescription : "Subunit";
                    }
                    <label class="control-label price-per-subunit-label" style="text-transform: none">Price Per @subunitLabel:</label>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text disabled-text" disabled>&#36;</span>
                                <input type="text" class="form-control-plaintext border-bottom requestPriceQuote disabled-text @canBeDisabled" disabled name="subunit-price-dollars" id="subunit-price-dollars"
                                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].ExchangeRate == 0 || Model.Requests[0].Product.SubSubUnit== null ? 0 :
                                        Math.Round(AppUtility.GetPricePerSubUnit(Model.Requests[0]) / Model.Requests[0].ExchangeRate,2)))" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text requestPriceQuote disabled-text" disabled>&#x20aa;</span>
                                <input type="text" class="form-control-plaintext border-bottom disabled-text  @canBeDisabled" disabled name="subunit-price-shekel" id="subunit-price-shekel"
                                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].Product.SubSubUnit!= null?Math.Round(AppUtility.GetPricePerSubUnit(Model.Requests[0]), 2):0))" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if(Model.SectionType != AppUtility.MenuItems.Operations)
    {
        var cardDivDisplayNone = "d-none";
        var cardDisplayNoneSubSub = "d-none";
        var cardDisabledSubSub = "disabled";
        var plusDisplayNoneSubSub = "";
        //var subsubdisabled = "";
        var subsubMarkReadOnly = "";
        if (Model.Requests[0].Product.SubUnit > 0)
        {
            cardDivDisplayNone = "";
            if (Model.Requests[0].Product.SubSubUnit > 0)
            {
                plusDisplayNoneSubSub = "d-none";
                cardDisabledSubSub = "";
                cardDisplayNoneSubSub = "";
                subsubMarkReadOnly = markReadOnlyClass;
                //subsubdisabled = "disabled";
            }
        }
    <div class="col-4 pl-0 RequestSubsubunitCard @cardDivDisplayNone">
        <div class="border h-100">
            <button type="button" class="close subsub-close @cardDisplayNoneSubSub pr-2 pt-2 @markReadOnlyClass" aria-label="Close" style="
    /* display: flex; */
    float: right;
">
                <span aria-hidden="true">×</span>
            </button>
            <div class="mx-2rem addSubSubUnitCard mt-4 @plusDisplayNoneSubSub">
                <div class="row " style="display:initial;">
                    <div class="col-8 offset-2 text-center font-weight-light">

                        <input type="button" value="+" class=" addSubSubUnit btn m-0 p-0 no-box-shadow @markReadOnlyClass" @disableIfNotReorder style="font-size: 5rem; line-height:normal" />
                        <br>
                        <span class="text-capitalize @color text">add sub unit</span>
                    </div>
                </div>
            </div>
            <div class="mx-2rem  subSubUnitsCard mt-4 @cardDisplayNoneSubSub">
                <div class="row">
                    <div class="col-md-4 pl-0 form-group">
                        <label asp-for="Requests[0].Product.SubSubUnit" class="control-label"></label>
                        <input type="number" name="Requests[0].@(productOrderType).SubSubUnit" value="@(Model.Requests[0].Product.SubUnit==0? "" : AppUtility.TrimZeros(Model.Requests[0].Product.SubUnit??0).ToString())" class="form-control-plaintext border-bottom
                               @subsubMarkReadOnly " @cardDisabledSubSub @disableIfNotReorder id="subSubUnit" />
                        <span asp-validation-for="Requests[0].Product.SubSubUnit" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-8 form-group">
                        <label asp-for="Requests[0].Product.SubSubUnitType" class="control-label"></label>
                        @if (Model.ModalType != AppUtility.RequestModalType.Reorder || cardDisabledSubSub == "disabled")
                        {
                            @Html.DropDownList(
                                "Requests[0]."+productOrderType+".SubSubUnitTypeID",
                                 new SelectList(Model.UnitTypes, "UnitTypeID", "UnitTypeDescription", Model.Requests[0].Product.SubSubUnitTypeID, "UnitParentType.UnitParentTypeDescription"),
                                "",
                                htmlAttributes: new
                                     {
                                         @class = "mdb-select custom select-dropdown form-control-plaintext sub-subunit-type-select " + @subsubMarkReadOnly,
                                    @disabled = "disabled",
                                         @id = "subSubUnitTypeID"
                                     })
                        }
                        else
                        {
                            @Html.DropDownList(
                                "Requests[0]."+productOrderType+".SubSubUnitTypeID",
                                 new SelectList(Model.UnitTypes, "UnitTypeID", "UnitTypeDescription", Model.Requests[0].Product.SubSubUnitTypeID, "UnitParentType.UnitParentTypeDescription"),
                                "",
                                htmlAttributes: new
                                     {
                                         @class = "mdb-select custom select-dropdown form-control-plaintext sub-subunit-type-select " + @subsubMarkReadOnly,
                                         @id = "subSubUnitTypeID"
                                     })
                        }
                        <span asp-validation-for="Requests[0].Product.SubSubUnitType" class="text-danger-centarix"></span>
                    </div>
                </div>

                <div class="form-group requestPriceQuote @hideNoQuote">
                    @{
                        var subsubunitLabel = Model.Requests[0].Product.SubSubUnitType != null ? Model.Requests[0].Product.SubSubUnitType.UnitTypeDescription : "Sub-Subunit";
                    }
                    <label class="control-label price-per-sub-subunit-label" style="text-transform: none">Price Per @subsubunitLabel:</label>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text disabled-text" disabled>&#36;</span>
                                <input type="text" class="form-control-plaintext border-bottom requestPriceQuote disabled-text  @canBeDisabled" disabled name="subsubunit-price-dollars" id="subsubunit-price-dollars"
                                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].ExchangeRate == 0 || Model.Requests[0].Product.SubSubUnit==null ? 0 :
                                        Math.Round(AppUtility.GetPricePerSubSubUnit(Model.Requests[0])/ Model.Requests[0].ExchangeRate,2)))" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group ">
                                <span class="input-group-text requestPriceQuote disabled-text" disabled>&#x20aa;</span>
                                <input type="text" class="form-control-plaintext border-bottom disabled-text  @canBeDisabled" name="subsubunit-price-shekel" id="subsubunit-price-shekel" disabled
                                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].Product.SubSubUnit!=null?Math.Round(AppUtility.GetPricePerSubSubUnit(Model.Requests[0]) ):0))" />
                                <span asp-validation-for="Requests[0].Product.SubSubUnit" class="text-danger-centarix"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    }
</div>


<div class="row requestPriceQuote @hideNoQuote">
    <div class="col-md-4 m-0 p-0">
        <div class="row m-0 p-0">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Requests[0].Cost" class="control-label">Total:</label>
                    <div class="input-group">
                        <span class="input-group-text request-cost-dollar-icon @disableDollar">&#36;</span>
                        <input type="text" class="form-control-plaintext border-bottom @dollarReadOnly @markPriceUnitReadonly @canBeDisabled @disableDollar requestPriceQuote" id="sum-dollars" name="sum-dollars"
                               value="@(AppUtility.ConvertIntToString((Model.Requests[0].ExchangeRate == 0 ? 0 : Math.Round((Model.Requests[0].Cost??0) / Model.Requests[0].ExchangeRate,2))))" @disabledDollarProperty />
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label"></label>
                    <div class="input-group">
                        <span class="input-group-text request-cost-shekel-icon @disableShekel @markPriceUnitReadonly">&#x20aa;</span>
                        @if (disabledShekelProperty != "")
                        {
                            <input type="text" asp-for="Requests[0].Cost" value="@AppUtility.ConvertIntToString(Model.Requests[0].Cost??0)" class="form-control-plaintext border-bottom  @disableShekel requestPriceQuote" min="1" readonly id="cost" />
                        }
                        else
                        {
                            <input type="text" asp-for="Requests[0].Cost" value="@AppUtility.ConvertIntToString(Model.Requests[0].Cost??0)" class="form-control-plaintext border-bottom @shekelReadOnly @markPriceUnitReadonly requestPriceQuote" min="1" id="cost" />

                        }
                    </div>
                </div>
            </div>
        </div>

        <span class="text-danger-centarix" asp-validation-for="Requests[0].Cost"></span>
    </div>
    <div class="col-md-2 vat-info @hideVat">
        <div class="form-group">
            <label asp-for="Requests[0].VAT" class="control-label"></label>
            <div class="input-group">
                <span class="input-group-text disabled-text">&#36;</span>
                <input type="text" class="form-control-plaintext border-bottom vatInDollars disabled-text requestPriceQuote" id="vatInDollars" disabled
                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].ExchangeRate == 0 ? 0 : Math.Round(Model.Requests[0].VAT / Model.Requests[0].ExchangeRate, 2)))" />
            </div>
        </div>
    </div>
    <div class="col-md-2 vat-info @hideVat">
        <div class="form-group">
            <label class="control-label"></label>
            <div class="input-group">
                <span class="input-group-text disabled-text">&#x20aa;</span>
                <input type="text" asp-for="Requests[0].VAT" value="@AppUtility.ConvertIntToString(Model.Requests[0].VAT)" class="form-control-plaintext border-bottom disabled-text requestPriceQuote" id="vat" disabled />
                <span class="text-danger-centarix" asp-validation-for="Requests[0].VAT"></span>
            </div>
        </div>
    </div>
    <div class="col-md-2 vat-info @hideVat">
        <div class="form-group">
            <label class="control-label">Total + VAT:</label>
            <div class="input-group">
                <span class="input-group-text disabled-text">&#36;</span>
                <input type="text" class="form-control-plaintext border-bottom disabled-text requestPriceQuote" id="sumPlusVat-Dollar" name="sumPlusVat-Dollar" disabled
                       value="@(AppUtility.ConvertIntToString(Model.Requests[0].ExchangeRate == 0 ? 0 : Math.Round(Model.Requests[0].TotalWithVat/Model.Requests[0].ExchangeRate,2)))" />
            </div>
        </div>
    </div>
    <div class="col-md-2 vat-info @hideVat">
        <div class="form-group">
            <label class="control-label"></label>
            <div class="input-group">
                <span class="input-group-text disabled-text">&#x20aa;</span>
                <input type="text" asp-for="Requests[0].TotalWithVat" value="@AppUtility.ConvertIntToString(Model.Requests[0].TotalWithVat)" class="form-control-plaintext border-bottom disabled-text" id="sumPlusVat-Shekel" name="sumPlusVat-Shekel" disabled />
            </div>
        </div>
    </div>
</div>