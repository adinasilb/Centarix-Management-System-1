@model PrototypeWithAuth.ViewModels.RequestIndexPartialViewModel
@using PrototypeWithAuth.AppData
@{

    string nonProprietaryText = "";
    string proprietaryText = "";


    string nonProprietaryClass = "";
    string proprietaryClass = "";


    int requestStatusID = Model.RequestStatusID;

    nonProprietaryText = "Main";// [" + Model.NonProprietaryCount + "]";
    proprietaryText = "Samples";// [" + Model.ProprietaryCount + "]";


    nonProprietaryClass = "new-button pt-4 ";
    proprietaryClass = "new-button pt-4 ";


    var activeClasses = "new-button active  pt-4";
    if (Model.PageType == AppUtility.PageTypeEnum.OperationsRequest)
    {
        activeClasses += " new-oper-button ";
        nonProprietaryClass += " new-oper-button ";
        proprietaryClass += " new-oper-button ";
    }

    switch (Model.RequestStatusID)
    {
        case 7:
            proprietaryClass = activeClasses;
            break;
        default:
            nonProprietaryClass = activeClasses;
            break;
    }


        }
<div class="">
    <div class="item-table">
        <ul class="pl-0">
            <li class="list-inline-item active m-0">
                <a class="@nonProprietaryClass countStatus reload-filter" value="3" href="#"><i class="new-icon icon-centarix-icons-04"></i>  <label class="new-button-text">@nonProprietaryText</label> </a>
            </li>
            <li class="list-inline-item m-0">
                <a class="@proprietaryClass countStatus reload-filter" value="7" href="#"> <i class="new-icon icon-approve-24px"></i><label class="new-button-text">@proprietaryText</label> </a>
            </li>
            @if ((AppUtility.SidebarEnum)TempData[AppUtility.TempDataTypes.SidebarType.ToString()] != AppUtility.SidebarEnum.Search)
            {
                <li class="list-inline-item m-0">@{ await Html.RenderPartialAsync("_IndexFilter", Model.InventoryFilterViewModel);}</li>
            }
                @*<li class="list-inline-item m-0 float-right">
                <button class="custom-button custom-button-font section-bg-color countStatus archive-button" value="7">Archive</button>
            </li>*@
            </ul>
    </div>
</div>
<div class="_IndexTable">
    @{ await Html.RenderPartialAsync("_IndexTable", Model);}
</div>
<script src="~/js/IndexTableWithCounts.js"></script>