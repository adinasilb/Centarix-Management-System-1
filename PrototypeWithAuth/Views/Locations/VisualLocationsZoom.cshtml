@model PrototypeWithAuth.ViewModels.VisualLocationsViewModel
@using PrototypeWithAuth.AppData
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

@{ 
    var bcColor = "";
    switch (Model.SectionType)
    {
        case AppUtility.MenuItems.Requests:
            bcColor = " order-inv-background-color ";
            break;
        case AppUtility.MenuItems.LabManagement:
            bcColor = " lab-man-background-color ";
            break;
    }
}
@*<script src="~/js/VisualLocationsZoom.js"></script>*@
@*<script src="~/js/site.js" asp-append-version="true"></script>*@
    <script src="~/js/IndexTablePartial.js"></script>
<div class="modal modal-view " id="visualZoomModal" role="dialog" aria-labelledby="User" data-backdrop="false">
    <div class="modal-dialog modal-lg no-box-shadow" role="document" style="max-height:100%; width: 90%; max-width: 100%">
        <div class="modal-content d-inline-block no-box-shadow  bg-transparent" >

            <div class="modal-body vlz-bgcolor no-box-shadow  bg-transparent">

                <div class="row">
                    <div class="col-12">
                        <button type="button" data-dismiss="modal" style="border-width: 0; background: transparent; font-size:3rem; font-weight:bold;" class="float-right mb-2" onclick="$(this).closest('.modal').modal('hide');">&times;</button>
                    </div>
                </div>

                <div class="container-fluid" style="display:flex; justify-content:center;">
                    <table class="table table-sm border visualzoom bg-white" style="table-layout: fixed;">
                        @{
                            int z = -1;
                            var is25 = false;
                            if (Model.ChildrenLocationInstances[0].LocationTypeID >= 500)
                            {
                                is25 = true;
                            }

                        }
                        @for (int X = 0; X < Model.ParentLocationInstance.Height; X++)
                        {
                        <tr class="thick-border">
                            @for (int y = 0; y < Model.ParentLocationInstance.Width; y++)
                            {
                                z++;
                                var backgroundClass = "thick-border";
                                @if (Model.ChildrenLocationInstances.ToList().Count() >= z) //put this in an if statement so it won't run into an instance where it doesn't exist since it's not a foreach
                                {
                                    if (Model.ChildrenLocationInstances[z].RequestLocationInstances.Any())
                                    {
                                        backgroundClass += bcColor;
                                        var innerHtml = Model.ChildrenLocationInstances[z].RequestLocationInstances.FirstOrDefault().Request.Product.ProductName;
                                        var requestID = Model.ChildrenLocationInstances[z].RequestLocationInstances.FirstOrDefault().RequestID;
                                        <td class="@backgroundClass">

                                            @*@Html.ActionLink(innerHtml, "DetailsModalView", "Requests", new { @id = requestID }, new { @class = "btn btn-block text-light" })*@

                                            @*<a href="@Url.ActionLink("DetailsView", "Requests", new { @id = requestID })" class="btn btn-block text-light pb-5">@innerHtml</a>*@


                                            <button class="btn btn-link no-hover vlz-filled load-product-details-summary" value="@requestID" style="font-size:1.0625rem;">@innerHtml</button>

                                            <span style="color:white;"> @Model.ChildrenLocationInstances[z].Place</span>
                                        </td>
                                    }
                                    else
                                    {
                                        @if (is25)
                                        {
                                            var name = Model.ChildrenLocationInstances[z].LocationInstanceAbbrev;
                                            <td style="vertical-align:bottom;" class="@backgroundClass">
                                                @name
                                            </td>
                                        }
                                        else
                                        {
                                            <td style="vertical-align:bottom;" class="@backgroundClass">
                                                @Model.ChildrenLocationInstances[z].Place
                                            </td>
                                        }

                                    }
                                }
                            }
                        </tr>
                        }
                    </table>
                </div>


            </div>
        </div>
    </div>
</div>

