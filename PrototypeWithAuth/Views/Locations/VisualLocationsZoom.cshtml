@model PrototypeWithAuth.ViewModels.VisualLocationsViewModel
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@


@*<script src="~/js/site.js" asp-append-version="true"></script>*@
<div class="modal-dialog  modal-dialog modal-lg" role="document" style="max-height:100%; max-width: 100%; width:90%; height:90%; overflow-y:auto;">

    <div class="modal-content d-inline-block">

        <div class="modal-body">

            <div class="row">
                <div class="col-12">
                    <button type="button" data-dismiss="modal" style="border-width: 0; background: transparent; font-size:1.5rem; font-weight:bold;" class="float-right mb-2">&times;</button>
                </div>
            </div>

            <div class="container-fluid" style="display:flex; justify-content:center;">
                <table class="table table-sm border visualzoom" style="table-layout: fixed;">
                    @{
                        int z = -1;
                    }
                    @for (int X = 0; X < Model.ParentLocationInstance.Height; X++)
                    {
                        <tr>
                            @for (int y = 0; y < Model.ParentLocationInstance.Width; y++)
                            {
                                z++;
                                var backgroundClass = "border";
                                @if (Model.ChildrenLocationInstances.ToList().Count() >= z) //put this in an if statement so it won't run into an instance where it doesn't exist since it's not a foreach
                                {
                                    if (Model.ChildrenLocationInstances[z].RequestLocationInstances.Any())
                                    {
                                        backgroundClass += " bg-info";
                                        var innerHtml = Model.ChildrenLocationInstances[z].RequestLocationInstances.FirstOrDefault().Request.Product.ProductName;
                                        var requestID = Model.ChildrenLocationInstances[z].RequestLocationInstances.FirstOrDefault().RequestID;
                                        <td class="@backgroundClass">

                                            @*@Html.ActionLink(innerHtml, "DetailsModalView", "Requests", new { @id = requestID }, new { @class = "btn btn-block text-light" })*@

                                            <a href="@Url.ActionLink("DetailsView", "Requests", new { @id = requestID })" class="btn btn-block text-light pb-5">@innerHtml</a>

                                            <span style="color:white;"> @Model.ChildrenLocationInstances[z].Place</span>
                                        </td>
                                    }
                                    else
                                    {
                                        <td style="vertical-align:bottom;" class="@backgroundClass">@Model.ChildrenLocationInstances[z].Place</td>
                                    }
                                }
                            }
                        </tr>
                    }
                </table>
            </div>
            
            
        </div>
    </div>

</div>