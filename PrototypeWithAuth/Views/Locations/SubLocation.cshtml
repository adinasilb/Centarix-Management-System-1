@model PrototypeWithAuth.ViewModels.SubLocationViewModel

@{
    var i = 0;
}
@foreach (var item in Model.LocationTypes)

{
            <div class="row">
                <div class="col-4">
                    <span style="line-height: 2.5;">@Html.DisplayFor(modelItem => item.LocationTypeName):</span>
                </div>
                <div class="col-8">
                    <div class="form-inline">
                        <div class="form-group mb-2">
                            <label asp-for="LocationInstances[i].Height" class="control-label"></label>&ensp;
                            <input asp-for="LocationInstances[i].Height" class=" form-control" style="width:4rem;" />&emsp;

                            <label asp-for="LocationInstances[i].Width" class="control-label"></label>&ensp;
                            <input asp-for="LocationInstances[i].Width" class="form-control" style="width:4rem;" />

                            <input asp-for="LocationInstances[i].LocationTypeID" class=" form-control" value="@item.LocationTypeID" type="hidden" />

                            @*<input id="LocationInstances_0__LocationTypeID" name="LocationInstances[0].LocationTypeID" type="hidden" value=@item.LocationTypeID />*@

                            @*@Html.HiddenFor(m => m.LocationInstances[i].LocationTypeID, new { Value = item.LocationTypeID })*@
                        <hr />
                        </div>
                    </div>
                </div>
            </div>

                
    i++;

}