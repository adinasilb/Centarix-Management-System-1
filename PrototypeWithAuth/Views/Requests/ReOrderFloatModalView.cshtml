@model PrototypeWithAuth.ViewModels.RequestItemViewModel
@using PrototypeWithAuth.AppData
@{
    var bcColor = "order-inv-background-color  ";
    var color = "order-inv-color";
    var form = "order-inv-form";
    var dollarDisabled = "disabled disabled-text";
    var shekelDisabledText = "";
    var shekelReadOnly = "false";
    var hideVat = "";
    if (TempData[AppUtility.TempDataTypes.MenuType.ToString()].Equals(AppUtility.MenuItems.LabManagement.ToString()))
    {
        bcColor = "lab-man-background-color";
        form = "supplier-form";
        color = "lab-man-color";
    }
    TempData.Keep();
    if (Model.Requests[0].Currency == "USD")
    {
        dollarDisabled = "";
        shekelDisabledText = "disabled-text";
        shekelReadOnly = "readonly";
    }
    if (Model.Requests[0].IncludeVAT == false)
    {
        hideVat = "d-none";
    }

}

<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/validate.js" asp-append-version="true"></script>
<script src="~/js/Validation/ReorderFormValidation.js"></script>
<script src="~/js/SubUnit.js"></script>
<script src="~/js/IndexTablePartial.js"></script>
<div class="modal modal-view reorderModal fader on-form-modal @form " id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false" style="z-index: 6000;">

    <div class="modal-dialog-centered modal-xl mx-auto" role="document">

        <div class="modal-content d-inline-block modal-box-shadow modal-border-radius mx-auto">
            <button type="button" class="close modal-close-padding modal-close-style" @*data-dismiss="modal"*@ aria-label="Close" onclick="$.fn.CloseModal('reorder-item');">
                <span aria-hidden="true">&times;</span>
            </button>
            <form action="" id="myForm" method="post" enctype="multipart/form-data" style="height: 100%; overflow: auto;" class="modal-padding reorderForm">
                <!--<input type="hidden" asp-for="TempRequestListViewModel.GUID" class="hidden-guid" />--> @*for reloading the partial view*@

                @{ await Html.RenderPartialAsync("_TempRequestHiddenFors.cshtml", Model.TempRequestListViewModel); }

                @*
                    NOTE: The select boxes are disabled as they cannot be edited, yet in order to pass the values into the controlller-
                    they need the hiddenfors that are right underneath it
                *@

                @Html.HiddenFor(model => model.Requests.FirstOrDefault().RequestID)
                <input type="hidden" asp-for="Requests[0].ExchangeRate" id="exchangeRate" />
                <input type="hidden" asp-for="Requests[0].Currency" id="currency" />

                @Html.HiddenFor(model => model.PageType) @*JS shoulde be taking this as a string *@
                @Html.HiddenFor(model => model.Requests.FirstOrDefault().ApplicationUserCreatorID)

                <div asp-validation-summary="ModelOnly" class="text-danger-centarix"></div>
                <input type="hidden" asp-for="Requests[0].RequestID" />

                <!-- Modal Header -->
                <div class="new-modal-header no-box-shadow modal-header-padding " style="border-bottom:0 !important">
                    @if (Model.ErrorMessage != null)
                    {
                        <h6 class="text-danger-centarix">
                            @Model.ErrorMessage
                        </h6>
                        <br />
                    }

                    <div class="form-group mb-3 ">
                        <div class="row px-5 text-danger-centarix"> @ViewBag.ErrorMessage </div>
                        <div class="row modal-title-line">
                            <div class="col-1">
                                @if (Model.Requests[0].Product.ProductSubcategory.ImageURL != null)
                                {
                                    var imageurl = Model.Requests[0].Product.ProductSubcategory.ImageURL;<img src="@imageurl" alt="Image" width="75" class="category-image" />
                                }
                                else
                                {
                                    <img src="~/images/css/accounting/sample_image.png" alt="Image" width="75" class="category-image" />
                                }
                            </div>

                            <div class="col-5 heading-1">
                                @Model.Requests[0].Product.ProductName
                            </div>

                        </div>


                        <div class="row">
                            <hr class="col-12" />
                        </div>

                    </div>
                    <div class="modal-body">
                        @{await Html.RenderPartialAsync("_PriceTabPartial", Model);}

                        <div class="mt-3 pb-4">
                            <hr class="col-12" />
                        </div>
                    </div>

                    <div class="form-group mx-auto text-center mb-4">
                        <div class="row">
                            <div class="col-4">
                                <button type="submit" name="OrderType" asp-action="ReOrderFloatModalView" value="@AppUtility.OrderTypeEnum.RequestPriceQuote"
                                        class="p-0 custom-order-inv custom-button create-modal-submit ">
                                    @AppUtility.GetDisplayNameOfEnumValue(AppUtility.OrderTypeEnum.RequestPriceQuote.ToString())
                                </button>

                            </div>
                            <div class="col-4">
                                <button type="submit" name="OrderType" value="@AppUtility.OrderTypeEnum.OrderNow"
                                        class="p-0 custom-order-inv custom-button create-modal-submit  submitOrder">
                                    @AppUtility.GetDisplayNameOfEnumValue(AppUtility.OrderTypeEnum.OrderNow.ToString())
                                </button>

                            </div>
                            <div class="col-4">
                                <button type="submit" name="OrderType" value="@AppUtility.OrderTypeEnum.AddToCart"
                                        class="p-0 custom-order-inv custom-button  create-modal-submit submitOrder">
                                    @AppUtility.GetDisplayNameOfEnumValue(AppUtility.OrderTypeEnum.AddToCart.ToString())
                                </button>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <span class="small-text">Ask the secretary to get a price quote</span>
                            </div>
                            <div class="col-4">
                                <span class="small-text">If you want to process a single order imediately</span>
                            </div>
                            <div class="col-4">
                                <span class="small-text">If you want to order multiple items</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <button type="submit" name="OrderType" value="@AppUtility.OrderTypeEnum.AlreadyPurchased"
                                        class="p-0 custom-order-inv custom-button create-modal-submit  submitOrder ">
                                    @AppUtility.GetDisplayNameOfEnumValue(AppUtility.OrderTypeEnum.AlreadyPurchased.ToString())
                                </button>

                            </div>

                            <div class="col-4">
                                <button type="button" class="custom-cancel custom-button create-modal-submit" @*data-dismiss="modal"*@ onclick="$.fn.CloseModal('reorder-item');">Cancel</button>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <span class="small-text">Update the purchase of an item</span>
                            </div>


                        </div>


                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $(".submitOrder").off('click').on("click", function (e) {
        e.preventDefault();
        console.log("submit reorder");
        //alert("validate form");
        $(".reorderForm").data("validator").settings.ignore = "";
        var valid = $(".reorderForm").valid();
        console.log("valid form: " + valid)
        if (!valid) {
            if (!$('.activeSubmit').hasClass('disabled-submit')) {
                $('.activeSubmit').addClass('disabled-submit')
            }
        }
        else {
            $('.activeSubmit').removeClass('disabled-submit')
            $("#loading").show();
            var formData = new FormData($(".reorderForm")[0]);
            console.log(...formData)
            var orderType = $(this).val();
            $.ajax({
                contentType: false,
                processData: false,
                async: true,
                url: "/Requests/ReOrderFloatModalView?OrderTypeEnum=" + orderType,
                data: formData,
                traditional: true,
                type: "POST",
                cache: false,
                success: function (data) {
                    $(".modal .temprequesthiddenfors").html('');
                    //if (orderType == 'AddToCart') {
                    //    $("_IndexTableData").html(data);
                    //    $.fn.CloseModal('reorder-item');
                    //}
                    //else {
                    //alert("$.fn.OpenModal('modalStep1', 'step-1', data)");
                    $.fn.OpenModal('modalStep1', 'step-1', data)
                    //}
                    $("#loading").hide();
                    return true;
                },
                error: function (jqxhr) {
                    if (jqxhr.status == 500) {
                        console.log('error');
                        $.fn.OpenModal('reorderModal', 'reorder-item', jqxhr.responseText)
                    }

                    $("#loading").hide();
                    return true;
                }
            });
        }
        $(".reorderForm").data("validator").settings.ignore = ':not(select:hidden, input:visible, textarea:visible)';

        //return false;
    });
    
</script>