@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@using PrototypeWithAuth.ViewModels

@{
    var markReadOnlyClass = "";
    if (Model.ModalType == AppUtility.RequestModalType.Edit || Model.ModalType == AppUtility.RequestModalType.Summary)
    {
        markReadOnlyClass = "mark-readonly";
    }

    var color = "";

    switch (Model.SectionType)
    {
        case AppUtility.MenuItems.Operations:
            color = "oper-color";
            break;
        case AppUtility.MenuItems.LabManagement:
            color = "lab-man-color";
            break;
        case AppUtility.MenuItems.Accounting:
            color = "accounting-color";
            break;
        case AppUtility.MenuItems.Requests:
            color = "order-inv-color";
            break;
        case AppUtility.MenuItems.Users:
            color = "users-color";
            break;
        case AppUtility.MenuItems.Protocols:
            color = "protocols-color";
            break;
    }
}
<div class="row">
    <div class="col-10"><span class="heading-1 modal-tab-name text-left">Comments and ratings</span></div>

    <div class="col-2 container p-0 text-right">
        <ul class="list-unstyled">
            <li>
                <button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="no-box-shadow btn p-0 m-0 @markReadOnlyClass  addComment">
                    <i class="@color icon-add_circle-24px" style="font-size: 3rem;"></i>
                </button>
            </li>

            <div style="display:none; " id="popover-content">

                @foreach (var item in Model.CommentTypes)
                {
                    <div class="row px-2 comment-btn">
                        <button type="button" class="no-box-shadow btn bg-transparent add-comment row p-0 text-capitalize text-dark" style="font-size:1rem; font-weight:400;" data-val="@item.TypeID" >
                            <i class="@item.Icon mr-2 mt-1" style="color: @item.Color; font-size: 1.25rem;"></i>
                            @item.Description
                        </button><hr class="m-0" />
                    </div>
                }
            </div>

        </ul>
    </div>
</div>

<div class="comment-info-div">
    <input type="hidden" value="@Model.Comments.Count" id="comment-index" />
    @for (int i = 0; i < Model.Comments.Count; i++)
    {
        await Html.RenderPartialAsync("_CommentInfoPartialView", new CommentsInfoViewModel { Comment = Model.Comments[i], Index = i, IsEdit = true });
    }
</div>
<script src="~/js/commentPopover.js"></script>