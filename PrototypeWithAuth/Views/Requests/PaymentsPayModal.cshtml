@model PrototypeWithAuth.ViewModels.PaymentsPayModalViewModel
@using PrototypeWithAuth.AppData;
<script src="~/js/InitializeDatePicker.js"></script>
<script src="~/js/Validation/PayModalValidation.js"></script>
<script src="~/js/validate.js"></script>
<script src="~/js/DocumentModalJS.js"></script>



<div class="modal modal-view fader on-form-modal" id="myModal" data-backdrop="false">
    <div class="modal-dialog-centered mx-auto modal-xl" style="min-width:1000PX !important; top: 20%;">
        <div class="modal-content d-inline-block modal-box-shadow modal-border-radius">
            <button type="button" class="close modal-close-padding modal-close-style" data-dismiss="modal" aria-label="Close" onclick="$.fn.CloseModal('payments-invoice')">
                <span aria-hidden="true">&times;</span>
            </button>
            <form action="" method="post" enctype="multipart/form-data" class="modal-padding payModalForm " id="myForm">
                @if (Model.Error.Bool == true)
                {
                    <span class="text-danger-centarix">@Model.Error.String</span>
                }
                else
                {
                    <input type="hidden" asp-for="AccountingEnum" />
                    var header = "Pay " + Model.Payments.FirstOrDefault().Request.Product.Vendor.VendorEnName.ToLower();
                    var paymentTypeDnone = Model.Payment.CompanyAccountID == null ? "d-none" : "";
                    var dateDnone = "d-none";
                    var cardNumDnone = "d-none";
                    var cardNumDisabled = "disabled";
                    var paymentReferenceDnone = "d-none";
                    var paymentReferenceDisabled = "disabled";
                    var checkNumDnone = "d-none";
                    var checkNumDisabled = "disabled";
                    var addInvoicePropsDnone = "add-invoice d-none";
                    var addInvoicePropsDisabled = "disabled";
                    switch (Model.Payment.PaymentTypeID)
                    {
                        case 1:
                            cardNumDnone = "";
                            cardNumDisabled = "";
                            paymentReferenceDnone = "";
                            paymentReferenceDisabled = "";
                            break;
                        case 2:
                            dateDnone = "";
                            checkNumDnone = "";
                            checkNumDisabled = "";
                            break;
                        case 3:
                            dateDnone = "";
                            paymentReferenceDnone = "";
                            paymentReferenceDisabled = "";
                            break;
                    }
                    if (Model.AccountingEnum == AppUtility.SidebarEnum.MissingPaymentDetails)
                    {
                        header = "Update Payment Details";
                    }
                    @for (int i = 0; i < Model.Payments.Count; i++)
                    {
                        <input type="hidden" asp-for="Payments[i].PaymentID" />
                        <input type="hidden" asp-for="Payments[i].Sum" />
                        <input type="hidden" asp-for="Payments[i].RequestID" />
                    }
                    <input type="hidden" asp-for="Guid" />
                    <input type="hidden" asp-for="Payments[0].Request.ProductID" />
                    <input type="hidden" asp-for="VendorID" value=@Model.Payments[0].Request.Product.VendorID id="VendorID" />

                    <div class="modal-body">
                        <div class="container ">
                            <div class="row modal-header-padding">
                                <div class="col-6">
                                    <span class="heading-1">@header</span>
                                </div>
                                <hr />
                                @{
                                    var CostShekel = Model.Payments.Sum(p => p.Sum);
                                    var CostDollar = Model.Payments.Sum(p => p.Sum / p.Request.ExchangeRate);
                                    decimal ShippingTotalDollar = 0;
                                    decimal ShippingTotalShekel = 0;
                                    @for (var s = 0; s < Model.ShippingToPay.Count; s++)
                                    {

                                        var ShekelShipping = Convert.ToDecimal(Model.ShippingToPay[s].CostShekel);
                                        var DollarShipping = Convert.ToDecimal(Model.ShippingToPay[s].CostDollar);
                                        ShippingTotalDollar += DollarShipping;
                                        ShippingTotalShekel += ShekelShipping;

                                        @Html.HiddenFor(m => m.ShippingToPay[s].ID)
                                    }
                                    var includeVAT = Model.Payments[0].Request.IncludeVAT;
                                    var DollarVAT = (CostDollar + ShippingTotalDollar) * .17m;
                                    var ShekelVAT = (CostShekel + ShippingTotalShekel) * .17m;
                                    var TotalShekel = CostShekel + ShekelVAT + ShippingTotalShekel;
                                    var TotalDollar = CostDollar + DollarVAT + ShippingTotalDollar;
                                    var currencySymbol = Model.Payments.FirstOrDefault().Request.Currency == AppUtility.CurrencyEnum.NIS.ToString() ? "&#x20aa;" : "&#36;";
                                }
                            </div>
                            <div class="row error-message">
                                @{ await Html.RenderPartialAsync("_ErrorMessage", Model.ErrorMessage); }
                            </div>

                            <div class="row">
                                <div class="col-3 pl-0">
                                    <div class="form-group">

                                        <label class="control-label">Sum</label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#x20aa;</span>
                                            <input value="@String.Format("{0:0.00}",CostShekel)" class="form-control-plaintext border-bottom" disabled />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-3 pl-0">
                                    <div class="form-group">
                                        <label class="control-label"></label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#36;</span>
                                            <input value="@String.Format("{0:0.00}",CostDollar)" class="form-control-plaintext border-bottom" disabled />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class=" control-label">Shipping</label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#x20aa;</span>
                                            <input value="@String.Format("{0:0.00}",ShippingTotalShekel)" class="form-control-plaintext border-bottom" disabled />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class=" control-label"></label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#36;</span>
                                            <input value="@String.Format("{0:0.00}", ShippingTotalDollar)" class="form-control-plaintext border-bottom" disabled />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3 pl-0">
                                    <div class="form-group">
                                        <label class="control-label">VAT</label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#x20aa;</span>
                                            <input value="@String.Format("{0:0.00}",ShekelVAT)" class="form-control-plaintext border-bottom" disabled />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-3 pl-0">
                                    <div class="form-group">

                                        <label class="control-label"></label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#36;</span>
                                            <input value="@String.Format("{0:0.00}",DollarVAT)" class="form-control-plaintext border-bottom" disabled />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class=" control-label">Total + Shipping + VAT</label>
                                        <div class="input-group">
                                            <span class="input-group-text pr-1">&#x20aa;</span>
                                            <input value="@String.Format("{0:0.00}", TotalShekel)" class="form-control-plaintext border-bottom total-shekel" disabled />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <label class=" control-label"></label>
                                    <div class="input-group">
                                        <span class="input-group-text pr-1">&#36;</span>
                                        <input value="@String.Format("{0:0.00}", TotalDollar)" class="form-control-plaintext border-bottom total-dollar" disabled />
                                    </div>
                                </div>
                            </div>
                            @if (Model.AccountingEnum == AppUtility.SidebarEnum.PayNow) //confirm which sections should show in
                            {
                                <div class="row">
                                    <div class="col-3 pl-0 ">
                                        <div class="input-group pt-5">
                                            <input type="checkbox" asp-for="PartialPayment" id="partialPayment" class="form-check-input filled-in " />
                                            <label class="form-check-label" asp-for="PartialPayment" id="partialPayment">Partial Payment</label>
                                        </div>
                                    </div>
                                    <div class="col-3 pl-0">
                                        <label class=" control-label d-none pay-partial">Pay Now</label>
                                        <div class="input-group">
                                            <span class="input-group-text d-none pay-partial pr-1">@Html.Raw(currencySymbol)</span>
                                            <input asp-for="PartialAmtToPay" class="form-control-plaintext border-bottom d-none pay-partial" disabled />
                                            <input type="hidden" asp-for="PercentageToPay" value="1" />
                                            <input type="hidden" asp-for="Payments.FirstOrDefault().Request.Currency" class="payment-currency" />
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="row ">
                                <div class="col-3 pl-0">
                                    <div class="payment-type form-group">
                                        <label class="control-label">Bank Name</label>
                                        @Html.DropDownListFor(vm => vm.Payment.CompanyAccountID,
                                            new SelectList(
                                            Model.CompanyAccounts,
                                            "CompanyAccountID",
                                            "CompanyBankName"
                                            ), "Select Bank Name",
                                            new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext", @id = "bankName" })
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="payment-type form-group @paymentTypeDnone">
                                        <label class="control-label">Payment Type</label>
                                        @Html.DropDownListFor(vm => vm.Payment.PaymentTypeID,
                                            new SelectList(
                                            Model.PaymentTypes,
                                            "PaymentTypeID",
                                            "PaymentTypeDescription"
                                            ), "Select Payment Type",
                                            new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext paymentType" })
                                    </div>
                                </div>
                                <div class="col-3 credit-card @cardNumDnone">
                                    <div class="form-group ">
                                        <label class="control-label credit-card d-none">Card #</label>
                                        <select class="mdb-select custom select-dropdown form-control-plaintext cardNum mdb-select-sublist " name="Payment.CreditCardID" value="@Model.Payment.CreditCardID" id="Payment_CreditCardID" @cardNumDisabled></select>
                                    </div>
                                </div>
                                <div class="col-3 pl-0">
                                    <div class="form-group payment-date @dateDnone">
                                        <label class="control-label wire d-none">Transfer Date</label>
                                        <label class="control-label credit-card">Reference Date</label>
                                        <label class="control-label bank-check d-none">Cash Out Date</label>
                                        <input class="form-control-plaintext border-bottom datepicker" type="text" asp-for="Payment.PaymentReferenceDate" value="@((Model.Payment.PaymentReferenceDate != new DateTime()) ? Model.Payment.PaymentReferenceDate.ToShortDateString() : "")" />
                                    </div>
                                </div>
                                <div class="col-3 wire @paymentReferenceDnone">
                                    <div class="form-group ">
                                        <label class="control-label">Payment Reference</label>
                                        <input type="text" name="Payment.Reference" class="form-control-plaintext border-bottom reference-1" value="@Model.Payment.Reference" id="Payment_Reference" @paymentReferenceDisabled />
                                    </div>
                                </div>
                                <div class="col-3 bank-check @checkNumDnone">
                                    <div class="form-group ">
                                        <label class="control-label">Check Number</label>
                                        <input class="form-control-plaintext border-bottom" type="text" name="Payment.CheckNumber" value="@Model.Payment.CheckNumber" id="Payment_CheckNumber" @checkNumDisabled />
                                    </div>
                                </div>
                            </div>
                            @if (!Model.Payments[0].HasInvoice)
                            {
                                <div class="row pt-5">
                                    <div class="col-4">
                                        <div class="input-group">
                                            <input type="checkbox" asp-for="AddInvoice" id="AddInvoice" class="form-check-input filled-in " />
                                            <label class="form-check-label" asp-for="AddInvoice" id="AddInvoice">Add Invoice</label>
                                        </div>
                                        <input type="checkbox" class="d-none" asp-for="InvoiceInfoViewModel.CurrentPayment" />
                                    </div>
                                    <div class="col-4 @addInvoicePropsDnone">
                                        <div class="custom-control custom-radio mr-4 ">
                                            <input class="custom-control-input invoiceSavingType" id="currentPayment" name="invoiceSavingType" type="radio" value="false" disabled />
                                            <label class="radio-button custom-control-label pt-1 pl-2" for="Received">Invoice for current payment</label>
                                        </div>
                                    </div>
                                    <div class="col-4 @addInvoicePropsDnone">
                                        <div class="custom-control custom-radio mr-4 ml-4">
                                            <input class="custom-control-input invoiceSavingType " checked id="entireOrder" name="invoiceSavingType" type="radio" value="true" />
                                            <label class="radio-button custom-control-label pt-1 pl-2 " for="entireOrder">Invoice for entire order</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row @addInvoicePropsDnone">
                                    <div class="col-5">
                                        <div class="upload-btn-wrapper between-button-margin">
                                            <button type="button" class="custom-button custom-button-font section-bg-color" data-string="@AppUtility.FolderNamesEnum.Invoices.ToString()">Select Invoice</button>
                                            <input type="file" asp-for="InvoiceInfoViewModel.InvoiceImage" class="/*file-select*/ h-100" />
                                            <span class="invoice-image-name document-name pl-2" id="invoice-image"></span>
                                            <span asp-validation-for="InvoiceInfoViewModel.InvoiceImage" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <label class="control-label">Invoice Number </label>
                                        <input asp-for="InvoiceInfoViewModel.Invoice.InvoiceNumber" class="form-control-plaintext border-bottom addInvoicePropsDisabled" disabled="@addInvoicePropsDisabled"  />
                                        <span asp-validation-for="InvoiceInfoViewModel.Invoice.InvoiceNumber" class="text-danger-centarix" id="invoice-number-validation"></span>
                                    </div>
                                    <div class="col-3">
                                        <label class="control-label">Invoice Date </label>
                                        <input asp-for="InvoiceInfoViewModel.Invoice.InvoiceDate" class="form-control-plaintext border-bottom datepicker addInvoicePropsDisabled" disabled="@addInvoicePropsDisabled" asp-format="@AppUtility.AspDateFormatString" />
                                        <span asp-validation-for="InvoiceInfoViewModel.Invoice.InvoiceDate" class="text-danger-centarix"></span>
                                    </div>
                                </div>
                            }
                            <div class="row">
                                <div class="modal-footer-mt mx-auto">
                                    @*<button class="btn inv-payments-button float-right">Paid</button>*@
                                    <input type="submit" class="  custom-button custom-button-font section-bg-color between-button-margin" id="payPayment" asp-action="PaymentsPayModal" value="Paid" />
                                    <button type="button" class="custom-button custom-cancel" onclick="$.fn.CloseModal('payments-pay')">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </form>
        </div>
    </div>
</div>
<script>$(".payment-type .mdb-select").materialSelect()</script>
<script>
    $("#payPayment").click(function (e) {
        e.preventDefault();
        $("#myForm").data("validator").settings.ignore = "";
        var valid = $("#myForm").valid();
        console.log("valid form: " + valid)
        if (!valid) {
            e.preventDefault();
            if (!$('.activeSubmit').hasClass('disabled-submit')) {
                $('.activeSubmit').addClass('disabled-submit')
            }

        }
        else {
            var formData = new FormData($("#myForm")[0]);
            $.ajax({
                contentType: false,
                processData: false,
                async: true,
                url: "/Requests/PaymentsPayModal",
                data: formData,
                traditional: true,
                type: "POST",
                cache: false,
                success: function (data) {
                    $.fn.CloseModal("payments-pay");
                    $(".render-body").html(data);
                    var payNowSidebar = $(".sidebarTitle.2");
                    var payNowCount = $("#payNowCount").val();
                    console.log('pay now count: ' + payNowCount)
                    payNowSidebar.html("Pay Now <br> [" + payNowCount + "]");
                    return true;
                },
                error: function (jqxhr) {
                    //$.fn.OpenModal("modal", "payments-pay", jqxhr.responseText);
                    $('.payments-pay .error-message').html(jqxhr.responseText);
                }
            })
        }
        $("#myForm").data("validator").settings.ignore = ':not(select:hidden, .location-error:hidden,input:visible, textarea:visible)';
    })
    $('.payModalForm').on('click', "#AddInvoice", function (e) {
        console.log("pay partial")
        if ($("#AddInvoice:checkbox").is(":checked")) {
            console.log("add invoice is checked");
            $(".add-invoice").removeClass("d-none");
            $('.addInvoicePropsDisabled').prop('disabled', false);
        }
        else {
            console.log("add invoice is not checked");
            $(".add-invoice").addClass("d-none");
            $('.addInvoicePropsDisabled').prop('disabled', true);
        }

    });
    $('.payModalForm').on('click', "#partialPayment", function (e) {
        console.log("pay partial")
        if ($("#partialPayment:checkbox").is(":checked")) {
            $(".pay-partial").addClass("d-none")
            $('#PartialAmtToPay').prop('disabled', true)
            $("#partialPayment:checkbox").prop("checked", false)
        }
        else {
            $(".pay-partial").removeClass("d-none")
            $("#partialPayment:checkbox").prop("checked", true)
            $('#PartialAmtToPay').prop('disabled', false)
        }

    });
    $('.payModalForm').on('change', '#PartialAmtToPay', function (e) {
        var total = $('.payment-currency').val() == 'NIS' ? '.total-shekel' : '.total-dollar';
        console.log(total);
        console.log($('.payment-currency').val());
        console.log($(total).attr('value'))
        //console.log($('.total-dollar').val())
        console.log($('#PartialAmtToPay').val())
        var percentage = $('#PartialAmtToPay').val() / $(total).attr('value')
        console.log(percentage)
        $('#PercentageToPay').val(percentage)
    });

    $("#InvoiceInfoViewModel_InvoiceImage").on("change", function () {
        alert("InvoiceInfoViewModel_InvoiceImage is clicked");
        $.fn.InvoiceImageClick("InvoiceInfoViewModel_InvoiceImage", "InvoiceInfoViewModel.InvoiceImage", "payModalForm");
    });

</script>
<script src="~/js/TermsModal.js"></script>