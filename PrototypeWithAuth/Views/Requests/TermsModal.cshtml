@model PrototypeWithAuth.ViewModels.TermsViewModel;
@using PrototypeWithAuth.AppData

@{
    var bcColor = "order-inv-background-color";
    if (Model.TempRequestListViewModel.RequestIndexObject.SectionType == AppUtility.MenuItems.Operations)
    {
        bcColor = "oper-background-color";
    }
    else if (Model.TempRequestListViewModel.RequestIndexObject.SectionType == AppUtility.MenuItems.LabManagement)
    {
        bcColor = "lab-man-background-color";
    }
}

<div class="modal modal-view termsModal " id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false" style="z-index: 9100">
    <div class="modal-dialog-centered elixir-modal-md mx-auto on-form-modal order-inv-form" role="document">
        <div class="modal-content d-inline-block modal-border-radius modal-box-shadow " style="width:60rem;">
            <button type="button" class="close modal-close-padding modal-close-style cancel-terms" @*data-dismiss="modal"*@ aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <form action="" method="post" enctype="multipart/form-data" style="height: 100%;" id="myForm" class="modal-padding termsModalForm">
                @{
                    if (Model.Error?.Bool == true)
                    {
                        <span class="text-danger-centarix text-center">@Model.Error.String</span>
                    }
                    else
                    {
                        await Html.RenderPartialAsync("_TermsModal", Model);
                        <div class="modal-footer border-0 p-0">
                            <div class="mx-auto modal-footer-mt">
                                <input type="submit" asp value="Save" class="custom-button custom-button-font @bcColor between-button-margin submitTerms" />
                                <button type="button" class="custom-button custom-cancel cancel-terms" @*data-dismiss="modal"*@>Cancel</button>
                            </div>
                        </div>
                    }
                }

            </form>
        </div>
    </div>
</div>
<script>
    $('.cancel-terms').off('click').on('click', function (e) {
        e.preventDefault();
        console.log("in cancel terms");
        var guid = $('#GUID').val();
        var sequencePosition = $("#SequencePosition").val();
        if ($("#masterSectionType").val() == "LabManagement") {
            var formData = new FormData($(".termsModalForm")[0]);
            $.ajax({
                contentType: false,
                processData: false,
                async: true,
                url: "/Requests/TermsModal?isCancel=true",
                data: formData,
                traditional: true,
                type: "POST",
                cache: false,
                success: function (data) {
                    alert("data: " + data);
                    $.fn.CloseModal("terms");
                }
            });
        }
        else if ($('#masterSidebarType').val() != 'Cart') {
            var e = $.fn.AddTempRequestHiddenFors(guid, sequencePosition, '.modal .temprequesthiddenfors');
            console.log("error: " + e);
            if (!e) {
                $.fn.CloseModal('terms');
            }
        }
        else {
            $.fn.CloseModal('terms');
        }
    })
</script>
