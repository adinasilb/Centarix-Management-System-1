@model PrototypeWithAuth.ViewModels.TermsViewModel;
@using PrototypeWithAuth.AppData
@{
    Layout = null;

    var bcColor = "order-inv-background-color";
    string form = "";
    if (Model.RequestIndexObject.SectionType == AppUtility.MenuItems.Operations)
    {
        form = "oper-form";
        bcColor = "oper-background-color";
    }
    else if (Model.RequestIndexObject.SectionType == AppUtility.MenuItems.LabManagement)
    {
        bcColor = "lab-man-background-color";
        form = "supplier-form";
    }
    else if (Model.RequestIndexObject.SectionType == AppUtility.MenuItems.Requests)
    {
        bcColor = "order-inv-background-color";
        form = "order-inv-form";
    }
}

<script src="~/js/TermsModal.js"></script>
<script src="~/js/site.js"></script>
<script src="~/js/validate.js"></script>
<script src="~/js/Validation/TermsModalFormValidation.js"></script>
<div class="modal modal-view termsModal " id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false" style="z-index: 9100">
    <div class="modal-dialog-centered modal-xl mx-auto on-form-modal @form" role="document" style="max-height:100%; max-width:60rem; ">
        <div class="modal-content d-inline-block modal-border-radius modal-box-shadow " style="width:60rem;">
            <button type="button" class="close modal-close-padding modal-close-style" onclick ="$(this).closest('.termsModal').modal('hide');" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <form action="" method="post" enctype="multipart/form-data" style="height: 100%;" id="myForm" class="modal-padding termsModalForm">
                @Html.HiddenFor(model => model.RequestIndexObject.PageType)
                @Html.HiddenFor(model => model.RequestIndexObject.PageNumber)
                @Html.HiddenFor(model => model.RequestIndexObject.SectionType)
                @Html.HiddenFor(model => model.RequestIndexObject.SelectedCurrency)
                @*@Html.HiddenFor(model => model.RequestIndexObject.SelectedPriceSort)*@
                @Html.HiddenFor(model => model.RequestIndexObject.RequestStatusID)
                @Html.HiddenFor(model => model.RequestIndexObject.SidebarFilterID)
                @Html.HiddenFor(model => model.RequestIndexObject.SidebarType)
                <input type="hidden" asp-for="ParentRequest.ParentRequestID" />
                <div class="modal-header modal-header-padding">
                    <div class="col-10 float-left">
                        <span class="heading-1">Terms</span>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row text-danger-centarix"> @ViewBag.ErrorMessage </div>
                        <div class="row">

                            <div class="col-3">
                                <label class="control-label">Terms</label>
                                @Html.DropDownListFor(m => m.Terms,
                                    Model.TermsList,
                                    "Select",
                                    new { @class = "mdb-select custom select-dropdown form-control-plaintext Terms", @id = "Terms", @searchable = "default value" }
                                )
                                <span asp-validation-for="Terms" class="text-danger-centarix"></span>
                            </div>
                            
                            <div class="col-3">
                                <label asp-for="ParentRequest.Shipping" class="control-label"></label>
                                <input type="text" asp-for="ParentRequest.Shipping" class="form-control-plaintext border-bottom" />
                                <span asp-validation-for="ParentRequest.Shipping" class="text-danger-centarix"></span>
                            </div>
                           
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0 p-0">
                    <div class="mx-auto modal-footer-mt">

                        <input type="submit" asp value="Save" class="custom-button custom-button-font @bcColor between-button-margin submitTerms" />
                        <button type="button" class="custom-button custom-cancel" data-dismiss="modal" onclick="$(this).closest('.termsModal').modal('hide');">Cancel</button>
                    </div>
                </div>
                <input type="hidden" asp-for="ParentRequest.OrderDate" />
                <input type="hidden" asp-for="ParentRequest.OrderNumber" />
                <input type="hidden" asp-for="ParentRequest.ApplicationUserID" />
            </form>
        </div>
    </div>
</div>
<script>$(".mdb-select").materialSelect()</script>
<script>
    $(".submitTerms").off('click').on("click", function (e) {
        e.preventDefault();
        console.log("submit reorder");
        //alert("validate form");
        $(".termsModalForm").data("validator").settings.ignore = "";
        var valid = $(".termsModalForm").valid();
        console.log("valid form: " + valid)
        if (!valid) {

            if (!$('input[type="submit"], button[type="submit"] ').hasClass('disabled-submit')) {
                $('input[type="submit"], button[type="submit"] ').addClass('disabled-submit')
            }

        }
        else {
            $('input[type="submit"], button[type="submit"] ').removeClass('disabled-submit')
            $("#loading").show();
            var formData = new FormData($(".termsModalForm")[0]);
            $.ajax({
                contentType: false,
                processData: false,
                async: true,
                url: "/Requests/TermsModal",
                data: formData,
                traditional: true,
                type: "POST",
                cache: false,
                success: function (data) {
                    $('.confirm-email').html('');
                    $(".modal-backdrop").remove();
                    var modal = $(data);
                    $('.confirm-email').html(modal);
                    $(".emailModal").modal({
                        backdrop: true,
                        keyboard: false,
                    });
                    $(".emailModal").modal('show');
                    $("#loading").hide();
                    return true;
                },
                error: function (jqxhr) {
                    if (jqxhr.status == 500) {
                        $('.terms').html('');
                        $(".modal-backdrop").remove();
                        var modal = $(jqxhr.responseText);
                        $('.terms').html(modal);
                        $(".termsModal").modal({
                            backdrop: true,
                            keyboard: false,
                        });
                        $(".termsModal").modal('show');
                    }

                    $("#loading").hide();
                    return true;
                }
            });
        }
        $(".termsModalForm").data("validator").settings.ignore = ':not(select:hidden, input:visible, textarea:visible)';

        //return false;
    });</script>