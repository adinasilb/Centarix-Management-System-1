@model IPagedList<PrototypeWithAuth.Models.Request>
@using PrototypeWithAuth.AppData;

@using PrototypeWithAuth.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager

@using X.PagedList.Mvc.Core; @* import this so we get our HTML Helper *@
@using X.PagedList; @* import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

<!-- import the included stylesheet for some (very basic) default styling -->
@*<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />*@


@{
    ViewData["Title"] = "Index";

    Layout = "~/Views/Shared/RequestNavView.cshtml";
}


<div class="mx-5">
    <table class="table table-headerspaced table-noheaderlines table-hover">
        <thead>
            <tr class="text-center">
                @*<th>@Html.DisplayNameFor(model => model[0].Product.ProductMedia)</th>*@
                <th>Item Image</th>
                @*<th>@Html.DisplayNameFor(model => model[0].Product.ProductName)</th>*@
                <th>Item Name</th>
                @*<th>@Html.DisplayNameFor(m => m[0].Product.Vendor.VendorEnName)</th>*@
                <th>Vendor</th>
                <th>Last Price</th>
                <th> Location </th>
                <th>@Html.DisplayNameFor(m => m[0].Product.ProductSubcategory.ProductSubcategoryDescription)</th>
                @*<th>@Html.DisplayNameFor(m => m[0].ParentRequest.ApplicationUser.FirstName) @Html.DisplayNameFor(m => m[0].ParentRequest.ApplicationUser.LastName)</th>*@
                <th>Owner</th>
                <th>Last Ordered</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="text-center inv-list-item">
                    <td>
                        @if (item.Product.ProductSubcategory.ImageURL != null)
                        {
                            var imageurl = item.Product.ProductSubcategory.ImageURL;
                            <img src="@imageurl" alt="Image" width="75" class="category-image" />
                        }
                        else
                        {
                            <img src="~/images/css/accounting/sample_image.png" alt="Image" width="75" class="category-image" />
                        }
                    </td>

                    <td> <button class="btn inv-link-clr load-product-details no-box-shadow" title="Details" value="@item.RequestID" data-target="item" href="item">@Html.DisplayFor(modelItem => item.Product.ProductName) </button></td>

                    <td> @Html.DisplayFor(modelItem => item.Product.Vendor.VendorEnName) </td>

                    <td>
                        <ul style="list-style: none;">

                            @if (item.Unit != null)
                            {
                                <li>
                                    @Html.DisplayFor(modelItem => item.Unit)
                                    @Html.DisplayFor(modelItem => item.UnitType.UnitTypeDescription)
                                </li>
                                @if (item.SubUnit != null)
                                {
                                    <li>
                                        @Html.DisplayFor(modelItem => item.SubUnit)
                                        @Html.DisplayFor(modelItem => item.SubUnitType.UnitTypeDescription)
                                    </li>
                                    @if (item.SubSubUnit != null)
                                    {
                                        <li>
                                            @Html.DisplayFor(modelItem => item.SubSubUnit)
                                            @Html.DisplayFor(modelItem => item.SubSubUnitType.UnitTypeDescription)
                                        </li>
                                    }
                                }

                            }


                        </ul>
                    </td> @*Computed column?*@
                    <td>
                        @*@Html.DisplayFor(modelItem => item.Cost)*@
                        @{
                            decimal cost = (decimal)item.Cost;
                            string formattedCost = cost.ToString("C02");
                        }
                        @formattedCost
                    </td>
                    <td>
                        @if (item.RequestLocationInstances != null)
                        {
                            @Html.DisplayFor(modelItem => item.RequestLocationInstances.FirstOrDefault().LocationInstance.LocationInstanceName)
                        }
                    </td>

                    <td> @Html.DisplayFor(modelItem => item.Product.ProductSubcategory.ProductSubcategoryDescription) </td>
                    <td> @Html.DisplayFor(modelItem => item.ParentRequest.ApplicationUser.FirstName) @Html.DisplayFor(modelItem => item.ParentRequest.ApplicationUser.LastName) </td>

                    <td> @Html.DisplayFor(modelItem => item.ParentRequest.OrderDate) </td>

                    <td style="width:3rem;">                    
                        @*work on getting the correct syntax to create a new product with*@
                        <button class="btn load-order-details no-box-shadow" data-title="order" value="@item.RequestID"><i style="font-size:2rem; color:#00CA72;" class="icon-add_circle_outline-24px hover-bold"></i></button>
                    </td>
                    <td style="width:3rem;">                       
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-6 offset-6 text-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
</div>