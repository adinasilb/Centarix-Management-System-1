@model PrototypeWithAuth.ViewModels.RequestItemViewModel
@using PrototypeWithAuth.ViewModels
@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@inject UserManager<ApplicationUser> _userManager

@{
    var color = "order-inv-color";
    var equipment = "";
    var hiddenSummary = "";
    if (Model.SectionType.Equals(AppUtility.MenuItems.LabManagement))
    {
        equipment = "equipment";
        color = "lab-man-color";
    }

    if (Model.ModalType == AppUtility.RequestModalType.Summary)
    {
        hiddenSummary = "hidden";
}
}
@{ string showItem = "";
    string showLocation = "";
    string showPrice = "";
    string showDocuments = "";
    string showComments = "";
    switch (Model.Tab)
    {
        case 1:
            showItem = " active show ";
            break;
        case 2:
            showLocation = " active show ";
            break;
        case 3:
            showPrice = " active show ";
            break;
        case 4:
            showDocuments = " active show ";
            break;
        case 5:
            showComments = " active show ";
            break;

    }
}
<input type="hidden" class="old-name" value="@Model.Request.Product.ProductName" />
<div class="container-fluid edit-modal-body box-shadow orders" style="background: #FFF; border: 2px solid #EAEAEB;">
    @*@if (User.IsInRole("Admin"))
        {*@
    <div class=" row text-right mb-0 @hiddenSummary">
        <div class="switch col-12 switch-margin">
            <label>
                <label class="edit-mode-switch-description">Edit Mode Off</label>
                <input type="checkbox" class="turn-edit-on-off  orders @equipment" value="@Model.Request.RequestID" productID="@Model.Request.ProductID" name="details">
                <span class="lever"></span>
            </label>
        </div>
    </div>
    @*}*@
    <!-- Default switch -->

    <div class="tab-content">
        <div id="item" class="tab-pane fade in  @showItem">
            <div class="row modal-tab-name">
                <span class="heading-1 col-12 modal-tab-name">Item</span>
            </div>
            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        <label asp-for="Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription" class="control-label"></label>
                        <input class="item-category form-control-plaintext border-bottom " readonly value=@@Model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription />
                        <span asp-validation-for="Request.Product.ProductSubcategory.ParentCategoryID" class="text-danger-centarix"></span>
                    </div>
                </div>
                <div class="col-4 px-4">
                    <div class="form-group sublist">
                        <label asp-for="Request.Product.ProductSubcategory.ProductSubcategoryDescription" class="control-label"></label>
                        @Html.DropDownListFor(vm => vm.Request.Product.ProductSubcategoryID,
new SelectList(Model.ProductSubcategories, "ProductSubcategoryID", "ProductSubcategoryDescription"),
new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext mark-readonly", @id = "sublist", @disabled = "disabled", @searchable = "Select SubCategory" })
                        <span asp-validation-for="Request.Product.ProductSubcategoryID" class="text-danger-centarix"></span>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label class="control-label">Project:</label>
                        @Html.DropDownListFor(
         vm => vm.Request.SubProject.ProjectID,
         new SelectList(
             Model.Projects,
             "ProjectID",
             "ProjectDescription"
             ), "Select Project",
         new { @class = "mdb-select custom select-dropdown form-control-plaintext Project mark-readonly", @disabled = "disabled", @searchable = "Select Project" }
     )
                        <span asp-validation-for="Request.SubProject.ProjectID" class="text-danger-centarix"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        <label class="control-label">Sub Project:</label>
                        @Html.DropDownListFor(
         vm => vm.Request.SubProjectID,
         new SelectList(
             Model.SubProjects,
             "SubProjectID",
             "SubProjectDescription"
             ), "Select Sub Project",
         new { @class = "mdb-select mdb-select-subProject custom select-dropdown form-control-plaintext mark-readonly", @id = "SubProject", @disabled = "disabled", @searchable = "Select Sub Project" }
     )
                        <span asp-validation-for="Request.SubProjectID" class="text-danger-centarix"></span>
                    </div>
                </div>
                <div class="col-4 px-4">
                    <div class="form-group">
                        <label asp-for="Request.Product.Vendor" class="control-label"></label>
                        @Html.DropDownListFor(
         vm => vm.Request.Product.VendorID,
         new SelectList(
         Model.Vendors,
             dataValueField: "VendorID",
             dataTextField: "VendorEnName"), "Select A Vendor",
         //FUTURE: Ask If we should put in the functionality to create a new vendor here rather than just choosing
         htmlAttributes: new { @class = " vendorList mdb-select custom select-dropdown form-control-plaintext mark-readonly", @id = "vendorList", @disabled = "disabled", @searchable = "Select A Vendor" }
     )
                        <span asp-validation-for="Request.Product.Vendor.VendorID" class="text-danger-centarix"></span>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @* IN MIDDLE *@
                        <label asp-for="Request.Product.Vendor.VendorBuisnessID" class="control-label"></label>
                        <label class="vendorBusinessId form-control-plaintext border-bottom -plaintext">@Model.Request.Product.Vendor.VendorBuisnessID</label>
                        @*don't need a validation here because you it's not saving*@
                    </div>
                </div>
            </div>
            @if (Model.Request.RequestStatusID == 2 || Model.Request.RequestStatusID == 3 || Model.Request.RequestStatusID == 4 || Model.Request.RequestStatusID == 5)
            {
                <div class="row @hiddenSummary">
                    <div class="col-6 pr-4">
                        <label asp-for="Request.ParentRequest.OrderNumber" class="control-label"></label>
                        <input asp-for="Request.ParentRequest.OrderNumber" class="form-control-plaintext border-bottom "  disabled />
                        <span asp-validation-for="Request.ParentRequest.OrderNumber" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-6">
                        <label asp-for="Request.ParentRequest.OrderDate"  class="control-label"></label>
                        <input asp-for="Request.ParentRequest.OrderDate"  asp-format="{0:dd/MM/yyyy}" class="form-control-plaintext border-bottom datepicker"  type="text" disabled />
                        <span asp-validation-for="Request.ParentRequest.OrderDate" class="text-danger-centarix" />
                    </div>
                </div>
            }

            <div class="row @hiddenSummary">
                <div class="col-md-6 pr-4">
                    <label asp-for="Request.ParentQuote.QuoteNumber" class="control-label"></label>
                    <input asp-for="Request.ParentQuote.QuoteNumber" class="form-control-plaintext border-bottom mark-readonly" disabled />
                    <span asp-validation-for="Request.ParentQuote.QuoteNumber" class="text-danger-centarix" />
                </div>
                <div class="col-md-6">
                    <label asp-for="Request.ParentQuote.QuoteDate" class="control-label"></label>
                    <input asp-for="Request.ParentQuote.QuoteDate" asp-format="{0:dd/MM/yyyy}" class="form-control-plaintext  border-bottom create-modal-quote-date  mark-readonly datepicker" type="text" disabled />
                    <span asp-validation-for="Request.ParentQuote.QuoteDate" class="text-danger-centarix quote-date" />
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <label asp-for="Request.CatalogNumber" class="control-label"></label>
                    <input asp-for="Request.CatalogNumber" min="0" class="form-control-plaintext border-bottom mark-readonly" disabled />
                    <span asp-validation-for="Request.CatalogNumber" class="text-danger-centarix"></span>
                </div>
                <div class="col-3 @hiddenSummary">
                    <label asp-for="Request.Warranty" class="control-label"></label>
                    <input asp-for="Request.Warranty" min="0" class="form-control-plaintext border-bottom mark-readonly" disabled />
                    <span asp-validation-for="Request.Warranty" class="text-danger-centarix"></span>
                </div>
                @if (Model.Request.RequestStatusID == 2 || Model.Request.RequestStatusID == 3 || Model.Request.RequestStatusID == 4 || Model.Request.RequestStatusID == 5)
                {
                    <div class="col-3 @hiddenSummary">
                        <label class="control-label">End Date</label>
                        @*@{
                                //get this just to return the date (not the time)
                                //adding the amount of months of the warranty to the invoice date
                                var endWarrantyDate = Model.Request.ParentRequest.InvoiceDate.AddMonths(Model.Request.Warranty);
                            }*@
                        <input value="@Model.Request.ParentRequest.OrderDate.AddMonths(Model.Request.Warranty ?? 0).ToString("dd'/'MM'/'yyyy")" type="text" name="WarrantyDate" class="form-control-plaintext border-bottom -plaintext datepicker"  format="{0:dd/MM/yyyy}" disabled="disabled" />
                    </div>
                }
                else
                {
                    <div class="col-3 @hiddenSummary">
                        <label class="control-label">Estimated End Date</label>
                        <input value="@DateTime.Now.AddMonths(Model.Request.Warranty ?? 0).ToString("dd'/'MM'/'yyyy")" type="text" data-val="@DateTime.Now.AddMonths(Model.Request.Warranty ?? 0).ToString("dd-MM-yyyy")" name="WarrantyDate" class="form-control-plaintext border-bottom -plaintext datepicker" disabled="disabled" />
                    </div>
                }
                @if(Model.ModalType == AppUtility.RequestModalType.Summary)
                { 
                    <div class="col-4">
                        <label asp-for="Request.URL" class="control-label"></label>
                        <input asp-for="Request.URL" class="form-control-plaintext border-bottom mark-readonly" disabled />
                        <span asp-validation-for="Request.URL" class="text-danger-centarix"></span>
                    </div>
                }

            </div>
            <div class="row">

                @if (Model.Request.RequestStatusID == 2)
                {
                    <div class="col-md-4 @hiddenSummary">
                        <label asp-for="Request.ExpectedSupplyDays" class="control-label"></label>
                        <input asp-for="Request.ExpectedSupplyDays" class="form-control-plaintext border-bottom expected-supply-days mark-readonly" disabled />
                        <span asp-validation-for="Request.ExpectedSupplyDays" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-4 @hiddenSummary">
                        <div class="form-group">
                            <label class="control-label">Expected supply date</label>
                            <input value="@Model.Request.ParentRequest.OrderDate.AddDays(Model.Request.ExpectedSupplyDays ?? 0).ToString("dd'/'MM'/'yyyy")" class="form-control-plaintext border-bottom mark-readonly datepicker" type="text" name="expected-supply-days" id="expected-supply-date" min="@DateTime.Now.Date.ToString("dd'/'MM'/'yyyy")" disabled />
                        </div>
                    </div>

                }
                else if (Model.Request.RequestStatusID == 1 || Model.Request.RequestStatusID == 6)
                {
                    <div class="col-md-4 @hiddenSummary">
                        <label asp-for="Request.ExpectedSupplyDays" class="control-label"></label>
                        <input asp-for="Request.ExpectedSupplyDays" class="form-control-plaintext border-bottom expected-supply-days @mark-readonly" disabled />
                        <span asp-validation-for="Request.ExpectedSupplyDays" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-4 @hiddenSummary">
                        <div class="form-group">
                            <label class="control-label">Expected supply date</label>
                            <input value="" class="form-control-plaintext border-bottom mark-readonly datepicker" disabled type="text" name="expected-supply-days" id="expected-supply-date" min="@DateTime.Now.Date.ToString("yyyy-MM-dd")" />
                        </div>
                    </div>
                }


                @if (Model.ModalType == AppUtility.RequestModalType.Edit)
                {
                    <div class="col-4">
                        <label asp-for="Request.URL" class="control-label"></label>
                        <input asp-for="Request.URL" class="form-control-plaintext border-bottom mark-readonly" disabled />
                        <span asp-validation-for="Request.URL" class="text-danger-centarix"></span>
                    </div>
                }
            </div>
        </div>

        <div id="location" class="tab-pane fade @showLocation">
            <div class="row modal-tab-name">
                <span class="heading-1 col-12 modal-tab-name">Location</span>
            </div>
            @if (Model.ReceivedLocationViewModel != null)
            {
                <div class="row">
                    <div class="col-2">
                        <div class="form-group">
                            <label class="control-label" asp-for="ReceivedLocationViewModel.locationTypesDepthZero">Location Type</label>
                            <div class=" form-control-plaintext border-bottom p-0">
                                <span class="choose p-0"></span>
                                <div class="dropdown dropdown-main disable-custom-mdbselect">
                                    <div class="select d-inline-flex">
                                        <span class="caret py-0">
                                            ▼
                                        </span>
                                        <span class="overflow-hidden">@Model.ParentDepthZeroOfSelected?.LocationTypeName</span>

                                    </div>

                                    <ul class="p-0 locationinstance dropdown-menu ">
                                        @if (Model.ReceivedLocationViewModel != null)
                                            foreach (var locationType in Model.ReceivedLocationViewModel.locationTypesDepthZero)
                                            {
                                                <li id="@locationType.LocationTypeID" onclick="loadReceivedModalSubLocations(this.id)">
                                                    @locationType.LocationTypeName
                                                </li>
                                            }
                                        }
                                    </ul>

                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-10">
                        @if (Model.ReceivedModalSublocationsViewModel != null)
                        {
                            <div class="divSublocations container-fluid">
                                <div class="row">
                                    @{ var count = Model.ReceivedModalSublocationsViewModel.locationTypeNames.Count; }
                                    @for (int i = 0; i < count - 1; i++) //do count - 1 because we don't want them to select the smallest instances
                                    {
                                        var id = "locationInstancesSelected[" + i + "]";
                                        var depth = Model.ReceivedModalSublocationsViewModel.locationInstancesSelected.Count;
                                        var name = "";
                                        <div class="form-group col-3 ">
                                            <label class="control-label">@Model.ReceivedModalSublocationsViewModel.locationTypeNames[i]</label>
                                            @if (i == 0)
                                            {
                                                <div class="">
                                                    <div class=" form-control-plaintext border-bottom p-0">
                                                        <span class="choose p-0"></span>
                                                        <div class="dropdown dropdown-main disable-custom-mdbselect">
                                                            <div class="select d-inline-flex">
                                                                <span class="caret py-0">
                                                                    ▼
                                                                </span>
                                                                @if (i < depth)
                                                                {
                                                                    name = Model.ReceivedModalSublocationsViewModel.locationInstancesSelected[depth - 1 - ((i + (count - (count - depth))) - depth)].LocationInstanceName;
                                                                }
                                                                <span class="overflow-hidden">@name</span>

                                                            </div>

                                                            <ul class="p-0 locationinstance dropdown-menu ">
                                                                @foreach (var locationType in Model.ReceivedModalSublocationsViewModel.locationInstancesDepthZero)
                                                                {
                                                                    <li id="@locationType.LocationInstanceID" onclick="SLI(this)" value="@locationType.LocationInstanceID">
                                                                        @locationType.LocationInstanceName
                                                                    </li>
                                                                }
                                                            </ul>

                                                        </div>
                                                    </div>
                                                </div>

                                            }

                                            else
                                            {
                                                <div class="">
                                                    <div class=" form-control-plaintext border-bottom p-0">
                                                        <span class="choose p-0"></span>
                                                        <div class="dropdown dropdown-main disable-custom-mdbselect">
                                                            <div class="select d-inline-flex " style="padding-right:1.25rem;">
                                                                <span class="caret py-0">
                                                                    ▼
                                                                </span>
                                                                @if (i < depth)
                                                                {
                                                                    name = Model.ReceivedModalSublocationsViewModel.locationInstancesSelected[depth - 1 - ((i + (count - (count - depth))) - depth)].LocationInstanceName;
                                                                }
                                                                <span class="overflow-hidden overflow-left">@name</span>

                                                            </div>

                                                            <ul class="p-0 locationinstance dropdown-menu ">
                                                                @if (i < depth)
                                                                {
                                                                    @*@for (int w=0; w<=Model.ChildrenLocationInstances.Count; w++)
                                                                        {
                                                                            <li id="@Model.ChildrenLocationInstances[w].FirstOrDefault().LocationInstanceID" onclick="SLI(this)" value="@Model.ChildrenLocationInstances[w].FirstOrDefault().LocationInstanceID">
                                                                                @Model.ChildrenLocationInstances[w].FirstOrDefault().LocationInstanceName
                                                                            </li>
                                                                        }*@
                                                                    @foreach (var location in Model.ChildrenLocationInstances[depth - 1 - ((i + (count - (count - depth))) - depth)])
                                                                    {
                                                                        <li id="@location.LocationInstanceID" onclick="SLI(this)" value="@location.LocationInstanceID">
                                                                            @location.LocationInstanceName
                                                                        </li>
                                                                    }
                                                                }
                                                            </ul>

                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    @if (Model.ReceivedModalVisualViewModel != null)
                    {
                        <div class="visualView col-6 m-auto text-center">
                            @{ await Html.RenderPartialAsync("ReceivedModalVisual", Model.ReceivedModalVisualViewModel); }
                            @*<table class="table table-sm border">
                                    @{
                                        int z = -1;
                                    }
                                    @for (int X = 0; X < Model.ReceivedModalVisualViewModel.ParentLocationInstance.Height; X++)
                                    {
                                        <tr>
                                            @for (int y = 0; y < Model.ReceivedModalVisualViewModel.ParentLocationInstance.Width; y++)
                                            {
                                                z++;
                                                @if (Model.ReceivedModalVisualViewModel.ChildrenLocationInstances.ToList().Count() >= z) //put this in an if statement so it won't run into an instance where it doesn't exist since it's not a foreach
                                                {
                                                    @Html.HiddenFor(vm => vm.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].LocationInstanceID);
                                                    @Html.HiddenFor(vm => vm.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].LocationInstanceParentID);
                                                    @Html.HiddenFor(vm => vm.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].Place);

                                                    if (Model.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull)
                                                    {
                                                        @if (Model.LocationInstances.Contains(Model.ReceivedModalVisualViewModel.ChildrenLocationInstances[z]))
                                                        {
                                                            <td class="border" style="padding:0px;">
                                                                @Html.CheckBoxFor(m => m.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull, htmlAttributes: new { @checked = true, @class = "css-checkbox", @disabled = "disabled" })
                                                                @Html.LabelFor(m => m.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull, Model.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].Place + " ", htmlAttributes: new { @class = "css-label" })
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            var backgroundClass = " order-inv-filter ";
                                                            <td class="border " style="padding:0px; width:42px; height:42px;">

                                                                @Html.CheckBoxFor(m => m.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull, htmlAttributes: new { @checked = true, @disabled = "disabled", @class = "css-checkbox" })

                                                                @Html.LabelFor(m => m.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull, Model.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].Place + " ", htmlAttributes: new { @class = backgroundClass + "css-label" })
                                                            </td>
                                                        }

                                                    }
                                                    else
                                                    {
                                                        <td class="border" style="padding:0px;">
                                                            @Html.CheckBoxFor(m => m.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull, htmlAttributes: new { @checked = false, @class = "css-checkbox", @disabled = "disabled" })
                                                            @Html.LabelFor(m => m.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].IsFull, Model.ReceivedModalVisualViewModel.ChildrenLocationInstances[z].Place + " ", htmlAttributes: new { @class = "css-label" })
                                                        </td>
                                                    }

                                                }

                                            }
                                        </tr>
                                    }
                                </table>*@
                        </div>
                    }
                </div>

            }

        </div>
        <div id="price" class="tab-pane fade @showPrice">
            <div class="row modal-tab-name">
                <span class="heading-1 col-12 modal-tab-name">Price</span>
            </div>
            <div class="row">
                <div class="col-md-2 offset-8">
                    <div class="form-group">
                        <label asp-for="Request.Currency" class="control-label">Currency</label>
                        <select id="currency" asp-for="Request.Currency" disabled class="mdb-select custom select-dropdown form-control-plaintext mark-readonly">
                            <option value="@AppUtility.CurrencyEnum.USD.ToString()">&dollar; USD</option>
                            <option value="@AppUtility.CurrencyEnum.NIS.ToString()">&#8362; NIS</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="Request.ExchangeRate" class="control-label"></label>
                        <input asp-for="Request.ExchangeRate" min="1" class="form-control-plaintext border-bottom mark-readonly" disabled />
                        <span asp-validation-for="Request.ExchangeRate" class="text-danger-centarix"></span>
                    </div>
                </div>
            </div>
            <div class="row" id="edit">
                <div class="col-4 RequestUnitCard">
                    <div class="border p-3">
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label asp-for="Request.Unit" class="control-label"></label>
                                <input asp-for="Request.Unit" class="form-control-plaintext border-bottom mark-readonly" disabled min="1" />
                                <span asp-validation-for="Request.Unit" class="text-danger-centarix"></span>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Request.UnitType" class="control-label"></label>
                                    @Html.DropDownListFor(
vm => vm.Request.UnitTypeID,
Model.UnitTypeList,
"",
htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext mark-readonly unit-type-select", @disabled = "disabled" }
)
                                    <span asp-validation-for="Request.UnitType" class="text-danger-centarix"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Price:</label>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="input-group">
                                        <span class="input-group-text request-cost-dollar-icon">&#36;</span>
                                        <input  type="number" class="form-control-plaintext border-bottom mark-readonly" name="unit-price-dollars" id="unit-price-dollars" disabled />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group">
                                        <span class="input-group-text request-cost-shekel-icon">&#x20aa;</span>
                                        <input class="form-control-plaintext border-bottom mark-readonly" name="unit-price-shekel" id="unit-price-shekel" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @{var cardDisplayNoneSub = "d-none";
                    var plusDisplayNoneSub = "";
                    var disabled = "";
                    var subMarkReadOnly = "";
                    if (Model.Request.SubUnit > 0)
                    {
                        cardDisplayNoneSub = "";
                        plusDisplayNoneSub = "d-none";
                        disabled = "disabled";
                        subMarkReadOnly = "mark-readonly";
                    }
                }
                <div class="col-4 pl-0 RequestSubunitCard">
                    <div class="border h-100 ">
                        <button type="button" class="close sub-close @cardDisplayNoneSub pr-2 pt-2  mark-readonly" disabled aria-label="Close" style="
    /* display: flex; */
    float: right;
">
                            <span aria-hidden="true">×</span>
                        </button>
                        <div class="mx-2rem addSubUnitCard mt-4 @plusDisplayNoneSub"><div class="row " style="display:initial;">          <div class="col-8 offset-2 text-center font-weight-light"><input type="button" value="+" class=" addSubUnit btn m-0 p-0 no-box-shadow mark-readonly" disabled style="font-size: 5rem; line-height:normal" /><br><span class="text-capitalize order-inv-color text">add sub unit</span></div></div></div>
                        <div class="mx-2rem  subUnitsCard @cardDisplayNoneSub mt-4">


                            <div class="row">
                                <div class="col-md-6 pl-0 form-group">
                                    <label asp-for="Request.SubUnit" class="control-label"></label>
                                    @if (disabled.Length == 0)
                                    {
                                        <input asp-for="Request.SubUnit" class="form-control-plaintext border-bottom @subMarkReadOnly " />
                                    }
                                    else
                                    {
                                        <input asp-for="Request.SubUnit" class="form-control-plaintext border-bottom @subMarkReadOnly " disabled />
                                    }
                                    <span asp-validation-for="Request.SubUnit" class="text-danger-centarix"></span>
                                </div>
                                <div class="col-md-6 form-group">
                                    <label asp-for="Request.SubUnitType" class="control-label"></label>
                                    @Html.DropDownListFor(
vm => vm.Request.SubUnitTypeID,
Model.UnitTypeList,
"",
         htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext " + @subMarkReadOnly, @disabled = @disabled}
         )
                                    <span asp-validation-for="Request.SubUnitType" class="text-danger-centarix"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Price:</label>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="input-group">
                                            <span class="input-group-text request-cost-dollar-icon">&#36;</span>
                                            <input class="form-control-plaintext border-bottom @subMarkReadOnly" name="subunit-price-dollars" id="subunit-price-dollars" @disabled />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="input-group">
                                            <span class="input-group-text request-cost-shekel-icon @subMarkReadOnly">&#x20aa;</span>
                                            <input class="form-control-plaintext border-bottom" name="subunit-price-shekel" id="subunit-price-shekel" @disabled />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @{
                    var cardDivDisplayNone = "d-none";
                    var cardDisplayNoneSubSub = "d-none";
                    var plusDisplayNoneSubSub = "";
                    var subsubdisabled = "";
                    var subsubMarkReadOnly = "";
                    if (Model.Request.SubUnit > 0)
                    {
                        cardDivDisplayNone = "";
                        if (Model.Request.SubSubUnit > 0)
                        {
                            plusDisplayNoneSubSub = "d-none";
                            cardDisplayNoneSubSub = "";
                        }
                        else
                        {
                            plusDisplayNoneSubSub = "";
                            cardDisplayNoneSubSub = "d-none";
                            subsubdisabled = "disabled";
                            subsubMarkReadOnly = "mark-readonly";
                        }
                    }
                }
                <div class="col-4 pl-0 RequestSubsubunitCard @cardDivDisplayNone">
                    <div class="border h-100">
                        <button type="button" class="close subsub-close @cardDisplayNoneSubSub pr-2 pt-2 mark-readonly" disabled aria-label="Close" style="
    /* display: flex; */
    float: right;
">
                            <span aria-hidden="true">×</span>
                        </button>
                        <div class="mx-2rem addSubSubUnitCard mt-4 @plusDisplayNoneSubSub"><div class="row " style="display:initial;"><div class="col-8 offset-2 text-center font-weight-light"><input type="button" value="+" class=" addSubSubUnit btn m-0 p-0 no-box-shadow mark-readonly" disabled style="font-size: 5rem; line-height:normal" /><br><span class="text-capitalize order-inv-color text">add sub unit</span></div> </div></div>
                        <div class="mx-2rem  subSubUnitsCard mt-4 @cardDisplayNoneSubSub">
                            <div class="row">
                                <div class="col-md-6 form-group">
                                    <label asp-for="Request.SubSubUnit" class="control-label"></label>
                                    @if (subsubdisabled.Length == 0)
                                    {
                                        <input asp-for="Request.SubSubUnit" class="form-control-plaintext border-bottom @subsubMarkReadOnly " />
                                    }
                                    else
                                    {
                                        <input asp-for="Request.SubSubUnit" class="form-control-plaintext border-bottom @subsubMarkReadOnly " disabled />
                                    }
                                    <span asp-validation-for="Request.SubSubUnit" class="text-danger-centarix"></span>
                                </div>
                                <div class="col-md-6 form-group">
                                    <label asp-for="Request.SubSubUnitType" class="control-label" style="font-size:0.85rem;"></label>
                                    @Html.DropDownListFor(
                                        vm => vm.Request.SubSubUnitTypeID,
                                        Model.UnitTypeList,
                                        "",
                                        htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext" + @subsubMarkReadOnly, @subsubdisabled }
                                        )
                                    <span asp-validation-for="Request.SubSubUnitType" class="text-danger-centarix"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Price:</label>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="input-group">
                                            <span class="input-group-text request-cost-dollar-icon">&#36;</span>
                                            <input class="form-control-plaintext border-bottom @subsubMarkReadOnly" name="subsubunit-price-dollars" id="subsubunit-price-dollars" @disabled/>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="input-group">
                                            <span class="input-group-text request-cost-shekel-icon">&#x20aa;</span>
                                            <input class="form-control-plaintext border-bottom @subsubMarkReadOnly" name="subsubunit-price-shekel" id="subsubunit-price-shekel" @disabled /> <span asp-validation-for="Request.SubSubUnit" class="text-danger-centarix"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label">Sum:</label>
                    <div class="input-group">
                        <span class="input-group-text request-cost-dollar-icon">&#36;</span>
                        <input class="form-control-plaintext border-bottom mark-readonly" name="sum-dollars" min="0" id="sum-dollars" disabled />
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label asp-for="Request.Cost" class="control-label"></label>
                    <div class="input-group">
                        <span class="input-group-text request-cost-shekel-icon">&#x20aa;</span>
                        <input asp-for="Request.Cost" min="1" class="form-control-plaintext border-bottom " readonly />
                        <span class="text-danger-centarix" asp-validation-for="Request.Cost"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label asp-for="Request.VAT" class="control-label"></label>
                    <div class="input-group">
                        <span class="input-group-text disabled-text">&#x20aa;</span>
                        <input asp-for="Request.VAT" class="form-control-plaintext border-bottom disabled-text " disabled />
                        <span class="text-danger-centarix" asp-validation-for="Request.VAT"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label"></label>
                    <div class="input-group">
                        <span class="input-group-text disabled-text">&#36;</span>
                        <input class="form-control-plaintext border-bottom  vatInDollars disabled-text " disabled />
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label">Total + VAT:</label>
                    <div class="input-group">
                        <span class="input-group-text disabled-text">&#36;</span>
                        <input class="form-control-plaintext border-bottom disabled-text" id="sumPlusVat-Dollar" name="sumPlusVat-Dollar" disabled />
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label">____</label>
                    <div class="input-group">
                        <span class="input-group-text disabled-text">&#x20aa;</span>
                        <input class="form-control-plaintext border-bottom disabled-text" id="sumPlusVat-Shekel" name="sumPlusVat-Shekel" disabled />
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div id="documents" class="tab-pane fade @showDocuments">
        <div class="row modal-tab-name">
            <span class="heading-1 col-12 modal-tab-name">Documents</span>
        </div>

        @{
            var urlAction = Url.Action("DocumentsModal", "Requests");
            var fontSize = "2rem";
        }

        <input type="submit" style="display:none;" id="documentSubmit" url="@urlAction" class="documentSubmit" />

        <div class="row document-margin-bottom">
            <div class=" document-margin @hiddenSummary">
                @{
                    var filterClass = "opac87";
                    if (Model.QuoteFileStrings != null && Model.QuoteFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal " data-string="@AppUtility.RequestFolderNamesEnum.Quotes.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Quotes.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class="document-card text-center">
                            <i class="icon-chrome_reader_mode-24px @filterClass document-icon" alt="order" style="font-size:@fontSize"></i>
                        </div>
                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Quote</label>
            </div>
            <div class=" document-margin @hiddenSummary">
                @{
                    filterClass = "opac87";
                    if (Model.OrderFileStrings != null && Model.OrderFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Orders.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Orders.ToString()" data-val="@false">
                    <div class="card document-border ">
                        <div class="document-card text-center">
                            <i class="icon-centarix-icons-03 @filterClass document-icon" alt="order" style="font-size:@fontSize"></i>
                        </div>

                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Order</label>
            </div>
            <div class=" document-margin @hiddenSummary">
                @{
                    filterClass = "opac87";
                    if (Model.InvoiceFileStrings != null && Model.InvoiceFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Invoices.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Invoices.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class=" document-card text-center">
                            <i class="icon-book-24px @filterClass document-icon" alt="order" style="font-size:@fontSize;"></i>
                        </div>

                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Invoice</label>
            </div>
            <div class="@hiddenSummary">
                @{
                    filterClass = "opac87";
                    if (Model.ShipmentFileStrings != null && Model.ShipmentFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Shipments.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Shipments.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class="document-card text-center">
                            <i class="icon-local_shipping-24px @filterClass document-icon" alt="order" style="font-size:@fontSize"></i>
                        </div>

                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Shipment</label>
            </div>
        </div>
        <div class="row document-margin-bottom">
            <div class=" document-margin">
                @{
                    filterClass = "opac87";
                    if (Model.InfoFileStrings != null && Model.InfoFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Info.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Info.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class="document-card text-center">
                            <i class="icon-info-24px-2 @filterClass document-icon" alt="order" style="font-size:@fontSize"></i>
                        </div>
                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Info</label>
            </div>
            <div class=" document-margin">
                @{
                    filterClass = "opac87";
                    if (Model.PictureFileStrings != null && Model.PictureFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Pictures.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Pictures.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class="document-card text-center">
                            <i class="icon-camera_alt-24px @filterClass document-icon" alt="order" style="font-size:@fontSize"></i>
                        </div>
                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Picture</label>
            </div>
            <div class=" document-margin @hiddenSummary">
                @{
                    filterClass = "opac87";
                    if (Model.ReturnFileStrings != null && Model.ReturnFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Returns.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Returns.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class="document-card text-center">
                            <i class="icon-remove_shopping_cart-24px document-icon @filterClass" alt="order" style="font-size:@fontSize"></i>
                        </div>
                    </div>
                </a>
                <label class="control-label text-center text  document-text-margin" style="width:100%;">Return</label>
            </div>
            <div class="@hiddenSummary">
                @{
                    filterClass = "opac87";
                    if (Model.CreditFileStrings != null && Model.CreditFileStrings.Count > 0)
                    {
                        filterClass = "order-inv-filter";
                    }
                }
                <a href="" class="open-document-modal" data-string="@AppUtility.RequestFolderNamesEnum.Credits.ToString()" data-id="@Model.Request.RequestID" id="@AppUtility.RequestFolderNamesEnum.Credits.ToString()" data-val="@false">
                    <div class="card document-border">
                        <div class="document-card text-center">
                            <i class="icon-insert_drive_file-24px-1 @filterClass document-icon" alt="order" style="font-size:@fontSize"></i>
                        </div>
                    </div>
                </a>
                <label class="control-label text-center text document-text-margin" style="width:100%;">Credit</label>
            </div>
        </div>
    </div>
    <div id="comments" class="tab-pane fade @showComments">
        <div class="row modal-tab-name">
            <span class="heading-1 col-12 modal-tab-name float-left">Comments and Ratings</span>
        </div>
        <div class=" container text-right p-0">
            <ul class="list-unstyled">
                <li>
                    <button href="#" id="addRequestComment" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="no-box-shadow btn p-0 m-0 mark-readonly" disabled>
                        <i class="@color icon-add_circle-24px" style="
    font-size: 3rem;
"></i>
                    </button>
                </li>

                <div style="display:none;" id="popover-content">

                    @foreach (var item in Model.CommentTypes)
                    {<div class="row px-3 comment-btn">
                            @if (item.Equals(AppUtility.CommentTypeEnum.Comment))
                            {
                                <i class="icon-comment-24px" style="color: #30BCC9; padding-top: .55rem; font-size: 1.25rem;"></i>
                            }
                            else
                            {
                                <i class="icon-report_problem-24px" style="color: var(--danger-color); padding-top: .55rem; font-size: 1.25rem;"></i>
                            }
                            <button type="button" id="@item" class="no-box-shadow btn bg-transparent row p-0 text-capitalize text-dark" style="font-size:1rem; font-weight:400;" onclick="$.fn.addRequestComment('@item')">@item</button><hr class="m-0" />

                        </div>
                    }
                </div>

            </ul>
        </div>

        <div id="comment-info">
            <input type="hidden" value="@Model.Comments.Count" id="index" />
            @for (int i = 0; i < Model.Comments.Count; i++)
            {
                await Html.RenderPartialAsync("CommentInfoPartialView", new CommentsInfoViewModel { Comment = Model.Comments[i], Index = i, IsEdit = true });
            }

        </div>
    </div>
    <div id="history" class="tab-pane fade">
        <div class="row modal-tab-name">
            <span class="heading-1 col-12 modal-tab-name">History</span>
        </div>
        <table class="table table-headerspaced table-noheaderlines table-hover text-center">
            <thead>
                <tr>
                    <th>
                        Item Name
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Owner
                    </th>

                    <th>
                        Amount
                    </th>
                    <th>
                        Total
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.RequestsByProduct)
                {
                    <tr class="inv-list-item">
                        <td>
                            @Html.DisplayFor(modelItem => item.Product.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ParentRequest.OrderDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ParentRequest.ApplicationUser.FirstName) &nbsp;
                            @Html.DisplayFor(modelItem => item.ParentRequest.ApplicationUser.LastName)
                        </td>
                        <td>
                            <ul style="list-style: none;" class="mb-0 pl-0">

                                @if (item.Unit != null)
                                {
                                    <li>
                                        @Html.DisplayFor(modelItem => item.Unit)
                                        @Html.DisplayFor(modelItem => item.UnitType.UnitTypeDescription)
                                    </li>
                                    @if (item.SubUnit != null)
                                    {
                                        <li>
                                            @Html.DisplayFor(modelItem => item.SubUnit)
                                            @Html.DisplayFor(modelItem => item.SubUnitType.UnitTypeDescription)
                                        </li>
                                        @if (item.SubSubUnit != null)
                                        {
                                            <li>
                                                @Html.DisplayFor(modelItem => item.SubSubUnit)
                                                @Html.DisplayFor(modelItem => item.SubSubUnitType.UnitTypeDescription)
                                            </li>
                                        }
                                    }

                                }
                            </ul>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cost)
                        </td>
                    </tr>

                }
            </tbody>
        </table>

    </div>


</div>
<script src="~/js/WarantySupplyDateCalc.js"></script>
<script src="~/js/InitializeDatePicker.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/validate.js" asp-append-version="true"></script>
<script src="~/js/Validation/OrderInvItemFormValidation.js"></script>
@if (Model.Tab != 0)
{
    <script>
        $('.mdb-select').materialSelect();
    </script>
}

<script src="~/js/SubUnit.js"></script>
<script>
    $(function () {
        $("#Request_Cost").trigger('change');
    });
</script>
