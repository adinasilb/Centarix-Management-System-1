@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData


    <div class="row modal-tab-name">
        <span class="heading-1 col-12 modal-tab-name">History</span>
    </div>
    
    <table class="table table-headerspaced table-noheaderlines table-hover text-center">
        <thead>
            <tr>
                <th>
                    Item Name
                </th>
                <th>
                    Date
                </th>
                <th>
                    Owner
                </th>

                <th>
                    Amount
                </th>
                <th>
                    Price Per Unit
                    <div class="d-inline-block">
                        @{
                            await Html.RenderPartialAsync("_PricePopover", Model.PricePopoverViewModel);
                        }
                    </div>
                </th>

            </tr>
        </thead>
        <tbody>
            
            @foreach (var item in Model.RequestsByProduct)
            {
                <tr class="inv-list-item">
                    <td>
                        <button class="open-history-item-modal btn p-0 m-0 inv-link-clr no-box-shadow" value="@item.RequestID">
                            @Html.DisplayFor(modelItem => item.Product.ProductName)
                        </button>
                    </td>
                    <td>
                        @item.ParentRequest.OrderDate.ToString("dd/M/yyyy")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParentRequest.ApplicationUser.FirstName)&nbsp;
                        @Html.DisplayFor(modelItem => item.ParentRequest.ApplicationUser.LastName)
                    </td>
                    <td>
                        <ul style="list-style: none;" class="mb-0 pl-0">
                            <li>
                                @Html.DisplayFor(modelItem => item.Unit)
                                @Html.DisplayFor(modelItem => item.UnitType.UnitTypeDescription)
                            </li>
                            @if (item.SubUnit != null)
                            {
                                <li>
                                    @Html.DisplayFor(modelItem => item.SubUnit)
                                    @Html.DisplayFor(modelItem => item.SubUnitType.UnitTypeDescription)
                                </li>
                                @if (item.SubSubUnit != null)
                                {
                                    <li>
                                        @Html.DisplayFor(modelItem => item.SubSubUnit)
                                        @Html.DisplayFor(modelItem => item.SubSubUnitType.UnitTypeDescription)
                                    </li>
                                }
                            }
                        </ul>
                    </td>
                    <td>

                        @if (Model.RequestsByProduct[0].Currency == "NIS")
                        {
                            <label>&#x20aa;</label>
                            @Html.DisplayFor(modelItem => item.PricePerUnit)
                        }
                        else
                        {
                            
                            var dollarPricePerUnit = Math.Round(item.PricePerUnit / item.ExchangeRate, 2);
                             
                            <label>&#36;</label>
                            @dollarPricePerUnit
                        }
                    </td>
                </tr>

            }
        </tbody>
    </table>
<script>
    $("body").off('click').on('click', "modal .open-price-popover", function () {
        console.log('price popover from modal');
        $('[data-toggle="popover"]').popover('dispose');
        $(this).addClass("activePopover");
        $('[data-toggle="popover"]').each(function () {
            if (!$(this).hasClass("activePopover")) {
                $(this).popover('dispose');
            }
        });
        $('modal.open-price-popover').popover({
            sanitize: false,
            placement: 'bottom',
            html: true,
            content: function () {
                return $('#priceSortContent').html();
            }
        });
        $('modal .open-price-popover').popover('toggle');

        $(".popover").off("click").on("click", ".priceFilterDiv", function (e) {
            var id = "#" + $(this).children(".priceSort").prop("id")
            $(id).attr("checked", !$(id).prop("checked"));
            //  alert("In call index with new filter")
            ajaxPartialIndexTable($('.request-status-id').val(), "/Requests/_IndexTableData", "._IndexTableData", "GET", undefined, "");

            return false;
        })
    });
</script>