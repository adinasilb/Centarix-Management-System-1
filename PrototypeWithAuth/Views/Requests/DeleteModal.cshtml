@model PrototypeWithAuth.ViewModels.DeleteRequestViewModel

<script src="~/js/site.js" asp-append-version="true"></script>

<div class="modal modal-view" id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false">

    <div class="modal-dialog modal-lg rounded-reorder" role="document" style="max-height:100%; max-width:35rem; overflow-y:auto;">

        <div class="modal-content d-inline-block" style="width:35rem;">

            <form action="" method="post" enctype="multipart/form-data" style="height: 100%; overflow: auto;">
                @Html.HiddenFor(model => model.Request.RequestID)
                @Html.HiddenFor(model => model.IsReorder)

                @*THE FOLLOWING HIDDEN VALUES ARE TO REMEMBER THE REQUESTS INDEX PAGE FROM BEFORE*@
                @*the values for the hidden data is set in js on the modal success area off of the tempdata*@
                @Html.HiddenFor(model => model.Page)
                @Html.HiddenFor(model => model.RequestStatusID)
                @Html.HiddenFor(model => model.SubCategoryID)
                @Html.HiddenFor(model => model.VendorID)
                @Html.HiddenFor(model => model.ApplicationUserID) @*MAKE SURE THIS IS DOING IT CORRECTLY --> make sure js is parsing it as a string*@
                @Html.HiddenFor(model => model.PageType) @*JS shoulde be taking this as a string *@

                <div class="new-modal-header border-bottom box-shadow" style="padding: 1em 2em">
                    <span class="heading-1">Are you sure you would like to delete @Model.Request.Product.ProductName ?</span>
                </div>

                <div class="new-modal-body" style="background: #F6F7F8; padding: 1em">
                    <div class="container-fluid div-tabs box-shadow">
                        <span class="text pt-2">Details:</span>
                        <hr />
                        <div class="row">
                            <div class="col-4">
                                <div class="form-group">
                                    <label class="control-label " >@Html.DisplayNameFor(model => model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)</label>
                                    <input class="form-control-plaintext border-bottom" value="@Html.DisplayFor(model => model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)" disabled />
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-group">
                                    <label class="control-label" style="font-weight:500;">@Html.DisplayNameFor(model => model.Request.Product.ProductSubcategory.ProductSubcategoryDescription)</label>
                                    <input class="form-control-plaintext border-bottom" value="@Html.DisplayFor(model => model.Request.Product.ProductSubcategory.ProductSubcategoryDescription)" disabled />
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-group">
                                    <label class="control-label" style="font-weight:500;">@Html.DisplayNameFor(model => model.Request.Product.Vendor.VendorEnName)</label>
                                    <input class="form-control-plaintext border-bottom" value="@Html.DisplayFor(model => model.Request.Product.Vendor.VendorEnName)" disabled />
                                </div>
                            </div>

                        </div>

                        @*<div class="row">
                    <div class="col-4 font-weight-bold">
                        @Html.DisplayNameFor(model => model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)&nbsp;:
                        <br />
                        @Html.DisplayNameFor(model => model.Request.Product.ProductSubcategory.ProductSubcategoryDescription)&nbsp;:
                        <br />
                        @Html.DisplayNameFor(model => model.Request.Product.Vendor.VendorEnName)&nbsp;:
                    </div>
                    <div class="col-4">
                        @Html.DisplayFor(model => model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
                        <br />
                        @Html.DisplayFor(model => model.Request.Product.ProductSubcategory.ProductSubcategoryDescription)
                        <br />
                        @Html.DisplayFor(model => model.Request.Product.Vendor.VendorEnName)
                    </div>
                </div>*@

                    </div>

                    @*@Html.DisplayNameFor(model => model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription) &nbsp;: &ensp;
            @Html.DisplayFor(model => model.Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription)
            <br />
            @Html.DisplayNameFor(model => model.Request.Product.ProductSubcategory.ProductSubcategoryDescription) &nbsp;: &ensp;
            @Html.DisplayFor(model => model.Request.Product.ProductSubcategory.ProductSubcategoryDescription)
            <br />
            @Html.DisplayNameFor(model => model.Request.Product.Vendor.VendorEnName) &nbsp;: &ensp;
            @Html.DisplayFor(model => model.Request.Product.Vendor.VendorEnName)*@


                </div>
                <div class="modal-footer" style="padding: 2em;">
                    <div class="text-center">

                        <input type="submit" asp-action="DeleteModal" value="Confirm" class="custom-button custom-button-font order-inv-background-color mb-4 between-button-margin" />
                        <button class="custom-cancel custom-button  mb-4" data-dismiss="modal">Cancel</button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>