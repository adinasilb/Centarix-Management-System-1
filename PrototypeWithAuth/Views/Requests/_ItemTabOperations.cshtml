@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@using PrototypeWithAuth.ViewModels 

@{ var request = Model.Requests.FirstOrDefault();}
<span class="heading-1 modal-tab-name">Item</span>
@{
        var category = "";
        if (Model.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum != null)
        {
            category = Model.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum;
        }
        var modalType = Model.ModalType;
        var markReadOnlyClass = "";
        var hiddenSummaryClass = "";
        if (modalType == AppUtility.RequestModalType.Edit)
        {
            markReadOnlyClass = "mark-readonly";
        }
        if (modalType == AppUtility.RequestModalType.Summary)
        {
            hiddenSummaryClass = "hidden";
            markReadOnlyClass = "mark-readonly";
        }
    }

        <div class="operations-item-div">
            @for (int i = 0; i < Model.Requests.Count(); i++)
            {
                <div>
                @{await Html.RenderPartialAsync("_PartialItemOperationsTab", new OperationsItemViewModel(){ RequestIndex = i, ModalType = modalType, ParentCategories = Model.ParentCategories, ProductSubcategories = Model.ProductSubcategories });
                }
                </div>
            }
        </div>
        <div class="row text-center justify-content-center">
            <input type="button" id="addOperationItem" value="+ Add Item" class="btn  btn-rounded border no-box-shadow pt-1 pb-1 pr-5 pl-5 text-capitalize add-item" style="font-size:1rem;" data-val="1" />
        </div>
<script>$(".mdb-select").materialSelect()</script>