@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@using PrototypeWithAuth.ViewModels

@{
    var modalType = Model.ModalType;
    var markReadOnlyClass = "";
    var hiddenSummaryClass = "";
    var disabled = "";
    var vendorcurrencyid = "";
    if (modalType != AppUtility.RequestModalType.Create)
    {
        markReadOnlyClass = "mark-readonly";
        disabled = "disabled";
        if (modalType == AppUtility.RequestModalType.Summary)
        {
            hiddenSummaryClass = "hidden";
        }
        if (Model.Requests[0].Product.Vendor?.Country.CurrencyID != null)
        {
            vendorcurrencyid = Model.Requests[0].Product.Vendor.Country.CurrencyID.ToString();
        }
    }

}

    @{ var request = Model.Requests[0];}
    <span class="heading-1 modal-tab-name">Item</span>
    @*@if (modalType == AppUtility.RequestModalType.Create && !Model.IsProprietary)
        {
            <div class="row">
                <div class="col-4 offset-8">
                    <input type="checkbox" class="form-check-input filled-in isRequest" asp-for="IsRequestQuote" />
                    <label class="form-check-label" asp-for="IsRequestQuote">Need To Request Price</label>
                    <input type="hidden" value="@Model.IsRequestQuote.ToString().ToLower()" id="requestQuoteValue" />
                </div>
            </div>
        }*@
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Requests[0].Product.ProductSubcategory.ParentCategory.Description" class="control-label"></label>
                @if (Model.IsProprietary)
                {
                    <input asp-for="Requests[0].Product.ProductSubcategory.ParentCategory.Description" class="form-control-plaintext border-bottom" type="text" readonly />
                }
                else
                {
                    @Html.DropDownListFor(vm => vm.Requests[0].Product.ProductSubcategory.ParentCategoryID,
                 new SelectList(
                 Model.ParentCategories,
                 "ID",
                 "Description"
                 ), "Select Category",
                 new
                      {
                          @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass,
                          @id = "parentlist",
                     @searchable = "Select Category",
                          @data_stop_refresh = "true"
                      })
                }
                <input type="hidden" asp-for="Requests[0].Product.ProductSubcategory.ParentCategoryID" />
                <span asp-validation-for="Requests[0].Product.ProductSubcategory.ParentCategoryID" class="text-danger-centarix"></span>
            </div>
        </div>
        <div class="col-md-6 px-4">
            <div class="form-group sublist">
                <label asp-for="Requests[0].Product.ProductSubcategory.Description" class="control-label"></label>
                @Html.DropDownListFor(vm => vm.Requests[0].Product.ProductSubcategoryID,
                    new SelectList(
                    Model.ProductSubcategories,
                    "ID",
                    "Description"
                    ), "Select Sub Category",
                    new
                         {
                             @class = "mdb-select-sublist subcategory mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass,
                             @id = "sublist",
                        @searchable = "Select Sub Category",
                             @data_stop_refresh = "true"
                         })
                <input type="hidden" asp-for="Requests[0].Product.ProductSubcategoryID" disabled class="proprietryHidenCategory" />
                <span asp-validation-for="Requests[0].Product.ProductSubcategoryID" class="text-danger-centarix"></span>
            </div>
        </div>
    </div>

        <div class="row">
            <div class="col-md-6 ">
                <div class="form-group">
                    <label asp-for="Requests[0].Product.Vendor" class="control-label"></label>
                    @Html.DropDownListFor(
                            vm => vm.Requests[0].Product.VendorID,
                            new SelectList(
                            Model.Vendors,
                            dataValueField: "VendorID",
                            dataTextField: "VendorEnName"),
                            //FUTURE: Ask If we should put in the functionality to create a new vendor here rather than just choosing, "Select a Project",
                            "Select a Vendor",
                            htmlAttributes: new
                                 {
                                     @class = " vendorList mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass,
                                @id = "vendorList",
                                     @size = 1,
                                     @searchable = "Select A Vendor",
                                     @data_stop_refresh = "true"
                                 }
                            )

                    <span asp-validation-for="Requests[0].Product.VendorID" class="text-danger-centarix"></span>
                </div>
                <input type="hidden" id="VendorCurrencyID" value="@vendorcurrencyid" />
            </div>
            <input class="" type="hidden" value="" id="vendor-primary-email" />
            <div class="col-md-4 ">
                <div class="form-group">
                    @* IN MIDDLE *@
                    <label asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="control-label"></label>
                    <input asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="vendorBusinessId form-control-plaintext border-bottom " />
                    @*don't need a validation here because you it's not saving*@
                </div>
            </div>
            <div class="col-md-2 ">
                <div class="form-group h-100 d-flex" style="flex-direction: column;text-align: center;justify-content: center;">
                    <a href="#" class="open-vendor-float-details btn-link text no-hover" value="@Model.Requests[0].Product.VendorID" disabled>
                        <i class="icon-account_box-24px1 heading-1"></i>
                    </a>
                </div>
            </div>

            <div class="col-12"><span class="vendor-price-warning large-text text-danger-centarix font-weight-bold" style="color: #EED202;" id="vendor-price-warning"></span></div>
        </div>

        <div class="row">
            <div class="col-md-6 ">
                <label asp-for="Requests[0].Product.CatalogNumber" class="control-label"></label>
                <input asp-for="Requests[0].Product.CatalogNumber" class="form-control-plaintext border-bottom catalog-number  @markReadOnlyClass" />
                <span asp-validation-for="Requests[0].Product.CatalogNumber" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-3 ">
                <label asp-for="Requests[0].Warranty" class="control-label">Warranty Months</label>
                <input asp-for="Requests[0].Warranty" class="form-control-plaintext border-bottom warranty-months  @markReadOnlyClass" type="text" />
                <span asp-validation-for="Requests[0].Warranty" class="text-danger-centarix"></span>
            </div>
        </div>
        @if (modalType != AppUtility.RequestModalType.Create && Model.Requests[0].ParentQuote?.QuoteNumber != null)
        {
            <div class="row @hiddenSummaryClass">
                <div class="col-md-6">
                    <label asp-for="Requests[0].ParentQuote.QuoteNumber" class="control-label"></label>
                    <input asp-for="Requests[0].ParentQuote.QuoteNumber" readonly class="form-control-plaintext border-bottom  @markReadOnlyClass" disabled />
                    <span asp-validation-for="Requests[0].ParentQuote.QuoteNumber" class="text-danger-centarix" />
                </div>
                <div class="col-md-6">
                    <label asp-for="Requests[0].ParentQuote.ExpirationDate" class="control-label">Quote Expiration Date</label>
                    <input asp-for="Requests[0].ParentQuote.ExpirationDate" type="text" readonly class="form-control-plaintext border-bottom datepicker  @markReadOnlyClass" disabled value="@(Model.Requests[0].ParentQuote.ExpirationDate == new DateTime() ? "": Model.Requests[0].ParentQuote.ExpirationDate.GetElixirDateFormat())" />
                    <span asp-validation-for="Requests[0].ParentQuote.ExpirationDate" class="text-danger-centarix quote-date" />
                </div>
            </div>
        }
        <div class="row">
            @if (Model.Requests[0].ExpectedSupplyDays != null )
            {
                <div class="col-md-4 @hiddenSummaryClass requestPriceQuote">
                    <label asp-for="Requests[0].ExpectedSupplyDays" class="control-label"></label>
                    <input asp-for="Requests[0].ExpectedSupplyDays" class="form-control-plaintext border-bottom expected-supply-days requestPriceQuote  @markReadOnlyClass" type="text" />
                    <span asp-validation-for="Requests[0].ExpectedSupplyDays" class="text-danger-centarix"></span>
                </div>
                <div class="col-md-4  @hiddenSummaryClass requestPriceQuote">
                    <div class="form-group">
                        <label class="control-label">Expected supply date</label>
                        @if (modalType == AppUtility.RequestModalType.Create)
                        {
                            <input value="" class="form-control-plaintext border-bottom datepicker expected-supply-date requestPriceQuote  " disabled type="text" name="expected-supply-days" />
                        }
                        else
                        {
                            if (Model.Requests[0].RequestStatusID == 2)
                            {
                                <input value="@Model.Requests[0].ParentRequest.OrderDate.AddDays(request.ExpectedSupplyDays ?? 0).GetElixirDateFormat()" class="form-control-plaintext border-bottom datepicker expected-supply-date   @markReadOnlyClass" type="text" name="expected-supply-days" id="expected-supply-date" />
                            }
                            else
                            {
                                <input value="@DateTime.Now.AddDays(request.ExpectedSupplyDays ?? 0).GetElixirDateFormat()" class="form-control-plaintext border-bottom datepicker expected-supply-date  @markReadOnlyClass" type="text" name="expected-supply-days" id="expected-supply-date" />
                            }
                        }
                    </div>
                </div>
            }
            <div class="col-md-4 ">
                <label asp-for="Requests[0].URL" class="control-label"></label>
                @*<a type="hidden" id="url-click" href="@AppUtility.GetUrlFromUserData(Model.Requests[0].URL)" target="_blank" />*@
                <button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="form-control-plaintext border-bottom popover-url align-wi" value="RequestsURL">
                    <input asp-for="Requests[0].URL" class="border-0 bg-transparent black-87 @markReadOnlyClass url-shown" />
                </button>
                @*<input asp-for="Requests[0].URL" href="#" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" value="@Model.Requests[0].URL"*@
                @*class="form-control-plaintext border-bottom @websiteCategories @markReadOnlyClass url-shown" />*@

                <div style="display:none;" id="RequestsURL">
                    <div class="row px-3 accounting-popover">
                        <a href="@AppUtility.GetUrlFromUserData(Model.Requests[0].URL)" target="_blank" class="btn-link text no-hover">
                            <label class="m-2 text-transform-none">@Model.Requests[0].URL</label>
                        </a>
                    </div>
                </div>
                <span asp-validation-for="Requests[0].URL" class="text-danger-centarix"></span>
            </div>
        </div>
        @if (Model.Requests[0].ParentRequest?.SupplierOrderNumber != null || Model.Requests[0].ParentRequest?.OrderNumber != null)
        {
            <div class="row">
                @if (Model.Requests[0].ParentRequest?.SupplierOrderNumber != null)
                {
                    <div class="col-md-3 ">
                        <label asp-for="Requests[0].ParentRequest.SupplierOrderNumber" class="control-label"></label>
                        <input value="@Model.Requests[0].ParentRequest.SupplierOrderNumber" class="form-control-plaintext border-bottom" @disabled type="text" />
                        <span asp-validation-for="Requests[0].ParentRequest.SupplierOrderNumber" class="text-danger-centarix"></span>
                    </div>
                }
                @if (Model.Requests[0].ParentRequest?.OrderNumber != null)
                {
                    <div class="col-md-3 ">
                        <label asp-for="Requests[0].ParentRequest.OrderNumber" class="control-label">Centarix Order #</label>
                        <input value="@Model.Requests[0].ParentRequest.OrderNumber" class="form-control-plaintext border-bottom" @disabled type="text" />
                        <span asp-validation-for="Requests[0].ParentRequest.OrderNumber" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="Requests[0].ParentRequest.OrderDate" class="control-label"></label>
                        <input type="text" value="@Model.Requests[0].ParentRequest.OrderDate.GetElixirDateFormat()" class="form-control-plaintext border-bottom datepicker for-supply-date-calc" @disabled @*asp-format="@AppUtility.AspDateFormatString"*@ />
                        <span asp-validation-for="Requests[0].ParentRequest.OrderDate" class="text-danger-centarix"></span>
                    </div>
                }

            </div>
        }
        @if (Model.Requests[0].RequestStatusID == 3 || Model.Requests[0].Payments?.FirstOrDefault()?.HasInvoice == true)
        {
            <div class="row">
                @if (Model.Requests[0].RequestStatusID == 3)
                {
                    <div class="col-md-3 ">
                        <label asp-for="Requests[0].ArrivalDate" class="control-label"></label>
                        <input asp-for="Requests[0].ArrivalDate" class="form-control-plaintext border-bottom" asp-format="@AppUtility.AspDateFormatString" disabled type="text" />
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">Received By</label>
                        <input type="text" class="form-control-plaintext border-bottom" disabled value="@Model.Requests[0].ApplicationUserReceiver.FirstName @Model.Requests[0].ApplicationUserReceiver.LastName" />
                        <input type="hidden" asp-for="Requests[0].ApplicationUserReceiverID" />
                    </div>
                }
                @if (Model.Requests[0].Payments?.FirstOrDefault()?.HasInvoice == true) //todo: make this a loop for each payment
                {
                    <input type="hidden" asp-for="Requests[0].Payments[0].InvoiceID" />
                    <input type="hidden" asp-for="Requests[0].Payments[0].Invoice.InvoiceID" />
                    <div class="col-md-3 ">
                        <label asp-for="Requests[0].Payments[0].Invoice.InvoiceNumber" class="control-label"></label>
                        <input asp-for="Requests[0].Payments[0].Invoice.InvoiceNumber" class="form-control-plaintext border-bottom @markReadOnlyClass" />
                        <span asp-validation-for="Requests[0].Payments[0].Invoice.InvoiceNumber" class="text-danger-centarix"></span>
                    </div>
                    <div class="col-md-3 ">
                        <label asp-for="Requests[0].Payments[0].Invoice.InvoiceDate" class="control-label"></label>
                        <input asp-for="Requests[0].Payments[0].Invoice.InvoiceDate" class="form-control-plaintext border-bottom datepicker @markReadOnlyClass" type="text" asp-format="@AppUtility.AspDateFormatString" />
                        <span asp-validation-for="Requests[0].Payments[0].Invoice.InvoiceDate" class="text-danger-centarix"></span>
                    </div>
                }
            </div>
        }
    <script>

        $(".popover-url").off('click').click(function () {
            if ($("#RequestsURL .accounting-popover a").attr("href") == "") {
                console.log("empty url")
                $(this).popover('hide');
            }
            else {
                console.log("full url")
                var val = $(this).val();
                console.log("url popover")
                $('[data-toggle="popover"]').popover('dispose');
                $(this).popover({
                    sanitize: false,
                    placement: 'bottom',
                    html: true,
                    content: function () {
                        return $('#' + val).html();
                    }
                });
                $(this).popover('toggle');
            }
        });

        $("#Requests_0__URL").on("focusout", function (e) {
            var inputText = $(this).val();
            $.ajax({
                async: true,
                url: "/Requests/GetUrlFromUserData?inputtedUrl=" + inputText,
                traditional: true,
                type: "GET",
                cache: false,
                success: function (data) {
                    $("#RequestsURL a").attr("href", data);
                    $("#RequestsURL a label").html(inputText);
                    return false;
                }
            });
            $(".popover-url").popover('hide');
        });

        $(".open-vendor-float-details").on("click", function (e) {
            e.preventDefault();
            var vendorID = $("select.vendorList").val();
            if (vendorID > 0) {
                $.ajax({
                    async: true,
                    url: "/Requests/VendorFloatDetails?vendorID=" + vendorID + "&SectionType=" + $("#masterSectionType").val(),
                    type: "GET",
                    cache: true,
                    success: function (data) {
                        $.fn.OpenModal("vendorFloatModal", "vendor-float-modal", data);
                        $(".vendorFloatModal .mdb-select").materialSelect();
                        $.fn.TurnToDetails("vendorFloatModal");
                        $('.vendorFloatModal a:first').tab('show');
                        return false;
                    }
                });
                $(".popover-url").popover('hide');
            }
        });

        //$("#Requests_0__URL").on("blur", function (e) {
        //    var inputText = $(this).val();
        //    $.fn.ChangeUrlLink(inputText);
        //});

        $.fn.ChangeUrlLink = new function (inputText) {

        }
    </script>
