@model PrototypeWithAuth.ViewModels.AccountingPaymentsViewModel
@using PrototypeWithAuth.AppData
@{
    ViewData["Title"] = "AccountingPayments";
    Layout = "~/Views/Shared/RequestNavView.cshtml";
}
<script src="~/js/site.js"></script>
<script src="~/js/accounting.js"></script>
<table class="table table-headerspaced table-borderless table-hover">
    <thead>
        <tr style="border-color:transparent;">
            <th colspan="8" style="border-color:transparent;" class="pt-2">
                <div class="d-inline-flex">
                    <div class="heading-1">
                        @{
                            var count = 0;
                            if (Model.Requests != null)
                            {
                                var vendorsCount = Model.Requests.Count();
                                for (int x = 0; x < vendorsCount; x++)
                                {
                                    count += Model.Requests.ElementAt(x).Count();
                                }
                            }
                        }
                        @Html.DisplayFor(m => m.AccountingEnum) &nbsp;
                    </div>
                    <div class="text pt-2">
                        [@count]
                        @{
                            double totalCost = 0;
                            if (Model.Requests != null)
                            {
                                var vendorsCount = Model.Requests.Count();
                                for (int x = 0; x < vendorsCount; x++)
                                {
                                    totalCost += Model.Requests.ElementAt(x).Select(r => r.Cost ?? 0).Sum(c => c);
                                }
                            }

                            var decCost = (decimal)totalCost;
                            var formattedTotalCost = decCost.ToString("C02");
                        }
                        <span>&emsp; Total: </span><span>@formattedTotalCost</span>
                    </div>
                </div>
            </th>
        </tr>
        <tr class="text-center text">
            <td style="width:5%;">
                No
            </td>
            <td style="width:8.1%;"></td>
            <td style="width:11.1%;">
                Name
            </td>
            <td style="width:11.1%">
                Units
            </td>
            <td style="width:11.1%">
                Price
            </td>
            <td style="width:11.1%">
                Vendor
            </td>
            <td style="width:11.1%">
                Category
            </td>
            <td style="width:11.1%">
                Date
            </td>
            <td style="width:17.1%">
                <button class="float-right accounting-background-color custom-button-font custom-button px-2rem hidden" type="@Model.AccountingEnum" id="pay-selected">Pay Selected</button>
            </td>

        </tr>
    </thead>
</table>
<input type="hidden" class="activeVendor" value="" />
@foreach (var Vendor in Model.Requests)
{
    <div class="mt-5 ">
        <div class=" row text-dark ">
            <div class="col-2 text-capitalize heading-1"><h5>@Vendor.Key.VendorEnName.ToLower()</h5></div>
            <div class="col-10"><hr /></div>
        </div>
        <table class="table table-headerspaced table-borderless table-hover mt-3 text ">
            <tbody>
                @foreach (var Request in Vendor)
                {
                    <tr class="text-center accounting-select-row">
                        <td class="text-center" style="width:5%;">
                            <div class="form-check accounting-select">
                                <input type="checkbox" class="form-check-input fci-acc filled-in" id="@Request.RequestID"  vendorid="@Request.Product.VendorID">
                                <label class="form-check-label" for="@Request.RequestID">@Request.RequestID</label>
                            </div>
                        </td>
                        <td style="width:8.1%;">

                            @{
                                var imageurl = "/images/css/CategoryImages/placeholder.png";
                                if (Request.Product.ProductSubcategory.ImageURL != null)
                                {
                                    imageurl = Request.Product.ProductSubcategory.ImageURL;
                                }
                            }
                            <img src="@imageurl" alt="Image" width="75" class="category-image" />
                        </td>
                        <td style="width:11.1%;">
                            @Request.Product.ProductName
                        </td>
                        <td style="width:11.1%">
                            @Request.Unit @if (Request.UnitType != null)
                            {@Request.UnitType.UnitTypeDescription<br />}
                            @Request.SubUnit @if (Request.SubUnitType != null)
                            {@Request.SubUnitType.UnitTypeDescription<br />}
                            @Request.SubSubUnit @if (Request.SubSubUnitType != null)
                            {@Request.SubSubUnitType.UnitTypeDescription<br />}
                        </td>
                        <td style="width:11.1%">
                            @{
                                var requestCost = Request.Cost??0;
                                var decRequestCost = (decimal)requestCost;
                                var formattedRequestCost = decRequestCost.ToString("C02");
                            }
                            @formattedRequestCost
                        </td>
                        <td style="width:11.1%">
                            @Vendor.Key.VendorEnName.ToLower()
                        </td>
                        <td style="width:11.1%">
                            @Request.Product.ProductSubcategory.ProductSubcategoryDescription
                        </td>
                        <td style="width:11.1%">
                            @Request.CreationDate.Date.ToString("dd'/'MM'/'yyyy")
                        </td>
                        <td style="width:17.1%">
                            <div class="d-inline-flex">
                                <div class="table-icon-div">
                                    <a href="" class="p-0 m-0 pay-one" enumType="@Model.AccountingEnum" id="@Request.RequestID" data-toggle="tooltip" data-placement="top"
  title="Pay">
                                        <i class="icon-monetization_on-24px green-overlay px-1" style="font-size:1.6rem;"></i>
                                    </a>
                                </div>

                                <div class="table-icon-div">
                                    <a href="" class="p-0 m-0">
                                        <i class="icon-favorite_border-24px accounting-filter px-1" style="font-size:1.6rem;"></i>
                                    </a>
                                </div>
                                @*<a href="">
                                        <i class="icon-more_vert-24px px-1" style="font-size:1.6rem;"></i>

                                    </a>*@
                                @{ String popoverID = Request.RequestID + "more";}

                                <div class="table-icon-div">
                                    <ul class="list-unstyled p-0 m-0">
                                        <li>
                                            <button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="btn p-0 m-0 no-box-shadow more" value="@popoverID">
                                                <i class="icon-more_vert-24px px-1" style="font-size:1.6rem;">
                                                </i>
                                            </button>
                                        </li>
                                        <div style="display:none;" id="@popoverID">
                                            @if (Model.AccountingEnum != AppUtility.SidebarEnum.StandingOrders)
                                            {
                                                 var links = AppUtility.GetPaymentsPopoverLinks(Model.AccountingEnum);
                                                foreach (var link in links)
                                                {
                                                    <div class="row px-3 accounting-popover">
                                                        <a asp-action="@link.Action" asp-controller="@link.Controller" asp-route-currentStatus="@link.CurrentLocation" asp-route-requestID="@Request.RequestID" asp-route-newStatus="@link.Description" class="btn-link text no-hover"><i class="@link.Icon " style="color:@link.Color"></i><label class="m-2">@Html.DisplayFor(e => link.Description)</label></a>
                                                    </div>
                                                    <hr class="m-0" />
                                                }
                                            }


                                        </div>

                                    </ul>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div style="border-color:transparent;" class=" no-hover row text-right">
            <div colspan="8" style="border-color:transparent;" class="col-12 ">
                <div class="font-weight-bold text mt-4">
                    Items: @Vendor.Count()

                    <label class="mt-3">
                        &emsp; Total:
                    </label>&nbsp;<span>@(((decimal)(00000)).ToString("C02"))</span>

                    <button class="custom-button custom-button-font accounting-background-color ml-5 float-right payments-pay-now"
                            vendor="@Vendor.Key.VendorID" paymentstatus="@Vendor.FirstOrDefault().PaymentStatusID" type="@Model.AccountingEnum">
                        Pay All
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(function () {
        console.log("in fx accounting payments");
        var payNowSidebar = $(".sidebarCount.2");
        payNowSidebar.removeClass("hidden");
        payNowSidebar.html("[" + @TempData["PayNowCount"] + "]");
    });
</script>

