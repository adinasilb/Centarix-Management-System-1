@model PrototypeWithAuth.ViewModels.ConfirmEmailViewModel
@using PrototypeWithAuth.AppData
@{
    Layout = null;
    var bcColor = "order-inv-background-color";
    if (Model.RequestIndexObject.SectionType == AppUtility.MenuItems.Operations)
    {
        bcColor = "oper-background-color";
    }
    else if (Model.RequestIndexObject.SectionType == AppUtility.MenuItems.Requests)
    {
        bcColor = "order-inv-background-color";
    }
}


    <div class="modal modal-view overflow-auto email-model" id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false">

        <div class="modal-dialog modal-lg" role="document" style="max-height:100%; max-width:60rem; ">

            <div class="modal-content d-inline-block" style="width:58.96rem;">

                <div class="modal-header pb-0 border-bottom-0">
                    <button type="button" class="close modal-close-padding modal-close-style" data-dismiss="modal" aria-label="Close" onclick="$(this).closest('.modal').modal('hide');">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <form action="" method="post" enctype="multipart/form-data" style="height: 100%; ">
                    <input asp-for="RequestID" style="display: none;" />
                    @Html.HiddenFor(model => model.RequestIndexObject.PageType)
                    @Html.HiddenFor(model => model.RequestIndexObject.PageNumber)
                    @Html.HiddenFor(model => model.RequestIndexObject.SectionType)
                    @Html.HiddenFor(model => model.RequestIndexObject.SelectedCurrency)
                    @*@Html.HiddenFor(model => model.RequestIndexObject.SelectedPriceSort)*@
                    @Html.HiddenFor(model => model.RequestIndexObject.RequestStatusID)
                    @Html.HiddenFor(model => model.RequestIndexObject.SidebarFilterID)
                    @Html.HiddenFor(model => model.RequestIndexObject.SidebarType)
                    <div>
                        @{await Html.RenderPartialAsync("_OrderEmail", Model); }
                    </div>
                    <div class="modal-footer p-4">
                        <div class="m-auto">
                            <input type="submit" class="custom-button custom-button-font @bcColor between-button-margin" asp-action="ConfirmEmailModal" value="Confirm & Send Email" />

                            <input type="submit" class="custom-cancel custom-button cancel-email" asp-action="CancelEmailModal" value="Cancel Email" />
                        </div>
                    </div>
                    <script>
                        var today = new Date();
                        var date = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();
                        document.getElementById("date").innerHTML = date;
                    </script>


                </form>

            </div>
        </div>
    </div>
}