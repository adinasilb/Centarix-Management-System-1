@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@inject UserManager<ApplicationUser> _userManager

@{ string showItem = "";
    string showLocation = "";
    string showPrice = "";
    string showDocuments = "";
    string showComments = "";
    string showHistory = "";
    string showOrder = "";
    switch (Model.Tab)
    {
        case 1:
            showItem = " active show ";
            break;
        case 2:
            showLocation = " active show ";
            break;
        case 3:
            showPrice = " active show ";
            break;
        case 4:
            showDocuments = " active show ";
            break;
        case 5:
            showComments = " active show ";
            break;
        case 6:
            showHistory = " active show ";
            break;
        case 7:
            showOrder = " active show ";
            break;

    }
    var requestCategoryType = Model.Requests[0].Product?.ProductSubcategory.ParentCategory.CategoryTypeID;
}
<input type="hidden" value="@Model.Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum" id="categoryDescription" />
<div class="container-fluid div-tabs no-box-shadow p-0">
    <input type="hidden" value="@Model.ModalType" id="modalType" />

    @if (Model.ModalType == AppUtility.RequestModalType.Edit && Model.Requests[0].IsArchived == false)
    {
        <div class=" row text-right ">
            <div class="switch col-12 switch-margin">
                <label>
                    <label class="edit-mode-switch-description">Edit Mode Off</label>

                    <input type="checkbox" class="turn-edit-on-off  orders has-location-tab" value="@Model.Requests.FirstOrDefault().RequestID" productID="@Model.Requests.FirstOrDefault().ProductID" name="details">
                    <span class="lever"></span>
                </label>
            </div>
        </div>
    }
    <div class="tab-content">
        @if (Model.SectionType == AppUtility.MenuItems.Operations || (Model.SectionType == AppUtility.MenuItems.Accounting && requestCategoryType == 2))
        {
            <div id="item" class="tab-pane fade in @showItem" value="1">
                @{await Html.RenderPartialAsync("~/Views/Requests/_ItemTabOperations.cshtml", Model); }
            </div>
        }
        else
        {
            <div id="item" class="tab-pane fade in @showItem" value="1">
                @{await Html.RenderPartialAsync("~/Views/Requests/_ItemTab.cshtml", Model); }
            </div>
        }
        @if ((Model.Requests[0].RequestStatusID == 3 && Model.SectionType != AppUtility.MenuItems.Protocols && Model.Requests[0].OrderType != AppUtility.OrderTypeEnum.SaveOperations.ToString())
           || Model.IsProprietary)
        {
            <div id="location" class="tab-pane fade @showLocation" value="2">
                @{await Html.RenderPartialAsync("~/Views/Requests/_LocationTab.cshtml", Model); }
            </div>
        }
        @if (!Model.Requests.FirstOrDefault().Product.ProductSubcategory.ParentCategory.IsProprietary && Model.SectionType != AppUtility.MenuItems.Operations && requestCategoryType != 2)
        {
            <div id="price" class="tab-pane fade @showPrice" value="3">
                @{await Html.RenderPartialAsync("~/Views/Requests/_PriceTab.cshtml", Model); }
            </div>
        }
        <div id="documents" class="tab-pane fade @showDocuments" value="4">
            @{await Html.RenderPartialAsync("~/Views/Requests/_DocumentsTab.cshtml", Model); }
        </div>
        <div id="comments" class="tab-pane fade @showComments" value="5">
            @{await Html.RenderPartialAsync("~/Views/Requests/_CommentsTab.cshtml", Model); }
        </div>
        @if (Model.IsHistory == false && ((Model.ModalType.Equals(AppUtility.RequestModalType.Summary) && (Model.RequestStatusID != 7 && !Model.IsProprietary)) || Model.ShowHistory) && Model.SectionType != AppUtility.MenuItems.Protocols)
        {<div id="history" class="tab-pane fade @showHistory" value="6">
                @{await Html.RenderPartialAsync("~/Views/Requests/_HistoryTab.cshtml", Model); }
            </div>
        }
        @if (Model.ModalType.Equals(AppUtility.RequestModalType.Create) && Model.SectionType != AppUtility.MenuItems.Operations)
        {
            <div id="order" class="tab-pane fade order-tab @showOrder" value="7">
                @{await Html.RenderPartialAsync("~/Views/Requests/_OrderTab.cshtml", Model); }
            </div>
        }
    </div>
</div>
<script src="~/js/Validation/OrderInvItemFormValidation.js"></script>
<script src="~/js/validate.js"></script>
<script src="~/js/site.js"></script>
<script src="~/js/SubUnit.js"></script>
<script src="~/js/CreateItem.js"></script>
<script src="~/js/WarantySupplyDateCalc.js"></script>
<script src="~/js/InitializeDatePicker.js"></script>
<script src="~/js/customDropdown.js"></script>
<script src="~/js/IndexTablePartial.js"></script>