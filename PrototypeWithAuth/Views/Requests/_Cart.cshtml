@model PrototypeWithAuth.ViewModels.OrdersByVendorViewModel
@using System.Text;
@using PrototypeWithAuth.AppData

<label class="text-danger-centarix">@ViewBag.ErrorMessage</label>
<form method="post" enctype="multipart/form-data" style="height: 100%;">
    @foreach (var vendor in Model.RequestsByVendor)
    {
        <table class="table table-headerspaced table-borderless table-hover mb-5 item-table">
            <thead>
                <tr class="text-center">
                    <td class="py-0" width="15%"></td>
                    <td class="py-0" style="width:20%;">
                        Item Name
                    </td>
                    <td class="py-0" style="width:10%;">
                        Vendor
                    </td>
                    <td class="py-0" style="width:10%">
                        Type
                    </td>
                    <td class="py-0" style="width:10%">
                        Amount
                    </td>
                    <td class="py-0" style="width:10%">
                        Price
                        <div class="d-inline-block">
                            @{
                                await Html.RenderPartialAsync("_PricePopoverCart", Model);
                            }
                        </div>
                    </td>
                    <td class="py-0" style="width:10%">
                    </td>
                </tr>
            </thead>
            <tr class="text-dark border-0 no-hover h-50" style="line-height:50%;">
                <td width="10%" class="p-0" rowspan="2"><span class="heading-1">@vendor.Key.VendorEnName.ToLower()</span></td>
                <td colspan="7" class="border-bottom"></td>
            </tr>
            <tr class="border-0 no-hover h-50" style="line-height:50%;"><td></td></tr>
            <tbody>
                @{ var requests = vendor.Select(r => r).ToList();}
                @for (int i = 0; i < requests.Count; i++)
                {

                    <tr class="text-center inv-list-item">
                        <td class="text-center" width="15%">
                            <input type="hidden" asp-for="@requests[i].RequestID" />
                            @if (requests[i].Product.ProductSubcategory.ImageURL != null)
                            {
                                var imageurl = requests[i].Product.ProductSubcategory.ImageURL;
                                <img src="@imageurl" alt="Image" width="75" class="category-image" />
                            }
                            else
                            {
                                <img src="~/images/css/accounting/sample_image.png" alt="Image" width="75" class="category-image" />
                            }
                        </td>
                        <td width="20%">
                            @requests[i].Product.ProductName
                        </td>
                        <td width="10%">
                            @requests[i].Product.Vendor.VendorEnName.ToLower()
                        </td>
                        <td>
                            @requests[i].Product.ProductSubcategory.ProductSubcategoryDescription
                        </td>
                        <td>
                            <ul style="list-style: none;">

                                @if (requests[i].Unit != null)
                                {
                                    <li>
                                        @Html.DisplayFor(modelItem => requests[i].Unit)
                                        @Html.DisplayFor(modelItem => requests[i].UnitType.UnitTypeDescription)
                                    </li>
                                    @if (vendor.ElementAt(i).SubUnit != null)
                                    {
                                        <li>
                                            @Html.DisplayFor(modelItem => requests[i].SubUnit)
                                            @Html.DisplayFor(modelItem => requests[i].SubUnitType.UnitTypeDescription)
                                        </li>
                                        @if (vendor.ElementAt(i).SubSubUnit != null)
                                        {
                                            <li>
                                                @Html.DisplayFor(modelItem => requests[i].SubSubUnit)
                                                @Html.DisplayFor(modelItem => requests[i].SubSubUnitType.UnitTypeDescription)
                                            </li>
                                        }
                                    }

                                }


                            </ul>
                        </td>
                        <td width="10%">
                            @{
                                var priceString = "";
                                var requestPriceList = AppUtility.GetPriceColumn(Model.SelectedPriceSort, vendor.ElementAt(i), Model.SelectedCurrency);
                                foreach (var price in requestPriceList)
                                {
                                    if (price == requestPriceList.First())
                                    {
                                        priceString = price;
                                    }
                                    else
                                    {
                                        priceString = priceString + "<br/>" + price;
                                    }
                                }
                            }

                            @Html.Raw(priceString)
                        </td>
                        <td width="10%" class="border-right">
                            <div class="d-inline-flex">
                                <div class="table-icon-div">
                                    <button class="btn no-box-shadow p-0 m-0 load-confirm-delete" data-toggle="tooltip" data-placement="top"
                                            title="Delete" name="@AppUtility.MenuItems.Requests" value="@vendor.ElementAt(i).RequestID">
                                        <i style="font-size:2rem;" class="icon-delete-24px hover-bold"></i>
                                    </button>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
                <tr class="border-0 mb-5 no-hover">
                    <td></td>
                    <td></td>
                    <td></td>

                    <td>
                        <span class="text font-weight-bold">Items: @requests.Count()</span>
                    </td>
                    <td colspan="2">
                        @{
                            var totalCost = requests.Sum(r => r.Cost);
                            var decTotalCost = (decimal)totalCost;
                            var stringTotalCost = decTotalCost.ToString("C02");
                        }
                        <span class="text font-weight-bold">Total: @stringTotalCost</span>
                    </td>
                    <td>
                        <button class="custom-button-font custom-button order-inv-background-color float-right load-terms-modal cart" type="button" value="@vendor.Key.VendorID">Order</button>
                        @*<button class="inv-button float-right load-confirm-email cart" type="button" value="@vendor.Key.VendorID">Order</button>*@
                    </td>
                </tr>

            </tbody>
        </table>
    }
</form>

<script src="~/js/PricePopoverScript.js"></script>
<script src="~/js/ConfirmDeleteScript.js"></script>