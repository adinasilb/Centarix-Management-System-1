@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@inject UserManager<ApplicationUser> _userManager
@{
    var bcColor = "section-bg-color";

    if (Model.SectionType == AppUtility.MenuItems.Operations)
    {

        bcColor = "section-bg-color";
    }
    var productOrderType = Model.OrderType.ToString();
    Model.bcColor = bcColor;
}
<div class="row justify-content-center error-message pt-3">
    @{ await Html.RenderPartialAsync("_ErrorMessage", Model.ErrorMessage); }
</div>

@*THE FOLLOWING HIDDEN VALUES ARE TO REMEMBER THE REQUESTS INDEX PAGE FROM BEFORE*@
@Html.HiddenFor(model => model.RequestStatusID)
@Html.HiddenFor(model => model.PageType)
@Html.HiddenFor(model => model.SectionType)
@Html.HiddenFor(model => model.IsProprietary)
<input type="hidden" asp-for="@Model.Requests[0].RequestID" />
@{
    if (Model.Requests[0].Product.ProductSubcategory.ParentCategory?.ParentCategoryDescriptionEnum != null)
    {
        <input type="hidden" value="@(Model.Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum)" id="categoryDescription" />
    }
}
@*<input type="hidden" value="@Model.ParentCategory.ID" id="categoryId" />*@

<!-- Modal Header -->
<div class="new-modal-header border-bottom container-fluid" style="padding: 0">
    @*class needed here to override bootstraps modal limitations*@

    @{ await Html.RenderPartialAsync("_CreateItemHeader"); }
    <div class="row">
        <div class="col-12 px-0">
            <div class="container-fluid div-tabs text-center modal-sides">
                <ul id="create-modal-tabs" class="nav nav-tabs text-center container-fluid pr-0 border-bottom-0 nav-tabs-icons" style="">
                    <li class="nav-item icon ">
                        <a data-toggle="tab" href="#item" class="next-tab nav-link active request-item">
                            <i class="icon-centarix-icons-05" style="font-size: 2rem;"></i>
                            <br />Item
                        </a>
                    </li>
                    @if (Model.PageType == AppUtility.PageTypeEnum.RequestSummary && Model.SectionType != AppUtility.MenuItems.Operations)
                    {
                        <li class="nav-item icon">
                            <a data-toggle="tab" href="#location" class="nav-link request-location next-tab">
                                <i class="icon-place-24px" style="font-size: 2rem;"></i><br />Location
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item icon" id="price-tab">
                            <a data-toggle="tab" href="#price" class="next-tab nav-link request-price">
                                <i class="icon-monetization_on-24px" style="font-size: 2rem;"></i><br />Price
                            </a>
                        </li>
                    }
                    <li class="nav-item icon">
                        <a data-toggle="tab" href="#documents" class="request-documents-tab nav-link next-tab documents-tab">
                            <i class="icon-attach_file-24px" style="font-size: 2rem;"></i><br />Documents
                        </a>
                    </li>
                    <li class="nav-item icon comments-tab">
                        <a data-toggle="tab" href="#comments" class="next-tab nav-link">
                            <i class="icon-centarix-icons-06" style="font-size: 2rem;"></i><br />Comments
                        </a>
                    </li>
                    @if (Model.PageType != AppUtility.PageTypeEnum.RequestSummary)
                    {
                        <li class="nav-item icon order-tab">
                            <a data-toggle="tab" href="#order" class="next-tab nav-link order-tab-link">
                                <i class="icon-assignment-24px" style="font-size: 2rem;"></i> <br />Order
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="modal-sides modal-body-top-p">
        <div class="new-modal-body" style="background:none;">
            @{await Html.RenderPartialAsync("ItemData", Model); }
        </div>

    </div>
</div>
<script>
   
   

    
    
</script>