@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData



@{
    var Category = Model.Requests[0].Product.ProductSubcategory.ParentCategory.Description;
    var modalType = Model.ModalType;
    var markReadOnlyClass = "";
    var hideNoQuote = "";
    var disabledProperty = "";
    var changed = "false";
    if (modalType == AppUtility.RequestModalType.Edit || modalType == AppUtility.RequestModalType.Summary)
    {
        disabledProperty = "disabled";
        markReadOnlyClass = "mark-readonly";
        changed = "true";
    }
    if (modalType != AppUtility.RequestModalType.Create && (Model.Requests[0].QuoteStatusID == 2 || Model.Requests[0].QuoteStatusID == 1))
    {
        hideNoQuote = "d-none";
    }
    var color = Model.SectionType == AppUtility.MenuItems.Accounting ? "accounting-color" : Model.SectionType == AppUtility.MenuItems.LabManagement ? "lab-man-color" : Model.SectionType == AppUtility.MenuItems.Protocols ? "protocols-color" : "order-inv-color";
}
 <input type="hidden" id="quoteStatus" asp-for="Requests[0].QuoteStatusID" />
 <input type="hidden" asp-for="OrderType" />
<div class="row no-mb">
    <div class="col-md-8">
        <span class="heading-1 modal-tab-name">Price</span><br />
        <span class=" large-text text-danger-centarix font-weight-bold" id="price-warning"></span>
    </div>
 </div>

 <div class="row d-flex align-content-center">
     <button class="col-6 custom-button custom-button-font oper-background-color order-type" id="single" style="border-radius: 1.438rem 0rem 0rem 1.438rem; font-size: 1rem; height: 2.2rem">
            <i class="icon-monetization_on-24px p-1" style="font-size: 1.2rem; vertical-align:middle"></i>
         <span class="">Single Order</span>
      </button>
      <button class="col-6 custom-button custom-oper order-type" id="recurring" style="border-radius: 0rem 1.438rem 1.438rem 0rem; font-size: 1rem; height: 2.2rem">
            <i class="icon-monetization_on-24px" style="font-size: 1.2rem; vertical-align:middle"></i>
          <span class="">Recurring Order</span>
      </button>
 </div>
 <div>
    <div class="col-md-4">
        <div class="row @hideNoQuote">
            <div class="col-6">
                <div class="form-group">
                    <label class="control-label">Currency</label>
                    <select id="currency" asp-for="Requests[0].Currency" class="mdb-select custom select-dropdown form-control-plaintext @markReadOnlyClass" changed="@changed">
                        <option value="@AppUtility.CurrencyEnum.NIS.ToString()">&#8362; NIS</option>
                        <option value="@AppUtility.CurrencyEnum.USD.ToString()">&dollar; USD</option>
                    </select>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="Requests[0].ExchangeRate" class="control-label"></label>
                    <input name="Requests[0].ExchangeRate" value="@Model.Requests[0].ExchangeRate" class="form-control-plaintext border-bottom @markReadOnlyClass " @disabledProperty id="exchangeRate" />
                    <span asp-validation-for="Requests[0].ExchangeRate" class="text-danger-centarix"></span>
                </div>
            </div>
        </div>
    </div>
</div>

@{
    await Html.RenderPartialAsync("_PriceTabPartial", Model);
}

<div class="row requestPriceQuote @hideNoQuote">
    @if (Model.ModalType != AppUtility.RequestModalType.Create)
    {
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label">Discount</label>

                <div class="input-group">
                    <input asp-for="Requests[0].ParentQuote.Discount" value="@(AppUtility.ConvertIntToString(Model.Requests[0]?.ParentQuote?.Discount??0))" class="form-control-plaintext border-bottom requestPriceQuote @markReadOnlyClass" />
                    <div class="input-group-text">%</div>
                </div>
                <span asp-validation-for="Requests[0].ParentQuote.Discount" />
            </div>
        </div>
    }

    @{
        var includeVatChecked = "checked";
        var noVatChecked = "";
        if (Model.Requests[0].IncludeVAT != true)
        {
            includeVatChecked = "";
            noVatChecked = "checked";
        }
    }
    <div class="custom-control custom-radio mr-4 ml-4 ">
        <input class="custom-control-input include-vat-radio @markReadOnlyClass" id="IncludeVAT" name="_IncludeVAT" @includeVatChecked type="radio" value="@Model.Requests[0].IncludeVAT" />
        <label class="radio-button custom-control-label pt-1 pl-2 include-vat-radio @markReadOnlyClass" for="IncludeVAT">Include VAT</label>
    </div>
    <div class="custom-control custom-radio mr-4 ml-4">
        <input class="custom-control-input include-vat-radio @markReadOnlyClass" id="NoVAT" name="_IncludeVAT" @noVatChecked type="radio" value="@(!Model.Requests[0].IncludeVAT)" />
        <label class="radio-button custom-control-label pt-1 pl-2 include-vat-radio @markReadOnlyClass" for="NoVAT">No VAT</label>
    </div>

    <input type="hidden" asp-for="Requests[0].IncludeVAT" />

    @if (Model.Requests[0].RequestStatusID != 6 && Model.ModalType != AppUtility.RequestModalType.Create)
    {
        <div class="col-3">
            <label class="control-label" asp-for="Requests[0].PaymentStatus.PaymentStatusDescription">Terms</label>
            <input asp-for="Requests[0].PaymentStatus.PaymentStatusDescription" class="form-control-plaintext border-bottom" disabled />
            <input type="hidden" asp-for="Requests[0].PaymentStatusID" />
        </div>

    }
    
</div>
<div class="row recurring-info d-none">
        <input value="date"/>
</div>
@if (modalType == AppUtility.RequestModalType.Create)
{
    
    <div class="row">
        <div class="col-2 recurring-info d-none">
            <input type="checkbox" id="standingOrder" class="form-check-input filled-in " />
            <label class="form-check-label" id="standingOrder">Standing Order</label>
        </div>
        <div class="col-2">
            <input type="checkbox" asp-for="Paid" id="alreadyPaid" class="form-check-input filled-in " />
            <label class="form-check-label" asp-for="Paid" id="alreadyPaid">Paid</label>
            <input type="hidden" asp-for="Paid" />
        </div>

    </div>
    <div class="row paid-info d-none ">
       
    </div>

}

@if (Model.Requests[0].RequestStatusID != 1 && Model.Requests[0].RequestStatusID != 6)
{
    <div class="row">

        <div class="col-2">
            <input type="checkbox" asp-for="Requests[0].Payments.LastOrDefault().IsPaid" class="form-check-input filled-in " disabled />
            <label class="form-check-label" asp-for="Requests[0].Payments.LastOrDefault().IsPaid"></label>
            <input type="hidden" asp-for="Requests[0].Payments.LastOrDefault().IsPaid" />
        </div>
        <div class="col-2">
            <input type="checkbox" asp-for="Requests[0].IsPartial" class="form-check-input filled-in " disabled />
            <label class="form-check-label" asp-for="Requests[0].IsPartial">Partial</label>
            <input type="hidden" asp-for="Requests[0].IsPartial" />
        </div>
        <div class="col-2">
            <input type="checkbox" asp-for="Requests[0].IsClarify" class="form-check-input filled-in " disabled />
            <label class="form-check-label" asp-for="Requests[0].IsClarify">Clarify</label>
            <input type="hidden" asp-for="Requests[0].IsClarify" />
        </div>

    </div>
    <div class="row">
        <div class="col-2">
            <label class="control-label" asp-for="Requests[0].Installments">Payments</label>
            <input asp-for="Requests[0].Installments" class="form-control-plaintext border-bottom " readonly />
        </div>
        @{
            var payments = Model.Requests[0].Payments.Where(p => p.IsPaid).OrderBy(p => p.PaymentDate).ToList();
        }
        @if (payments.Count() > 0)
        {
            <div class="container col-10">
                @for (int i = 0; i < payments.Count(); i++)
                {
                    <input type="hidden" asp-for="Requests[0].Payments[i].PaymentReferenceDate" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].PaymentTypeID" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].CreditCardID" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].Reference" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].CheckNumber" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].PaymentDate" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].PaymentID" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].IsPaid" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].HasInvoice" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].Invoice.InvoiceID" />
                    <input type="hidden" asp-for="Requests[0].Payments[i].CompanyAccount.CompanyBankName" />
                    <div class="row">
                        <div class="col-3 pl-0">
                            <div class="form-group">
                                <label class="control-label">Bank Name</label>
                                <input class="form-control-plaintext border-bottom" type="text" asp-for="@payments[i].CompanyAccount.CompanyBankName" disabled />
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="payment-type form-group">
                                <label class="control-label">Payment Type</label>
                                <input class="form-control-plaintext border-bottom" value="@payments[i].PaymentType.PaymentTypeDescription" disabled />
                            </div>
                        </div>
                        @if (payments[i].PaymentTypeID == 1)
                        {
                            <div class="col-3">
                                <div class="form-group payment-account">
                                    <label class="control-label">Credit Card Number</label>
                                    <input class="form-control-plaintext border-bottom reference-1" disabled value="@payments[i].CreditCard.CardNumber" />
                                </div>
                            </div>
                        }
                        @if (payments[i].PaymentTypeID == 3)
                        {
                            <div class="col-3">
                                <div class="form-group payment-reference">
                                    <label class="control-label">Payment Reference</label>
                                    <input class="form-control-plaintext border-bottom reference-1" disabled value="@payments[i].Reference" />
                                </div>
                            </div>
                        }
                        @if (payments[i].PaymentTypeID == 2)
                        {
                            <div class="col-3">
                                <div class="form-group payment-reference">
                                    <label class="control-label">Check Number</label>
                                    <input class="form-control-plaintext border-bottom reference-1" disabled value="@payments[i].CheckNumber" />
                                </div>
                            </div>
                        }
                        <div class="col-3 pl-0">
                            <div class="form-group">
                                <label class="control-label">Date</label>
                                <input class="form-control-plaintext border-bottom  datepicker" type="text" asp-format="@AppUtility.AspDateFormatString" asp-for="@payments[i].PaymentReferenceDate" disabled />
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}

<script>
    $(function(){
    $(".order-type").off("click").on("click", function(e){
            e.preventDefault()
            var selectedStyles = "custom-button-font oper-background-color"
            var unselectedStyles = "custom-oper"
        if($(this).attr("id")=="single"){
            $(".recurring-info").addClass("d-none")
            $("#single").addClass(selectedStyles).removeClass(unselectedStyles)
            $("#recurring").addClass(unselectedStyles).removeClass(selectedStyles)
            $("#OrderType").val("SingleOrder")
        }
        else{
             $(".recurring-info").removeClass("d-none")
             //if standing order is checked - ordertype = 3
             $("#OrderType").val("RecurringOrder")
             $("#single").addClass(unselectedStyles).removeClass(selectedStyles)
            $("#recurring").addClass(selectedStyles).removeClass(unselectedStyles)
        }
    })
    $("#alreadyPaid").off("click").on("click", function (e) {
        console.log("pay")
        if ($("#alreadyPaid:checkbox").is(":checked")) {
            $(".paid-info").addClass("d-none")
            $("#alreadyPaid:checkbox").prop("checked", false)
            $("#Paid").val(false)
        }
        else {
            $(".paid-info").removeClass("d-none")
            $("#alreadyPaid:checkbox").prop("checked", true)
            $("#Paid").val(true)
        }

    });
    $("#standingOrder").off("click").on("click", function (e) {
        console.log("pay")
        if ($("#standingOrder:checkbox").is(":checked")) {
            $("#standingOrder:checkbox").prop("checked", false)
            $("#OrderType").val("StandingOrder")
        }
        else {
            $("#standingOrder:checkbox").prop("checked", true)
            $("#OrderType").val("StandingOrder")
        }

    });
    })
    </script>

<script src="~/js/Validation/OrderInvItemFormValidation.js"></script>
<script src="~/js/validate.js"></script>
<script src="~/js/TermsModal.js"></script>






