@model _IndexTableViewModel

@using PrototypeWithAuth.AppData;
@using PrototypeWithAuth.ViewModels;

@using PrototypeWithAuth.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager

@using X.PagedList.Mvc.Core; @* import this so we get our HTML Helper *@
@using X.PagedList; @* import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

    <div class="">
        <table class="table table-headerspaced table-noheaderlines table-hover ">
            <thead>
                <tr class="text-center">
                    @*<th>@Html.DisplayNameFor(model => model[0].Product.ProductMedia)</th>*@
                    <th></th>
                    <th></th>
                    @*<th>@Html.DisplayNameFor(model => model[0].Product.ProductName)</th>*@
                    <th>Item Name</th>
                    @*<th>@Html.DisplayNameFor(m => m[0].Product.Vendor.VendorEnName)</th>*@
                    <th>Vendor</th>
                    @if (!Model.Summary)
                    {
                        <th>
                            Amount
                            <span class="float-right">
                                <ul class="list-unstyled p-0 m-0">
                                    <li>
                                        <button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="btn p-0 m-0 no-box-shadow more" value="amount">
                                            <i class="icon-centarix-icons-17" style="font-size:1.6rem;">
                                            </i>
                                        </button>
                                    </li>
                                    <span style="display:none;" id="amount">
                                        @*@{ var links = AppUtility.GetPaymentsPopoverLinks(Model.AccountingPaymentsEnum.ToString());}*@
                                        @*@foreach (var link in links)
                                        {*@
                                        <span class="row px-3">
                                            <a asp-action="" asp-controller="" asp-route-currentStatus="" asp-route-requestID="" asp-route-newStatus="" class="btn-link text no-hover">
                                            </a>
                                            <i class=" " style=""></i>
                                            <label class="m-2">Biggest Unit</label>
                                        </span>
                                        <hr class="m-0" />
                                        <span class="row px-3">
                                            <a asp-action="" asp-controller="" asp-route-currentStatus="" asp-route-requestID="" asp-route-newStatus="" class="btn-link text no-hover">
                                            </a>
                                            <i class=" " style=""></i>
                                            <label class="m-2">Medium Unit</label>
                                        </span>
                                        <hr class="m-0" />
                                        <span class="row px-3">
                                            <a asp-action="" asp-controller="" asp-route-currentStatus="" asp-route-requestID="" asp-route-newStatus="" class="btn-link text no-hover">
                                            </a>
                                            <i class=" " style=""></i>
                                            <label class="m-2">Smallest Unit</label>
                                        </span>
                                        @*  }*@

                                    </span>

                                </ul>
                            </span>
                        </th>
                    }

                    @*Placeholder until we insert total*@
                    <th>@Html.DisplayNameFor(m => m.PagedList[0].Cost)</th>
                    @*Later on should have a better location...*@
                    @if (Model.Inventory)
                    {
                        <th> Location </th>
                    }
                    <th>@Html.DisplayNameFor(m => m.PagedList[0].Product.ProductSubcategory.ProductSubcategoryDescription)</th>
                    @*<th>@Html.DisplayNameFor(m => m[0].ParentRequest.ApplicationUser.FirstName) @Html.DisplayNameFor(m => m[0].ParentRequest.ApplicationUser.LastName)</th>*@

                    @if (!Model.Summary)
                    {
                        <th>Owner</th>
                        if (Model.RequestStatusID == 2)
                        {
                            <th>
                                @Html.DisplayNameFor(m => m.PagedList[0].ParentRequest.OrderDate)
                            </th>
                        }
                        else if (Model.RequestStatusID == 3)
                        {
                            <th>@Html.DisplayNameFor(m => m.PagedList[0].ArrivalDate)</th>
                        }
                        else
                        {
                            <th>Request Date</th>
                        }
                    }
                    else
                    {
                        <th>Last Ordered</th>
                    }
                    <th></th>

                </tr>
            </thead>
        </table>

        <table class="table table-headerspaced table-noheaderlines table-hover ">
            <tbody>
                @*@foreach (var item in Model)*@
                @for (int itemNum = 0; itemNum < Model.PagedList.Count; itemNum++)
                {
                    <tr class="text-center ">
                        <td>
                            <div class="form-check orders-and-inv">
                                <input type="checkbox" class="form-check-input filled-in" id="@Model.PagedList[itemNum].RequestID">
                                <label class="form-check-label" for="@Model.PagedList[itemNum].RequestID">@Model.PagedList[itemNum].RequestID</label>
                            </div>
                        </td>
                        <td>
                            @if (Model.PagedList[itemNum].Product.ProductSubcategory.ImageURL != null)
                            {
                                var imageurl = Model.PagedList[itemNum].Product.ProductSubcategory.ImageURL;
                                <img src="@imageurl" alt="Image" width="75" class="category-image" />
                            }
                            else
                            {
                                <img src="~/images/css/accounting/sample_image.png" alt="Image" width="75" class="category-image" />
                            }
                        </td>
                        @if (Model.Summary)
                        {
                            <td width="15%">
                                <button class="btn p-0 m-0 inv-link-clr load-product-details-summary no-box-shadow" title="Details" value="@Model.PagedList[itemNum].RequestID" data-target="item" href="item">
                                    <p class="m-0">@Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductName)</p>
                                </button>
                            </td>
                        }
                        else
                        {
                            <td width="15%">
                                <button class="btn p-0 m-0 inv-link-clr load-product-details no-box-shadow" title="Details" value="@Model.PagedList[itemNum].RequestID" data-target="item" href="item">
                                    <p class="m-0">@Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductName)</p>
                                </button>
                            </td>
                        }


                        <td> @Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.Vendor.VendorEnName) </td>
                        @if (!Model.Summary)
                        {
                            <td>
                                <ul style="list-style: none; padding-left:0px;" class="mb-0">

                                    @if (Model.PagedList[itemNum].Unit != null)
                                    {
                                        <li>
                                            @Html.DisplayFor(modelItem => Model.PagedList[itemNum].Unit)
                                            @Html.DisplayFor(modelItem => Model.PagedList[itemNum].UnitType.UnitTypeDescription)
                                        </li>
                                        @if (Model.PagedList[itemNum].SubUnit != null)
                                        {
                                            <li>
                                                @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubUnit)
                                                @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubUnitType.UnitTypeDescription)
                                            </li>
                                            @if (Model.PagedList[itemNum].SubSubUnit != null)
                                            {
                                                <li>
                                                    @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubSubUnit)
                                                    @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubSubUnitType.UnitTypeDescription)
                                                </li>
                                            }
                                        }

                                    }


                                </ul>
                            </td>
                            @*Computed column?*@
                        }

                        <td>
                            @*@Html.DisplayFor(modelItem => item.Cost)*@
                            @{
                                decimal cost = (decimal)Model.PagedList[itemNum].Cost;
                                string formattedCost = cost.ToString("C02");
                            }
                            @formattedCost
                        </td>
                        @*Later on should have a better location...*@
                        @if (Model.Inventory)
                        {

                            <td>
                                @if (Model.PagedList[itemNum].RequestLocationInstances != null)
                                {
                                    @Html.DisplayFor(modelItem => Model.PagedList[itemNum].RequestLocationInstances.FirstOrDefault().LocationInstance.LocationInstanceName)
                                }
                            </td>
                        }
                        <td> @Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductSubcategory.ProductSubcategoryDescription) </td>
                        @if (!Model.Summary)
                        {
                            <td>
                                @Html.DisplayFor(modelItem => Model.PagedList[itemNum].ApplicationUserCreator.FirstName)
                                @Html.DisplayFor(modelItem => Model.PagedList[itemNum].ApplicationUserCreator.LastName)
                            </td>
                        }
                        @{
                            if (Model.RequestStatusID == 2 || Model.Summary)
                            {
                                <td>@Model.PagedList[itemNum].ParentRequest?.OrderDate.ToString("yyyy-MM-dd")</td>
                            }
                            else if (Model.RequestStatusID == 3)
                            {
                                <td>@Model.PagedList[itemNum].ArrivalDate.ToString("yyyy-MM-dd")</td>
                            }
                            else
                            {
                                <td>@Model.PagedList[itemNum].CreationDate.ToString("yyyy-MM-dd")</td>
                            }
                        }
                        <td width="9%">
                            <div class="d-inline-flex">
                                <div class="table-icon-div">


                                    @if (Model.PagedList[itemNum].RequestStatusID == 1)
                                    {
                                        //this is a nested if b/c if user can't approve then i still don't want it to go the the else
                                        if (SignInManager.IsSignedIn(User) & (User.IsInRole("Admin")))
                                        {
                                            if (Model.PagedList[itemNum] is Reorder)
                                            {
                                                <a class="btn p-0 m-0 no-box-shadow" data-title="Approve" href="@Url.Action("ApproveReorder", new { id = Model.PagedList[itemNum].RequestID })">
                                                    <i style="font-size:2rem; color:#00CA72;" class="icon-centarix-icons-03 hover-bold"></i>
                                                </a>
                                            }
                                            else
                                            {
                                                @*@Html.ActionLink("Approve", "ConfirmEmailModal", new { id = item.RequestID, IsBeingApproved = true }, new { @class = "btn btn-link" });*@

                                                <a class="btn p-0 m-0 no-box-shadow" data-title="Approve" href="@Url.Action("Approve", new { id = Model.PagedList[itemNum].RequestID })">
                                                    <i style="font-size:2rem; color:#00CA72;" class="icon-centarix-icons-03 hover-bold"></i>
                                                </a>
                                            }


                                        }
                                    }

                                    else if (Model.PagedList[itemNum].RequestStatusID == 2)
                                    {
                                        <button class="btn p-0 m-0 load-receive-and-location no-box-shadow" data-title="receive" value="@Model.PagedList[itemNum].RequestID"><i style="font-size:2rem; color:#00CA72;" class="icon-done-24px hover-bold"></i></button> // receive
                                    }
                                    else
                                    {
                                        @*work on getting the correct syntax to create a new product with*@
                                        <button class="btn p-0 m-0 load-order-details no-box-shadow" data-title="order" value="@Model.PagedList[itemNum].RequestID"><i style="font-size:2rem; color:#00CA72;" class="icon-add_circle_outline-24px1 hover-bold"></i></button>// order
                                    }

                                </div>
                                @if (Model.IsEquipment)
                                {
                                    <div class="table-icon-div">
                                        <a class="btn p-0 m-0 no-box-shadow" data-title="Create" href="@Url.Action("CreateCalibration","Calibrations", new { requestid = Model.PagedList[itemNum].RequestID })">
                                            <i style="        font-size: 2rem;
        color: var(--lab-man-color);" class="icon-settings-24px-1"></i>
                                        </a>
                                    </div>
                                }
                                <div class="table-icon-div">
                                    <button class="btn p-0 m-0 load-confirm-delete no-box-shadow" data-title="delete" value="@Model.PagedList[itemNum].RequestID" name="@AppUtility.MenuItems.OrdersAndInventory"><i style="font-size:2rem;" class="icon-delete-24px hover-bold"></i></button>
                                </div>
                            </div>


                            @*@Html.ActionLink("Delete", "DeleteModal", new { id = item.RequestID}, new { @class = "btn btn-link" })*@
                            @*<button class="btn btn-link" asp-action="Delete" value="@item.RequestID" data-target="item" href="item"> Delete </button>*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

<div class="row">
    <div class="col-6 offset-6 text-center">
        @Html.PagedListPager(Model.PagedList, page => Url.Action("Index", new { page = page, RequestStatusID = Model.RequestStatusID, }))
    </div>
</div>