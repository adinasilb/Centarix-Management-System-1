@model PrototypeWithAuth.ViewModels.RequestIndexPartialViewModel
@using PrototypeWithAuth.AppData
<input type="hidden" value="@Model.RequestStatusID" class="request-status-id" />
<input type="hidden" value="@Model.SidebarFilterID" class="sideBarFilterID" />
@if (Model.PagedList.Count() > 0)
{

    <table class="table table-headerspaced table-noheaderlines table-hover ">
        <thead>
            <tr class="text-center">
                @foreach (var col in Model.PagedList[0].Columns)
                {

                    <th width="@col.Width%">
                        @switch (col.FilterEnum)
                        {
                            case AppUtility.FilterEnum.Price:
                                <label>@col.Title</label>
                                <span class="d-inline-block">
                                    <ul class="list-unstyled p-0 m-0">
                                        <li>
                                            <button id="pricePopover" type="button" data-toggle="popover" data-placement="bottom" data-trigger="focus" data-container="body" class="btn p-0 m-0 no-box-shadow text">
                                                <i class="icon-centarix-icons-17" style="font-size:1.6rem;">
                                                </i>
                                            </button>
                                        </li>
                                        <div style="display:none;" id="priceSortContent" class="">
                                            @for (int i = 0; i < Model.PriceSortEnums.Count; i++)
                                            {
                                                var val = (int)(Model.PriceSortEnums[i].PriceSortEnum);
                                                var id = "PriceSortEnums_" + i + "__Selected";
                                                <div class="custom-control custom-checkbox plain-form priceFilterDiv" onclick="callIndexWithNewFilter(@val, @id)">
                                                    <input type="checkbox" class="custom-control-input priceSort" enum="@Model.PriceSortEnums[i].PriceSortEnum" asp-for="PriceSortEnums[i].Selected" />
                                                    <label class="custom-control-label text" asp-for="PriceSortEnums[i].Selected">@Html.DisplayFor(e => Model.PriceSortEnums[i].PriceSortEnum)</label>
                                                </div>
                                                <hr class="mx-0  my-1" />
                                            }

                                            <div class="row mt-2">
                                                <input type="hidden" id="tempCurrency" value="NIS" />
                                                <div class="col-5">

                                                    <div class="custom-control custom-radio">

                                                        @Html.RadioButtonFor(model => model.SelectedCurrency, AppUtility.CurrencyEnum.NIS, htmlAttributes: new { @class = "custom-control-input nis", @id = "nis", })
                                                        @*<input checked="checked"
                                                            id="nis"
                                                            name="currency"
                                                            type="radio"
                                                            value="@AppUtility.CurrencyEnum.NIS" class="custom-control-input currency nis">*@
                                                        <label class="custom-control-label currency radio-button text" for="nis">@AppUtility.CurrencyEnum.NIS.ToString()</label>
                                                    </div>

                                                </div>
                                                <div class="col-4">
                                                    <div class="custom-control custom-radio">

                                                        @Html.RadioButtonFor(model => model.SelectedCurrency, AppUtility.CurrencyEnum.USD, htmlAttributes: new { @class = "custom-control-input usd", @id = "usd", })
                                                        @*<input id="usd"
                                                            name="currency"
                                                            type="radio"
                                                            value="@AppUtility.CurrencyEnum.USD"
                                                            class="custom-control-input currency usd">*@
                                                        <label class="custom-control-label currency radio-button text" for="usd">@AppUtility.CurrencyEnum.USD.ToString()</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </ul>
                                </span>
                                break;
                            default:
                                <label>@col.Title</label>
                                break;
                        }

                    </th>

                }
            </tr>
        </thead>
    </table>

}
<div class="_IndexTableData">
    @{
        await Html.RenderPartialAsync("_IndexTableData", Model);
    }
</div>
<script src="~/js/IndexPartialScript.js"></script>
