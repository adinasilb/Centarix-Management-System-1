@model PrototypeWithAuth.ViewModels.RequestIndexPartialViewModel

@using PrototypeWithAuth.AppData;
@using PrototypeWithAuth.ViewModels

@using PrototypeWithAuth.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@using System.Globalization
@using X.PagedList.Mvc.Core @* import this so we get our HTML Helper *@

<div class="">

    <table class="table table-headerspaced table-noheaderlines table-hover ">
        <tbody>
            @for (int i = 1; i < Model.PagedList.Count; i++)
            {
                <tr class="text-center ">
                    @*<td width="7%">
                        <div class="form-check order-inv-form">
                            <input type="checkbox" class="form-check-input filled-in" id="@Model.PagedList[itemNum].RequestID">
                            <label class="form-check-label" for="@Model.PagedList[itemNum].RequestID">@Model.PagedList[itemNum].RequestID</label>
                        </div>
                    *@
                    @foreach (var col in Model.PagedList[i].Columns)
                    {
                    <td width="@col.Width%">
                        @if (col.Image != null)
                        {
                            <img src="@col.Image" alt="Image" width="75" class="category-image" />
                        }
                        else if (col.Icons != null)
                        {
                            <div class="d-inline-flex">

                                @foreach (var icon in col.Icons)
                                {
                                    <div class="table-icon-div">

                                        <a class="btn p-0 m-0 no-box-shadow @icon.IconAjaxLink" data-toggle="tooltip" data-placement="top"
                                           title="@icon.TooltipTitle" href="@icon.IconUrlAction" value="@col.AjaxID">
                                            <i style="font-size:2rem; color:@icon.Color" class="@icon.IconClass hover-bold"></i>
                                        </a>

                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            for (int val = 0; val < col.Value.Count; val++)
                            {
                                if (val != 0)
                                {
                                    <br />
                                }
                                if (col.AjaxLink != null)
                                {
                                    <button class="btn p-0 m-0 inv-link-clr @col.AjaxLink no-box-shadow" title="Details" value="@col.AjaxID" data-target="item" href="item">
                                        <p class="m-0">@col.Value[val]</p>
                                    </button>
                                }
                                else
                                {
                                    <label>@col.Value[val]</label>
                                }
                            }

                        }
                    </td>
                    }

                    @*
                             @if (Model.PagedList[itemNum].Product.ProductSubcategory.ImageURL != null)
                                {
                                    var imageurl = Model.PagedList[itemNum].Product.ProductSubcategory.ImageURL;
                                    <img src="@imageurl" alt="Image" width="75" class="category-image" />
                                }
                                else
                                {

                                }
                        @if (Summary)
                        {
                            <td width="20%">
                                <button class="btn p-0 m-0 inv-link-clr load-product-details-summary no-box-shadow" title="Details" value="@Model.PagedList[itemNum].RequestID" data-target="item" href="item">
                                    <p class="m-0">@Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductName)</p>
                                </button>
                            </td>
                        }
                        else if (Reports)
                        {
                            <td width="17%">
                                <button class="btn p-0 m-0 inv-link-clr no-box-shadow" title="Details" value="@Model.PagedList[itemNum].RequestID" data-target="item" href="item">
                                    <p class="m-0">@Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductName)</p>
                                </button>
                            </td>
                        }
                        else
                        {
                            <td width="20%">
                                <button class="btn p-0 m-0 inv-link-clr load-product-details no-box-shadow" title="Details" value="@Model.PagedList[itemNum].RequestID" data-target="item" href="item">
                                    <p class="m-0">@Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductName)</p>
                                </button>
                            </td>
                        }

                        @{
                            var vendorPercentage = "7%";
                            if (Reports)
                            {
                                vendorPercentage = "10%";
                            }
                        }
                        <td width="@vendorPercentage"> @Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.Vendor.VendorEnName) </td>
                        <td width="12%"> @Html.DisplayFor(modelItem => Model.PagedList[itemNum].Product.ProductSubcategory.ProductSubcategoryDescription) </td>
                        @if (!Summary)
                        {
                            var priceWidth = "12%";
                            if (Reports)
                            {
                                priceWidth = "10%";
                            }
                            <td width="@priceWidth">
                                <ul style="list-style: none; padding-left:0px;" class="mb-0">

                                    @if (Model.PagedList[itemNum].Unit != null)
                                    {
                                        <li>
                                            @Html.DisplayFor(modelItem => Model.PagedList[itemNum].Unit)
                                            @Html.DisplayFor(modelItem => Model.PagedList[itemNum].UnitType.UnitTypeDescription)
                                        </li>
                                        @if (Model.PagedList[itemNum].SubUnit != null)
                                        {
                                            <li>
                                                @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubUnit)
                                                @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubUnitType.UnitTypeDescription)
                                            </li>
                                            @if (Model.PagedList[itemNum].SubSubUnit != null)
                                            {
                                                <li>
                                                    @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubSubUnit)
                                                    @Html.DisplayFor(modelItem => Model.PagedList[itemNum].SubSubUnitType.UnitTypeDescription)
                                                </li>
                                            }
                                        }

                                    }


                                </ul>
                            </td>*@
                    @*Computed column?*@
                    @*  }*@


                    @*@Html.DisplayFor(modelItem => item.Cost)*@
                    @{

                    }

                    @*@if (!Reports)
                        {*@
                    @*//price enums column*@

                    @*}


                        @if (Reports)
                        {*@
                    @*<td width="9%" class="p-0">
                            <label class="m-0">U: @string.Format(new CultureInfo(currency), "{0:c}", pricePerUnit)</label><br />
                            <label class="m-0">T:  @string.Format(new CultureInfo(currency), "{0:c}", cost)</label><br />
                            <label class="m-0">V:  @string.Format(new CultureInfo(currency), "{0:c}", vat)</label><br />
                            <label class="m-0"> P:   @string.Format(new CultureInfo(currency), "{0:c}", total)</label>

                        </td>*@
                    @*}

                        @if (!Reports)
                        {*@
                    @*<td width="9%">
                        <div class="d-inline-flex">
                            <div class="table-icon-div">


                                @if (Model.PagedList[itemNum].RequestStatusID == 1)
                                {
                                    ////this is a nested if b/c if user can't approve then i still don't want it to go the the else
                                    //if (SignInManager.IsSignedIn(User) & (User.IsInRole("Admin")))
                                    //{
                                    if (Model.PagedList[itemNum] is Reorder)
                                    {
                                        <a class="btn p-0 m-0 no-box-shadow" data-toggle="tooltip" data-placement="top"
                                           title="Approve" href="@Url.Action("ApproveReorder", new { id = Model.PagedList[itemNum].RequestID })">
                                            <i style="font-size:2rem; color:#00CA72;" class="icon-centarix-icons-03 hover-bold"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Approve", "ConfirmEmailModal", new { id = item.RequestID, IsBeingApproved = true }, new { @class = "btn btn-link" });

                                        <a class="btn p-0 m-0 no-box-shadow" data-toggle="tooltip" data-placement="top"
                                           title="Approve" href="@Url.Action("Approve", new { id = Model.PagedList[itemNum].RequestID })">
                                            <i style="font-size:2rem; color:#00CA72;" class="icon-centarix-icons-03 hover-bold"></i>
                                        </a>
                                    }


                                    // }
                                }

                                else if (Model.PagedList[itemNum].RequestStatusID == 2)
                                {
                                    <button class="btn p-0 m-0 load-receive-and-location no-box-shadow" data-toggle="tooltip" data-placement="top"
                                            title="Recieve" value="@Model.PagedList[itemNum].RequestID">
                                        <i style="font-size:2rem; color:#00CA72;" class="icon-done-24px hover-bold"></i>
                                    </button> // receive
                                }
                                else
                                {
                                    work on getting the correct syntax to create a new product with
                                    <button class="btn p-0 m-0 load-order-details no-box-shadow" data-toggle="tooltip" data-placement="top"
                                            title="Reorder" section="@Model.SectionType" value="@Model.PagedList[itemNum].RequestID">
                                        <i style="font-size:2rem; color:#00CA72;" class="icon-add_circle_outline-24px1 hover-bold"></i>
                                    </button>// order
                                }

                            </div>
                            @if (IsEquipment)
                            {
                                <div class="table-icon-div">
                                    <a class="btn p-0 m-0 no-box-shadow" data-toggle="tooltip" data-placement="top"
                                       title="Add" href="@Url.Action("CreateCalibration","Calibrations", new { requestid = Model.PagedList[itemNum].RequestID })">
                                        <i style="        font-size: 2rem;
                                color: var(--lab-man-color);" class="icon-settings-24px-1"></i>
                                    </a>
                                </div>
                            }
                            <div class="table-icon-div">
                                <button class="btn p-0 m-0 load-confirm-delete no-box-shadow" data-toggle="tooltip" data-placement="top"
                                        title="Delete" value="@Model.PagedList[itemNum].RequestID" name="@AppUtility.MenuItems.Requests">
                                    <i style="font-size:2rem;" class="icon-delete-24px hover-bold"></i>
                                </button>
                            </div>
                        </div>


                        @Html.ActionLink("Delete", "DeleteModal", new { id = item.RequestID}, new { @class = "btn btn-link" })
                        <button class="btn btn-link" asp-action="Delete" value="@item.RequestID" data-target="item" href="item"> Delete </button>*@
                    @*</td>*@

                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-6 offset-6 text-center">
        @Html.PagedListPager(Model.PagedList, page => Url.Action("Index", new { page = page, RequestStatusID = Model.RequestStatusID, }))
    </div>
</div>
<script src="~/js/IndexTablePartial.js"></script>
<script src="~/js/ConfirmDeleteScript.js"></script>
<script>$('[data-toggle="tooltip"]').tooltip()</script>