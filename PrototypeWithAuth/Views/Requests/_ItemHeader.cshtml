@model PrototypeWithAuth.ViewModels.RequestItemViewModel
@using PrototypeWithAuth.AppData
@{ 
    var markReadOnlyClass = "";
    if (Model.ModalType == AppUtility.RequestModalType.Edit || Model.ModalType == AppUtility.RequestModalType.Summary)
    {
        markReadOnlyClass = "mark-readonly";
    }
}

    @if (Model.SectionType != AppUtility.MenuItems.Operations)
    {
        var productNameRows = Model.Requests[0].Product.ProductName != null ? Math.Ceiling((float)(Model.Requests[0].Product.ProductName.Length) / 30) : 1;
        <div class="modal-product-title" style=" margin-left: 2rem !important">
            <textarea asp-for="Requests[0].Product.ProductName" class="form-control-plaintext border-bottom heading-1 item-name name mark-readonly" disabled
                       placeholder="(item name)" rows="@productNameRows" cols="50" maxlength="150" style="resize: none;"></textarea>
            <span asp-validation-for="Requests[0].Product.ProductName" class="text-danger-centarix"></span>

        </div>
    }
    else
    {
        <div class=" row">
        <div class="col pl-5">
            <div class="form-group">
                @Html.DropDownListFor(
                        vm => vm.Requests[0].Product.VendorID,
                        new SelectList(
                        Model.Vendors,
                        dataValueField: "VendorID",
                        dataTextField: "VendorEnName"),
                        //FUTURE: Ask If we should put in the functionality to create a new vendor here rather than just choosing, "Select a Project",
                        "Select a Vendor",
                        htmlAttributes: new { @class = " vendorList mdb-select custom select-dropdown form-control-plaintext vendor " + 
                        markReadOnlyClass, @id = "vendorList", @size = 1, @searchable = "Select A Vendor" }
                        )
                <span asp-validation-for="Requests[0].Product.VendorID" class="text-danger-centarix"></span>
            </div>
        </div>
        <input class="" type="hidden" value="" id="vendor-primary-email" />
        <div class="col px-5">
            <div class="form-group">
                <input asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="vendorBusinessId form-control-plaintext border-bottom " readonly />
            </div>
        </div>
        </div>
    }
    