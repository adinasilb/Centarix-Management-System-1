@using PrototypeWithAuth.AppData;
@model PrototypeWithAuth.ViewModels.AccountingPaymentsViewModel

@{ 
    var isNoInvoice = false;
    if (Model.AccountingEnum == AppUtility.SidebarEnum.NoInvoice)
    {
        isNoInvoice = true;
    }
}
<table class="table table-headerspaced table-borderless table-hover">
    <thead>
        <tr class="border-0">

            <th colspan="8" class=" p-0 ">
                <div class="d-inline-flex">
                    <div class="heading-1">
                        @{
                            var count = 0;
                            if (Model.Requests != null)
                            {
                                var vendorsCount = Model.Requests.Count();
                                for (int x = 0; x < vendorsCount; x++)
                                {
                                    count += Model.Requests.ElementAt(x).Count();
                                }
                            }
                        }
                        @Html.DisplayFor(m => m.AccountingEnum)
                        &nbsp;&nbsp;
                    </div>
                    <div class="text pt-2">
                        [@count]
                        @{
                            double totalCost = 0;
                            if (Model.Requests != null)
                            {
                                var vendorsCount = Model.Requests.Count();
                                for (int x = 0; x < vendorsCount; x++)
                                {
                                    totalCost += Model.Requests.ElementAt(x).Select(r => r.Cost).Sum(c => c ?? 0);
                                }
                            }

                            var decCost = (decimal)totalCost;
                            var formattedTotalCost = decCost.ToString("C02");
                        }
                        <span>&emsp; Total: </span><span>@formattedTotalCost</span>
                    </div>
                </div>
            </th>

        </tr>
        <tr class="text-center">
            <td style="width:5%;">
                No
            </td>
            <td style="width:8.1%;"></td>
            <td style="width:11.1%;">
                Name
            </td>
            <td style="width:11.1%">
                Units
            </td>
            <td style="width:11.1%">
                Price
                <div class="d-inline-block">
                    @{
                        await Html.RenderPartialAsync("_PricePopoverAccounting", Model);
                    }
                </div>
            </td>
            <td style="width:11.1%">
                Vendor
            </td>
            <td style="width:11.1%">
                Category
            </td>
            <td style="width:11.1%">
                Date
            </td>
            <td style="width:17.1%">
                @if (isNoInvoice)
                {
                    <button class="float-right accounting-background-color custom-button-font custom-button px-2rem hidden" id="add-to-selected">Add To Selected</button>
                }
            </td>

        </tr>
    </thead>
</table>
@{
    double VendorTotal = 0;
}
<input type="hidden" class="activeVendor" value="" />
@foreach (var Vendor in Model.Requests)
{
    <div class="mb-5 ">
        <div class=" row text-dark ">
            <div class="col-2 heading-1 text-capitalize">@Vendor.Key.VendorEnName.ToLower()</div>
            <div class="col-10"><hr /></div>
        </div>
        <table class="table table-headerspaced table-borderless table-hover mt-3 ">
            <tbody class="text-center">

                @foreach (var Request in Vendor)
                {
                    <tr class="text-center">
                        <td class="text-center" style="width:5%;">
                            @if (isNoInvoice)
                            {
                                <div class="form-check accounting-select" vendorid="@Vendor.Key.VendorID">
                                    <input type="checkbox" class="form-check-input fci-acc filled-in" id="@Request.RequestID" vendorid="@Vendor.Key.VendorID">
                                    <label class="form-check-label" for="@Request.RequestID">@Request.RequestID</label>
                                </div>
                            }
                            <div class="form-check text-center">
                                <input type="checkbox" class="form-check-input" id="@Request.RequestID" /><br />

                            </div>
                        </td>
                        <td style="width:8.1%;">
                            @{
                                var imageurl = "/images/css/CategoryImages/placeholder.png";
                                if (Request.Product.ProductSubcategory.ImageURL != null)
                                {
                                    imageurl = Request.Product.ProductSubcategory.ImageURL;
                                }
                            }
                            <img src="@imageurl" alt="Image" width="75" class="category-image" />
                        </td>
                        <td style="width:11.1%;">
                            @Request.Product.ProductName
                        </td>
                        <td style="width:11.1%">
                            @Request.Unit @if (Request.UnitType != null)
                            {@Request.UnitType.UnitTypeDescription<br />}
                            @Request.SubUnit @if (Request.SubUnitType != null)
                            {@Request.SubUnitType.UnitTypeDescription<br />}
                            @Request.SubSubUnit @if (Request.SubSubUnitType != null)
                            {@Request.SubSubUnitType.UnitTypeDescription<br />}
                        </td>
                        <td style="width:11.1%">
                            @{
                                var priceString = "";
                                var requestPriceList = AppUtility.GetPriceColumn(Model.SelectedPriceSort, Request, Model.SelectedCurrency);
                                foreach (var price in requestPriceList)
                                {
                                    if (price == requestPriceList.First())
                                    {
                                        priceString = price;
                                    }
                                    else
                                    {
                                        priceString = priceString + "<br />" + price;
                                    }
                                }
                            }
                            @Html.Raw(priceString)
                        </td>
                        <td style="width:11.1%">
                            @Vendor.Key.VendorEnName.ToLower()
                        </td>
                        <td style="width:11.1%">
                            @Request.Product.ProductSubcategory.ProductSubcategoryDescription
                        </td>
                        <td style="width:11.1%">
                            @String.Format("{0:d}", @Request.CreationDate.Date)
                        </td>
                        <td style="width:17.1%" class="text-right">

                            @{ String popoverID = Request.RequestID + "accNotification";
                                var popoverText = "";
                                var popoverNote = "";
                            }

                            <div class="table-icon-div">
                                <ul class="list-unstyled p-0 m-0">
                                    <li>
                                        @{ switch (Model.AccountingEnum)
                                            {
                                                 case AppUtility.SidebarEnum.NoInvoice:
                                                        <a href="" class="invoice-add-one" request="@Request.RequestID" data-toggle="tooltip" data-placement="top"
                                                        title="Add Invoice">
                                                        <i class="icon-cancel_presentation-24px green-overlay px-1" style="font-size:1.6rem;"></i>
                                                        </a> 
                                                        break;
                                                case AppUtility.SidebarEnum.DidntArrive:
                                                    @*<button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="btn p-0 m-0 no-box-shadow accNotification" value="@popoverID">
                        <i class="icon-local_shipping-24px green-overlay px-1" style="font-size:1.6rem;"></i>
                    </button>*@ //popoverText = "Has the order arrived?";
                                                       break;
                                                case AppUtility.SidebarEnum.PartialDelivery:
                                                    <button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="btn p-0 m-0 no-box-shadow accNotification" value="@popoverID">
                                                        <i class="icon-remove_shopping_cart-24px green-overlay px-1" style="font-size:1.6rem;"></i>
                                                    </button> popoverText = "Was ther order fully delivered?";
                                                                                popoverNote = Request.NoteForPartialDelivery;
                                                    break;
                                               case AppUtility.SidebarEnum.ForClarification:
                                                                    <button href="#" type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="btn p-0 m-0 no-box-shadow accNotification" value="@popoverID">
                                                                        <i class="icon-notification_didnt_arrive-24px green-overlay px-1" style="font-size:1.6rem;"></i>
                                                                    </button> popoverText = "Has the order been clarified?";
                                                                                                popoverNote = Request.NoteForClarifyDelivery;
                                                       break;

                                           }
                                         }

                                    </li>
                                    <div style="display:none;" id="@popoverID">
                                        <div class="container">
                                            <div class="row border py-3 px-4 mb-3">@popoverNote</div>
                                            <div class="row small-text">
                                                @popoverText
                                            </div>

                                            <div class="row mt-2 text-center">

                                                <div class="col-6 p-1">
                                                    <a asp-action="HandleNotifications" asp-controller="Requests" asp-route-requestID="@Request.RequestID" asp-route-type="@Model.AccountingEnum" class="rounded-pill small-text p-0 m-0 btn text-capitalize  handleNotification " style="        width: 100%;
        border: 1px solid var(--acc-color);
        background-color: transparent;
        color: var(--acc-color);">Save</a>
                                                </div>
                                                <div class="col-6 p-1 ">
                                                    <button class="rounded-pill p-0 m-0 small-text" style="background-color: transparent; border-width:1px !important; width: 100%;">
                                                    Cancel
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </ul>
                            </div>
                        </td>

                    </tr>

                    VendorTotal += Request.Cost ?? 0;

                }
            </tbody>
        </table>

        <div style="border-color:transparent;" class=" no-hover row text-right">
            <div colspan="8" style="border-color:transparent;" class="col-12 ">
                <div class="font-weight-bold text mt-4">
                    Items: @Vendor.Count()

                    <label class="mt-3">&emsp; Total: </label>&nbsp;<span>@(((decimal)(VendorTotal)).ToString("C02"))</span>

                    @if (isNoInvoice)
                    {
                        <button class=" ml-5 float-right accounting-background-color invoice-add-all custom-button-font custom-button " vendor="@Vendor.Key.VendorID">Add To All</button>
                    }
                </div>
            </div>
        </div>
    </div>
}
<script src="~/js/PricePopoverScript.js"></script>
