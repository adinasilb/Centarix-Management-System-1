@model PrototypeWithAuth.ViewModels.ReceivedModalSublocationsViewModel

<script src="~/js/site.js" asp-append-version="true"></script>

<div class="">
    @for (int i = 0; i < Model.locationTypeNames.Count - 1; i++) //do count - 1 because we don't want them to select the smallest instances
    {
        var id = "locationInstancesSelected[" + i + "]";
        <div class="form-group">
            <label class="control-label">@Model.locationTypeNames[i]</label>

            @if (i == 0)
            {
                @Html.DropDownListFor(m => m.locationInstancesSelected[i],
                new SelectList(Model.locationInstancesDepthZero, "LocationInstanceID", "LocationInstanceName"),
        "Select " + Model.locationTypeNames[i], new { @class = "mdb-select custom select-dropdown form-control-plaintext SLI open-mdb-select", @id = id })
            }
            else
            {
                @Html.DropDownListFor(m => m.locationInstancesSelected[i],
                Enumerable.Empty<SelectListItem>(), new { @class = "mdb-select custom select-dropdown form-control-plaintext SLI", @id = id })
                @*<select asp-for="locationInstancesSelected[i]" class="form-control-plaintext border-bottom SLI" id="@id">
                </select>*@
            }
        </div>
    }
</div>
<script>
    alert("in script to mdbselect on receivedmodalsublocations");
    $('.open-mdb-select').materialSelect();
</script>