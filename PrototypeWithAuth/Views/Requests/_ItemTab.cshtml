@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData

@{
    var category = "";
    if (Model.Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum != null)
    {
        category = Model.Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum;
    }
    var modalType = Model.ModalType;
    var markReadOnlyClass = "";
    var hiddenSummaryClass = "";
    if (modalType == AppUtility.RequestModalType.Edit)
    {
        markReadOnlyClass = "mark-readonly";
    }
    if (modalType == AppUtility.RequestModalType.Summary)
    {
        hiddenSummaryClass = "hidden";
        markReadOnlyClass = "mark-readonly";
    }
    var projectCategories = AppUtility.ParentCategoryEnum.Plastics
        + " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
        + " " + AppUtility.ParentCategoryEnum.Cells
        + " " + AppUtility.ParentCategoryEnum.Reusables
        + " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var subProjectCategories = AppUtility.ParentCategoryEnum.Plastics
        + " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
        + " " + AppUtility.ParentCategoryEnum.Cells
        + " " + AppUtility.ParentCategoryEnum.Reusables
        + " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var vendorCategories = AppUtility.ParentCategoryEnum.Plastics
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Cells
+ " " + AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var companyIDCategories = AppUtility.ParentCategoryEnum.Plastics
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Cells
+ " " + AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var quoteCategories = AppUtility.ParentCategoryEnum.Plastics
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Cells
+ " " + AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var catalogCategories = AppUtility.ParentCategoryEnum.Plastics
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Cells
+ " " + AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var batchCategories = AppUtility.ParentCategoryEnum.ReagentsAndChemicals
        + " d-none";
    var warrantyCategories = AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var supplyDaysCategories = AppUtility.ParentCategoryEnum.Plastics
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Cells
+ " " + AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var websiteCategories = AppUtility.ParentCategoryEnum.Plastics
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Cells
+ " " + AppUtility.ParentCategoryEnum.Reusables
+ " " + AppUtility.ParentCategoryEnum.Equipment
        + " d-none";
    var passageCategories = AppUtility.ParentCategoryEnum.Proprietary;
    var amountCategories = AppUtility.ParentCategoryEnum.Proprietary;
}

@{ var request = Model.Requests[0];}
<span class="heading-1 modal-tab-name">Item</span>
@if (modalType == AppUtility.RequestModalType.Create && !Model.IsProprietary)
{
    <div class="row">
        <div class="col-4 offset-8">
            <input type="checkbox" class="form-check-input filled-in isRequest" asp-for="IsRequestQuote" />
            <label class="form-check-label" asp-for="IsRequestQuote">Need To Request Price</label>
            <input type="hidden" value="@Model.IsRequestQuote" id="requestQuoteValue" />
        </div>
    </div>
}
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label asp-for="Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescription" class="control-label"></label>
            @if (Model.IsProprietary)
            {
                <input asp-for="Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescription" class="form-control-plaintext border-bottom" type="text" readonly />
            }
            else
            {
                @Html.DropDownListFor(vm => vm.Requests[0].Product.ProductSubcategory.ParentCategoryID,
             new SelectList(
             Model.ParentCategories,
             "ParentCategoryID",
             "ParentCategoryDescription"
             ), "Select Category",
             new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass, @id = "parentlist", @searchable = "Select Category" })
            }
            <input type="hidden" asp-for="Requests[0].Product.ProductSubcategory.ParentCategoryID" />
            <span asp-validation-for="Requests[0].Product.ProductSubcategory.ParentCategoryID" class="text-danger-centarix"></span>
        </div>
    </div>
    <div class="col-md-6 px-4">
        <div class="form-group sublist">
            <label asp-for="Requests[0].Product.ProductSubcategory.ProductSubcategoryDescription" class="control-label"></label>
            @Html.DropDownListFor(vm => vm.Requests[0].Product.ProductSubcategory.ProductSubcategoryID,
new SelectList(
Model.ProductSubcategories,
"ProductSubcategoryID",
"ProductSubcategoryDescription"
), "Select Sub Category",
new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass, @id = "sublist", @searchable = "Select Sub Category" })
            <input type="hidden" asp-for="Requests[0].Product.ProductSubcategory.ProductSubcategoryID" disabled class="proprietryHidenCategory" />
            <span asp-validation-for="Requests[0].Product.ProductSubcategoryID" class="text-danger-centarix"></span>
        </div>
    </div>

    @*<div class="col-md-4 @projectCategories">
                            <div class="form-group">
                                <label class="control-label">Project:</label>
                                @Html.DropDownListFor(m => m.Request.SubProject.ProjectID,
        new SelectList(
        Model.Projects,
        "ProjectID",
        "ProjectDescription"
        ), "Select a Project",
        new { @class = "mdb-select custom select-dropdown form-control-plaintext Project " + projectCategories + " " + markReadOnlyClass, @id = "subProject", @searchable = "Select a Project" })
                                <span asp-validation-for="Request.SubProject.ProjectID" class="text-danger-centarix"></span>
                            </div>
                        </div>*@
</div>

    @if (!Model.Requests[0].Product.ProductSubcategory.ParentCategory.isProprietary)
    {
        <div class="row">
            <!--<div class="col-md-4 @subProjectCategories">
                                    <div class="form-group SubProject">
                                        <label class="control-label">Sub Project:</label>
                                        @Html.DropDownListFor(vm => vm.Requests[0].SubProjectID,
            Enumerable.Empty<SelectListItem>(), "Select Sub Project",
            new { @class = "mdb-select mdb-select-subProject custom select-dropdown form-control-plaintext " + subProjectCategories + " " + markReadOnlyClass, @id = "SubProject", @searchable = "Select Sub Project" })-->
            @*<select asp-for="Request.SubProjectID" id="SubProject" class="mdb-select mdb-select-subProject custom select-dropdown form-control-plaintext" searchable="Select Sub Project">
                </select>*@
            <!--<span asp-validation-for="Request.SubProjectID" class="text-danger-centarix"></span>
                </div>
            </div>-->
            <div class="col-md-6 @vendorCategories">
                <div class="form-group">
                    <label asp-for="Requests[0].Product.Vendor" class="control-label"></label>
                    @Html.DropDownListFor(
        vm => vm.Requests[0].Product.VendorID,
        new SelectList(
        Model.Vendors,
        dataValueField: "VendorID",
        dataTextField: "VendorEnName"),
        //FUTURE: Ask If we should put in the functionality to create a new vendor here rather than just choosing, "Select a Project",
        "Select a Vendor",
        htmlAttributes: new { @class = " vendorList mdb-select custom select-dropdown form-control-plaintext " + vendorCategories + " " + markReadOnlyClass, @id = "vendorList", @size = 1, @searchable = "Select A Vendor" }
        )
                    <span asp-validation-for="Requests[0].Product.VendorID" class="text-danger-centarix"></span>
                </div>
            </div>
            <input class="@vendorCategories" type="hidden" value="" id="vendor-primary-email" />
            <div class="col-md-6 @companyIDCategories">
                <div class="form-group">
                    @* IN MIDDLE *@
                    <label asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="control-label"></label>
                    <input asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="vendorBusinessId form-control-plaintext border-bottom @companyIDCategories" disabled/>
                    @*don't need a validation here because you it's not saving*@
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 @catalogCategories">
                <label asp-for="Requests[0].Product.CatalogNumber" class="control-label"></label>
                <input asp-for="Requests[0].Product.CatalogNumber" class="form-control-plaintext border-bottom catalog-number @catalogCategories @markReadOnlyClass" />
                <span asp-validation-for="Requests[0].Product.CatalogNumber" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-3 @warrantyCategories ">
                <label asp-for="Requests[0].Warranty" class="control-label"></label>
                <input asp-for="Requests[0].Warranty" class="form-control-plaintext border-bottom @warrantyCategories @markReadOnlyClass" type="text" />
                <span asp-validation-for="Requests[0].Warranty" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-3 reusables equipment @warrantyCategories ">
                <label class="control-label">Estimated End Date</label>
                @*no date in backend so set to zero*@
                <input type="text" name="WarrantyDate" class="form-control-plaintext border-bottom datepicker @warrantyCategories " disabled="disabled" />
            </div>
            <div class="col-md-3 @batchCategories ">
                <label asp-for="Requests[0].Batch" class="control-label"></label>
                <input asp-for="Requests[0].Batch" class="form-control-plaintext border-bottom @batchCategories @markReadOnlyClass" type="text" />
                <span asp-validation-for="Requests[0].Batch" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-3 reusables equipment @batchCategories ">
                <label asp-for="Requests[0].BatchExpiration" class="control-label"></label>
                <input type="text" asp-for="Requests[0].BatchExpiration" class="form-control-plaintext border-bottom datepicker @batchCategories @markReadOnlyClass" disabled="disabled" />
            </div>
        </div>
        @if (modalType != AppUtility.RequestModalType.Create && Model.Requests[0].ParentQuoteID != null)
        {
            <div class="row @hiddenSummaryClass @quoteCategories">
                <div class="col-md-6">
                    <label asp-for="Requests[0].ParentQuote.QuoteNumber" class="control-label"></label>
                    <input asp-for="Requests[0].ParentQuote.QuoteNumber" readonly class="form-control-plaintext border-bottom @quoteCategories @markReadOnlyClass" disabled />
                    <span asp-validation-for="Requests[0].ParentQuote.QuoteNumber" class="text-danger-centarix" />
                </div>
                @*<div class="col-md-6">
                        <label asp-for="Request.ParentQuote.QuoteDate" class="control-label"></label>
                        <input asp-for="Request.ParentQuote.QuoteDate" type="text" readonly class="form-control-plaintext border-bottom datepicker @quoteCategories @markReadOnlyClass" disabled />
                        <span asp-validation-for="Request.ParentQuote.QuoteDate" class="text-danger-centarix quote-date" />
                    </div>*@
            </div>
        }
        <div class="row">
            <div class="col-md-4 @supplyDaysCategories @hiddenSummaryClass requestPriceQuote">
                <label asp-for="Requests[0].ExpectedSupplyDays" class="control-label"></label>
                <input asp-for="Requests[0].ExpectedSupplyDays" class="form-control-plaintext border-bottom expected-supply-days requestPriceQuote @supplyDaysCategories @markReadOnlyClass" type="text" />
                <span asp-validation-for="Requests[0].ExpectedSupplyDays" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-4 @supplyDaysCategories @hiddenSummaryClass requestPriceQuote">
                <div class="form-group">
                    <label class="control-label">Expected supply date</label>
                    @if (modalType == AppUtility.RequestModalType.Create)
                    {
                        <input value="" class="form-control-plaintext border-bottom datepicker requestPriceQuote @supplyDaysCategories " disabled type="text" name="expected-supply-days" id="expected-supply-date" />
                    }
                    else
                    {
                        if (Model.Requests[0].RequestStatusID == 2)
                        {
                            <input value="Requests[0].ParentRequest.OrderDate.AddDays(request.ExpectedSupplyDays ?? 0).ToString("dd'/'MM'/'yyyy")" disabled class="form-control-plaintext border-bottom datepicker @supplyDaysCategories  " type="text" name="expected-supply-days" id="expected-supply-date" />
                        }
                        else
                        {
                            <input value="@DateTime.Now.AddDays(request.ExpectedSupplyDays ?? 0).ToString("dd'/'MM'/'yyyy")" disabled class="form-control-plaintext border-bottom datepicker @supplyDaysCategories " type="text" name="expected-supply-days" id="expected-supply-date" />
                        }
                    }
                </div>
            </div>
            <div class="col-md-4 @websiteCategories">
                <label asp-for="Requests[0].URL" class="control-label"></label>
                <input asp-for="Requests[0].URL" class="form-control-plaintext border-bottom @websiteCategories @markReadOnlyClass" />
                <span asp-validation-for="Requests[0].URL" class="text-danger-centarix"></span>
            </div>
        </div>
        <div class="row">
            @if (request.Invoice != null)
            {
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].Invoice.InvoiceNumber" class="control-label"></label>
                    <input asp-for="Requests[0].Invoice.InvoiceNumber" class="form-control-plaintext border-bottom @markReadOnlyClass" />
                    <span asp-validation-for="Requests[0].Invoice.InvoiceNumber" class="text-danger-centarix"></span>
                </div>
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].Invoice.InvoiceDate" class="control-label"></label>
                    <input asp-for="Requests[0].Invoice.InvoiceDate" class="form-control-plaintext border-bottom datepicker @markReadOnlyClass" type="text" />
                    <span asp-validation-for="Requests[0].Invoice.InvoiceDate" class="text-danger-centarix"></span>
                </div>
            }
            @if (request.ParentRequest?.SupplierOrderNumber != null)
            {
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].ParentRequest.SupplierOrderNumber" class="control-label"></label>
                    <input asp-for="Requests[0].ParentRequest.SupplierOrderNumber" class="form-control-plaintext border-bottom @markReadOnlyClass" type="text" />
                    <span asp-validation-for="Requests[0].ParentRequest.SupplierOrderNumber" class="text-danger-centarix"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="Requests[0].ParentRequest.OrderDate" class="control-label"></label>
                    <input type="text" asp-for="Requests[0].ParentRequest.OrderDate" class="form-control-plaintext border-bottom datepicker  @markReadOnlyClass" />
                    <span asp-validation-for="Requests[0].ParentRequest.OrderDate" class="text-danger-centarix"></span>
                </div>
            }
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-4 form-group">
                <label asp-for="Requests[0].Unit" class="control-label"></label>
                @Html.EditorFor(vm => vm.Requests[0].Unit, new { htmlAttributes = new { @class = "form-control-plaintext border-bottom " + @markReadOnlyClass, @min = "1", @id = "unit" } })
                <span asp-validation-for="Requests[0].Unit" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-8 form-group dropdown-select-div">
                <label asp-for="Requests[0].UnitType" class="control-label"></label>
                @Html.DropDownListFor(
                    vm => vm.Requests[0].UnitTypeID,
                    Model.UnitTypeList,
                    "",
                    htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext unit-type-select " + markReadOnlyClass, @id = "unitTypeID" }
                    )
                <span asp-validation-for="Requests[0].UnitType" class="text-danger-centarix"></span>
            </div>
        </div>
        if (request.Product.ProductSubcategory.ProductSubcategoryDescription == "Cells")
        {
            <div class="row">
                <div class="col-md-4 @passageCategories @hiddenSummaryClass">
                    <label asp-for="Requests[0].Passage" class="control-label"></label>
                    <input asp-for="Requests[0].Passage" class="form-control-plaintext border-bottom expected-supply-days @passageCategories @markReadOnlyClass" type="text" />
                    <span asp-validation-for="Requests[0].Passage" class="text-danger-centarix"></span>
                </div>

            </div>
        }
    }
