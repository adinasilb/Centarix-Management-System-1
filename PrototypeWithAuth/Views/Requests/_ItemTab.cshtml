@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData

@{
    var category = "";
    if (Model.Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum != null)
    {
        category = Model.Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescriptionEnum;
    }
    var modalType = Model.ModalType;
    var markReadOnlyClass = "";
    var hiddenSummaryClass = "";
    var disabled = "";
    if (modalType != AppUtility.RequestModalType.Create)
    {
        markReadOnlyClass = "mark-readonly";
        disabled = "disabled";
        if (modalType == AppUtility.RequestModalType.Summary)
        {
            hiddenSummaryClass = "hidden";
        }
    }
    var projectCategories = AppUtility.ParentCategoryEnum.Consumables
        + " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
        + " " + AppUtility.ParentCategoryEnum.Biological
        + " " + AppUtility.ParentCategoryEnum.Reusable
        + " " + AppUtility.ParentCategoryEnum.Clinical
        + " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var subProjectCategories = AppUtility.ParentCategoryEnum.Consumables
        + " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
        + " " + AppUtility.ParentCategoryEnum.Biological
        + " " + AppUtility.ParentCategoryEnum.Reusable
        + " " + AppUtility.ParentCategoryEnum.Clinical
        + " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var vendorCategories = AppUtility.ParentCategoryEnum.Consumables
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Biological
+ " " + AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Clinical
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var companyIDCategories = AppUtility.ParentCategoryEnum.Consumables
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Biological
+ " " + AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Clinical
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var quoteCategories = AppUtility.ParentCategoryEnum.Consumables
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Biological
+ " " + AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Clinical
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var catalogCategories = AppUtility.ParentCategoryEnum.Consumables
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Biological
+ " " + AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Clinical
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var batchCategories = AppUtility.ParentCategoryEnum.Biological
        + " d-none";
    if(modalType != AppUtility.RequestModalType.Create)
    {
        batchCategories += " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals;
    }
    var warrantyCategories = AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var supplyDaysCategories = AppUtility.ParentCategoryEnum.Consumables
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Biological
+ " " + AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Clinical
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var websiteCategories = AppUtility.ParentCategoryEnum.Consumables
+ " " + AppUtility.ParentCategoryEnum.ReagentsAndChemicals
+ " " + AppUtility.ParentCategoryEnum.Biological
+ " " + AppUtility.ParentCategoryEnum.Reusable
+ " " + AppUtility.ParentCategoryEnum.Clinical
+ " " + AppUtility.ParentCategoryEnum.Safety
        + " " + AppUtility.ParentCategoryEnum.General
        + " d-none";
    var passageCategories = AppUtility.ParentCategoryEnum.Samples;
    var amountCategories = AppUtility.ParentCategoryEnum.Samples;
    var dateCreatedCategories = AppUtility.ParentCategoryEnum.Samples + " d-none";
}

@{ var request = Model.Requests[0];}
<span class="heading-1 modal-tab-name">Item</span>
@*@if (modalType == AppUtility.RequestModalType.Create && !Model.IsProprietary)
{
    <div class="row">
        <div class="col-4 offset-8">
            <input type="checkbox" class="form-check-input filled-in isRequest" asp-for="IsRequestQuote" />
            <label class="form-check-label" asp-for="IsRequestQuote">Need To Request Price</label>
            <input type="hidden" value="@Model.IsRequestQuote.ToString().ToLower()" id="requestQuoteValue" />
        </div>
    </div>
}*@
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label asp-for="Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescription" class="control-label"></label>
            @if (Model.IsProprietary)
            {
                <input asp-for="Requests[0].Product.ProductSubcategory.ParentCategory.ParentCategoryDescription" class="form-control-plaintext border-bottom" type="text" readonly />
            }
            else
            {
                @Html.DropDownListFor(vm => vm.Requests[0].Product.ProductSubcategory.ParentCategoryID,
             new SelectList(
             Model.ParentCategories,
             "ParentCategoryID",
             "ParentCategoryDescription"
             ), "Select Category",
             new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass, @id = "parentlist", 
                 @searchable = "Select Category", @data_stop_refresh = "true" })
            }
            <input type="hidden" asp-for="Requests[0].Product.ProductSubcategory.ParentCategoryID" />
            <span asp-validation-for="Requests[0].Product.ProductSubcategory.ParentCategoryID" class="text-danger-centarix"></span>
        </div>
    </div>
    <div class="col-md-6 px-4">
        <div class="form-group sublist">
            <label asp-for="Requests[0].Product.ProductSubcategory.ProductSubcategoryDescription" class="control-label"></label>
            @Html.DropDownListFor(vm => vm.Requests[0].Product.ProductSubcategoryID,
                new SelectList(
                Model.ProductSubcategories,
                "ProductSubcategoryID",
                "ProductSubcategoryDescription"
                ), "Select Sub Category",
                new { @class = "mdb-select-sublist mdb-select custom select-dropdown form-control-plaintext " + markReadOnlyClass, @id = "sublist",
                    @searchable = "Select Sub Category", @data_stop_refresh = "true" })
            <input type="hidden" asp-for="Requests[0].Product.ProductSubcategoryID" disabled class="proprietryHidenCategory" />
            <span asp-validation-for="Requests[0].Product.ProductSubcategoryID" class="text-danger-centarix"></span>
        </div>
    </div>

    @*<div class="col-md-4 @projectCategories">
                            <div class="form-group">
                                <label class="control-label">Project:</label>
                                @Html.DropDownListFor(m => m.Request.SubProject.ProjectID,
        new SelectList(
        Model.Projects,
        "ProjectID",
        "ProjectDescription"
        ), "Select a Project",
        new { @class = "mdb-select custom select-dropdown form-control-plaintext Project " + projectCategories + " " + markReadOnlyClass, @id = "subProject", @searchable = "Select a Project" })
                                <span asp-validation-for="Request.SubProject.ProjectID" class="text-danger-centarix"></span>
                            </div>
                        </div>*@
</div>

@if (!Model.Requests[0].Product.ProductSubcategory.ParentCategory.IsProprietary)
{
    <div class="row">
        <!--<div class="col-md-4 @subProjectCategories">
                                <div class="form-group SubProject">
                                    <label class="control-label">Sub Project:</label>
                                    @Html.DropDownListFor(vm => vm.Requests[0].SubProjectID,
        Enumerable.Empty<SelectListItem>(), "Select Sub Project",
        new { @class = "mdb-select mdb-select-subProject custom select-dropdown form-control-plaintext " + subProjectCategories + " " + markReadOnlyClass, @id = "SubProject", @searchable = "Select Sub Project", @data_stop_refresh = "true" })-->
        @*<select asp-for="Request.SubProjectID" id="SubProject" class="mdb-select mdb-select-subProject custom select-dropdown form-control-plaintext" searchable="Select Sub Project">
            </select>*@
        <!--<span asp-validation-for="Request.SubProjectID" class="text-danger-centarix"></span>
            </div>
        </div>-->
        <div class="col-md-6 @vendorCategories">
            <div class="form-group">
                <label asp-for="Requests[0].Product.Vendor" class="control-label"></label>
                @Html.DropDownListFor(
                        vm => vm.Requests[0].Product.VendorID,
                        new SelectList(
                        Model.Vendors,
                        dataValueField: "VendorID",
                        dataTextField: "VendorEnName"),
                        //FUTURE: Ask If we should put in the functionality to create a new vendor here rather than just choosing, "Select a Project",
                        "Select a Vendor",
                        htmlAttributes: new
                             {
                                 @class = " vendorList mdb-select custom select-dropdown form-control-plaintext " + vendorCategories + " " + markReadOnlyClass,
                            @id = "vendorList",
                                 @size = 1,
                                 @searchable = "Select A Vendor",
                                 @data_stop_refresh = "true"
                             }
                        )
                <span asp-validation-for="Requests[0].Product.VendorID" class="text-danger-centarix"></span>
            </div>
            <input type="hidden" id="VendorCurrencyID" />
        </div>
        <input class="@vendorCategories" type="hidden" value="" id="vendor-primary-email" />
        <div class="col-md-6 @companyIDCategories">
            <div class="form-group">
                @* IN MIDDLE *@
                <label asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="control-label"></label>
                <input asp-for="Requests[0].Product.Vendor.VendorBuisnessID" class="vendorBusinessId form-control-plaintext border-bottom " disabled />
                @*don't need a validation here because you it's not saving*@
            </div>
        </div>
        <div class="col-12"><span class="vendor-price-warning small-text" style="color: #EED202;" id="vendor-price-warning"></span></div>
    </div>

    <div class="row">
        <div class="col-md-6 @catalogCategories">
            <label asp-for="Requests[0].Product.CatalogNumber" class="control-label"></label>
            <input asp-for="Requests[0].Product.CatalogNumber" class="form-control-plaintext border-bottom catalog-number @catalogCategories @markReadOnlyClass" />
            <span asp-validation-for="Requests[0].Product.CatalogNumber" class="text-danger-centarix"></span>
        </div>
        <div class="col-md-3 @warrantyCategories ">
            <label asp-for="Requests[0].Warranty" class="control-label"></label>
            <input asp-for="Requests[0].Warranty" class="form-control-plaintext border-bottom warranty-months @warrantyCategories @markReadOnlyClass" type="text" />
            <span asp-validation-for="Requests[0].Warranty" class="text-danger-centarix"></span>
        </div>
        <div class="col-md-3 reusables equipment @warrantyCategories ">
            <label class="control-label">Estimated End Date</label>
            @*no date in backend so set to zero*@
            <input type="text" name="WarrantyDate" class="form-control-plaintext border-bottom datepicker @warrantyCategories" style="pointer-events:none;" />
        </div>
        <div class="col-md-3 @batchCategories ">
            <label asp-for="Requests[0].Batch" class="control-label"></label>
            <input asp-for="Requests[0].Batch" class="form-control-plaintext border-bottom @batchCategories @markReadOnlyClass" type="text" />
            <span asp-validation-for="Requests[0].Batch" class="text-danger-centarix"></span>
        </div>
        <div class="col-md-3 reusables equipment @batchCategories ">
            <label asp-for="Requests[0].BatchExpiration" class="control-label"></label>
            <input type="text" asp-for="Requests[0].BatchExpiration" class="form-control-plaintext border-bottom datepicker @batchCategories @markReadOnlyClass" disabled="disabled" />
        </div>
    </div>
    @if (modalType != AppUtility.RequestModalType.Create && Model.Requests[0].ParentQuote?.QuoteNumber != null)
    {
        <div class="row @hiddenSummaryClass @quoteCategories">
            <div class="col-md-6">
                <label asp-for="Requests[0].ParentQuote.QuoteNumber" class="control-label"></label>
                <input asp-for="Requests[0].ParentQuote.QuoteNumber" readonly class="form-control-plaintext border-bottom @quoteCategories @markReadOnlyClass" disabled />
                <span asp-validation-for="Requests[0].ParentQuote.QuoteNumber" class="text-danger-centarix" />
            </div>
            @*<div class="col-md-6">
                    <label asp-for="Request.ParentQuote.QuoteDate" class="control-label"></label>
                    <input asp-for="Request.ParentQuote.QuoteDate" type="text" readonly class="form-control-plaintext border-bottom datepicker @quoteCategories @markReadOnlyClass" disabled />
                    <span asp-validation-for="Request.ParentQuote.QuoteDate" class="text-danger-centarix quote-date" />
                </div>*@
        </div>
    }
    <div class="row">
        @if (Model.Requests[0].ExpectedSupplyDays != null || modalType == AppUtility.RequestModalType.Create)
        {
            <div class="col-md-4 @supplyDaysCategories @hiddenSummaryClass requestPriceQuote">
                <label asp-for="Requests[0].ExpectedSupplyDays" class="control-label"></label>
                <input asp-for="Requests[0].ExpectedSupplyDays" class="form-control-plaintext border-bottom expected-supply-days requestPriceQuote @supplyDaysCategories @markReadOnlyClass" type="text" />
                <span asp-validation-for="Requests[0].ExpectedSupplyDays" class="text-danger-centarix"></span>
            </div>
            <div class="col-md-4 @supplyDaysCategories @hiddenSummaryClass requestPriceQuote">
                <div class="form-group">
                    <label class="control-label">Expected supply date</label>
                    @if (modalType == AppUtility.RequestModalType.Create)
                    {
                        <input value="" class="form-control-plaintext border-bottom datepicker expected-supply-date requestPriceQuote @supplyDaysCategories " disabled type="text" name="expected-supply-days"/>
                    }
                    else
                    {
                        if (Model.Requests[0].RequestStatusID == 2)
                        {
                            <input value="@Model.Requests[0].ParentRequest.OrderDate.AddDays(request.ExpectedSupplyDays ?? 0).GetElixirDateFormat()" class="form-control-plaintext border-bottom datepicker expected-supply-date @supplyDaysCategories  @markReadOnlyClass" type="text" name="expected-supply-days" id="expected-supply-date" />
                        }
                        else
                        {
                            <input value="@DateTime.Now.AddDays(request.ExpectedSupplyDays ?? 0).GetElixirDateFormat()" class="form-control-plaintext border-bottom datepicker expected-supply-date @supplyDaysCategories @markReadOnlyClass" type="text" name="expected-supply-days" id="expected-supply-date" />
                        }
                    }
                </div>
            </div>
            }
            <div class="col-md-4 @websiteCategories">
                <label asp-for="Requests[0].URL" class="control-label"></label>
                <input asp-for="Requests[0].URL" class="form-control-plaintext border-bottom @websiteCategories @markReadOnlyClass" />
                <span asp-validation-for="Requests[0].URL" class="text-danger-centarix"></span>
            </div>
        </div>
    @if (Model.Requests[0].ParentRequest?.SupplierOrderNumber != null ||  Model.Requests[0].ParentRequest?.OrderNumber != null)
    {
        <div class="row">
            @if (Model.Requests[0].ParentRequest?.SupplierOrderNumber != null)
            {
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].ParentRequest.SupplierOrderNumber" class="control-label"></label>
                    <input value="@Model.Requests[0].ParentRequest.SupplierOrderNumber" class="form-control-plaintext border-bottom" @disabled type="text" />
                    <span asp-validation-for="Requests[0].ParentRequest.SupplierOrderNumber" class="text-danger-centarix"></span>
                </div>
            }
            @if(Model.Requests[0].ParentRequest?.OrderNumber != null)
            {
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].ParentRequest.OrderNumber" class="control-label">Centarix Order #</label>
                    <input value="@Model.Requests[0].ParentRequest.OrderNumber" class="form-control-plaintext border-bottom" @disabled type="text" />
                    <span asp-validation-for="Requests[0].ParentRequest.OrderNumber" class="text-danger-centarix"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="Requests[0].ParentRequest.OrderDate" class="control-label"></label>
                    <input type="text" value="@Model.Requests[0].ParentRequest.OrderDate.GetElixirDateFormat()" class="form-control-plaintext border-bottom datepicker for-supply-date-calc"  @disabled @*asp-format="@AppUtility.AspDateFormatString"*@  />
                    <span asp-validation-for="Requests[0].ParentRequest.OrderDate" class="text-danger-centarix"></span>
                </div>
            }

        </div>
    }
    @if (Model.Requests[0].RequestStatusID == 3 || Model.Requests[0].Payments?.FirstOrDefault()?.HasInvoice == true)
    {
        <div class="row">
            @if (Model.Requests[0].RequestStatusID == 3)
            {
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].ArrivalDate" class="control-label"></label>
                    <input asp-for="Requests[0].ArrivalDate" class="form-control-plaintext border-bottom" asp-format="@AppUtility.AspDateFormatString" disabled type="text" />
                </div>
                <div class="col-md-3">
                    <label class="control-label">Received By</label>
                    <input type="text" class="form-control-plaintext border-bottom" disabled value="@Model.Requests[0].ApplicationUserReceiver.FirstName @Model.Requests[0].ApplicationUserReceiver.LastName" />
                    <input type="hidden" asp-for="Requests[0].ApplicationUserReceiverID" />
                </div>
            }
            @if (Model.Requests[0].Payments?.FirstOrDefault()?.HasInvoice == true) //todo: make this a loop for each payment
            {
                <input type ="hidden" asp-for="Requests[0].Payments[0].InvoiceID" />
                <input type ="hidden" asp-for="Requests[0].Payments[0].Invoice.InvoiceID" />
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].Payments[0].Invoice.InvoiceNumber" class="control-label"></label>
                    <input asp-for="Requests[0].Payments[0].Invoice.InvoiceNumber" class="form-control-plaintext border-bottom @markReadOnlyClass" />
                    <span asp-validation-for="Requests[0].Payments[0].Invoice.InvoiceNumber" class="text-danger-centarix"></span>
                </div>
                <div class="col-md-3 ">
                    <label asp-for="Requests[0].Payments[0].Invoice.InvoiceDate" class="control-label"></label>
                    <input asp-for="Requests[0].Payments[0].Invoice.InvoiceDate" class="form-control-plaintext border-bottom datepicker @markReadOnlyClass" type="text" asp-format="@AppUtility.AspDateFormatString" />
                    <span asp-validation-for="Requests[0].Payments[0].Invoice.InvoiceDate" class="text-danger-centarix"></span>
                </div>
            }
        </div>
    }
}
else //isProprietary
{
    @*<div class="row">
        <div class="col-md-4 form-group">
            <label asp-for="Requests[0].Unit" class="control-label"></label>
            @Html.EditorFor(vm => vm.Requests[0].Unit, new { htmlAttributes = new { @class = "form-control-plaintext border-bottom " + @markReadOnlyClass, @min = "1", @id = "unit" } })
            <span asp-validation-for="Requests[0].Unit" class="text-danger-centarix"></span>
        </div>
        <div class="col-md-8 form-group dropdown-select-div">
            <label asp-for="Requests[0].UnitType" class="control-label"></label>
            @Html.DropDownListFor(
                vm => vm.Requests[0].UnitTypeID,
                Model.UnitTypeList,
                "",
                htmlAttributes: new { @class = "mdb-select custom select-dropdown form-control-plaintext unit-type-select " + markReadOnlyClass, @id = "unitTypeID" }
                )
            <span asp-validation-for="Requests[0].UnitType" class="text-danger-centarix"></span>
        </div>
    </div>*@
    if (request.Product.ProductSubcategory.ProductSubcategoryDescription == "Cells")
    {
        <div class="row">
            <div class="col-md-4 @passageCategories @hiddenSummaryClass">
                <label asp-for="Requests[0].Passage" class="control-label"></label>
                <input asp-for="Requests[0].Passage" class="form-control-plaintext border-bottom expected-supply-days @passageCategories @markReadOnlyClass" type="text" />
                <span asp-validation-for="Requests[0].Passage" class="text-danger-centarix"></span>
            </div>

        </div>
    }
    <div class="row">
        <div class="col-md-3 ">
            <label asp-for="Requests[0].CreationDate" class="control-label @dateCreatedCategories">Creation Date</label>
            <input asp-for="Requests[0].CreationDate" class="form-control-plaintext border-bottom datepicker @markReadOnlyClass @dateCreatedCategories"  asp-format="@AppUtility.AspDateFormatString"  type="text" />
        </div>
    </div>
}
