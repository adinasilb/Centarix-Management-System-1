@model PrototypeWithAuth.ViewModels.TempRequestListViewModel
    <div class="temprequesthiddenfors">
        @*@Html.HiddenFor(r => r.GUID)*@
        <input type="hidden" asp-for="GUID" class="hidden-guid" />
        @Html.HiddenFor(r => r.SequencePosition)

        @if (Model.TempRequestViewModels != null)
        {
            for (int trID = 0; trID < Model.TempRequestViewModels.Count(); trID++)
            {
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ApplicationUserCreatorID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Cost)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.CreationDate)

                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.RequestID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Unit)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.UnitTypeID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.SubUnit)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.SubUnitTypeID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.SubSubUnit)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.SubSubUnitTypeID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.RequestStatusID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.IncludeVAT)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Batch)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.BatchExpiration)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ExchangeRate)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ExpectedSupplyDays)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Installments)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.OrderType)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Terms)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Warranty)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.URL)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.IsReceived)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Passage)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Amount)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Currency)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.PaymentStatusID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequestID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.ParentRequestID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.ApplicationUserID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.Credit)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.OrderDate)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.OrderNumber)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.Shipping)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.SupplierOrderNumber)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.NoteToSupplier)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentRequest.Taxes)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentQuoteID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.QuoteStatusID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentQuote.QuoteNumber)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentQuote.QuoteDate)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ParentQuote.Discount)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.ProductID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.ProductHebrewName)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.ProductName)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.ProductSubcategoryID)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.SerialNumber)
                @Html.HiddenFor(r => r.TempRequestViewModels[trID].Request.Product.VendorID)

                for (var paymentID = 0; paymentID < Model.TempRequestViewModels[trID].Payments?.Count; paymentID++)
                {
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].CheckNumber)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].CompanyAccountID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].CreditCardID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].HasInvoice)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].InvoiceID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].InstallmentNumber)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].IsPaid)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].PaymentDate)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].PaymentReferenceDate)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].PaymentTypeID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].Reference)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].PaymentTypeID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].RequestID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Payments[paymentID].Sum)
                }

                for (var emailID = 0; emailID < Model.TempRequestViewModels[trID].Emails?.Count; emailID++)
                {
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Emails[emailID])
                }

                for (var commentID = 0; commentID < Model.TempRequestViewModels[trID].Comments?.Count; commentID++)
                {
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Comments[commentID].ObjectID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Comments[commentID].CommentTimeStamp)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Comments[commentID].CommentText)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Comments[commentID].ApplicationUserID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Comments[commentID].CommentID)
                    @Html.HiddenFor(r => r.TempRequestViewModels[trID].Comments[commentID].CommentTypeID)
                }
            }
        }

        @Html.HiddenFor(model => model.RequestIndexObject.PageType)
        @Html.HiddenFor(model => model.RequestIndexObject.PageNumber)
        @Html.HiddenFor(model => model.RequestIndexObject.SectionType)
        @Html.HiddenFor(model => model.RequestIndexObject.SelectedCurrency)
        @*@Html.HiddenFor(model => model.RequestIndexObject.SelectedPriceSort)*@
        @Html.HiddenFor(model => model.RequestIndexObject.RequestStatusID)
        @Html.HiddenFor(model => model.RequestIndexObject.SidebarFilterID)
        @Html.HiddenFor(model => model.RequestIndexObject.SidebarType)
        @Html.HiddenFor(model => model.RequestIndexObject.OrderType)
        @Html.HiddenFor(model => model.RequestIndexObject.IsReorder)
        @Html.HiddenFor(model => model.RequestIndexObject.ModalType)
        @Html.HiddenFor(model => model.RequestIndexObject.ListID)
    </div>