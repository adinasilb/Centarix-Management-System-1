@model PrototypeWithAuth.ViewModels.CommentsInfoViewModel
@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@inject UserManager<ApplicationUser> _userManager
@{

    var disabled = "";
    if (Model.IsEdit)
    {
        disabled = "disabled";
    }
}


    <div class="table comment-info border p-2 mb-3">
        @{
            var commentTypeID = "Comments_" + Model.Index + "__CommentType";
            var commentTypeName = "Comments[" + Model.Index + "].CommentType";
            var commentIDID = "Comments_" + Model.Index + "__CommentID";
            var commentIDName = "Comments[" + Model.Index + "].CommentID";
        }

        <input type="hidden" id="@commentIDID" name="@commentIDName" value="@Model.Comment.CommentID" class="comment-type" />
        <input type="hidden" id="@commentTypeID" name="@commentTypeName" value="@Model.Comment.CommentType" class="comment-type" />
        <div class="row ml-2  border-bottom-0 mb-0">
            <div class="col-1 mt-auto mb-auto ">
                <button href="#" type="button" class="btn btn-link p-0 ">
                    @{
                        var src = "/UserImages/user-image-placeholder.png";
                        if (_userManager.GetUserAsync(User).Result.UserImage != null)
                        {
                            src = "\\" + AppUtility.GetLastFiles(_userManager.GetUserAsync(User).Result.UserImage, 2);
                        }
                    }
                    <img src="@src" class=" ml-0 circular-profile-img circular-profile-img-50" alt="default User image" />
                </button>
            </div>
            <div class="col-9 ">
                <div class=" p-3 ">
                    <label class="m-0"> @_userManager.GetUserAsync(User).Result.FirstName</label>
                    <label class="m-0">@_userManager.GetUserAsync(User).Result.LastName</label>
                    <label class="m-0">@Model.Comment.CommentTimeStamp.ToString("MMMM") @Model.Comment.CommentTimeStamp.Day, @Model.Comment.CommentTimeStamp.Year @Model.Comment.CommentTimeStamp.ToString("hh:mm tt") </label>
                    @{
                        var commentTextID = "Comments_" + Model.Index + "__CommentText";
                        var commentTextName = "Comments[" + Model.Index + "].CommentText";
                        var commentTextValue = Model.Comment.CommentText;
                    }
                    <input name="@commentTextName" id="@commentTextID" value="@commentTextValue" class="form-control-plaintext border-bottom m-0 p-0 comment-text mark-readonly" @disabled />

                </div>

            </div>
            <div class=" col-2 ">
                @if (Model.Comment.CommentType.Equals(AppUtility.CommentTypeEnum.Comment.ToString()))
                {
                    <i class="icon-comment-24px float-right m-4" style="padding-top: .55rem; font-size: 1.25rem; color: #30BCC9;"></i>
                }
                else if (Model.Comment.CommentType.Equals(AppUtility.CommentTypeEnum.Warning.ToString()))
                {
                    <i class="icon-report_problem-24px float-right m-4" style="padding-top: .55rem; font-size: 1.25rem; color: var(--danger-color);"></i>
                }
            </div>

        </div>
    </div>