@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@model PrototypeWithAuth.ViewModels.ReceivedLocationViewModel

<script src="~/js/site.js" asp-append-version="true"></script>
<div class="modal modal-view" id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false">

    <div class="modal-dialog  modal-dialog-scrollable modal-lg" role="document" style="max-height:100%; max-width:70rem; overflow-y:auto;">

        <div class="modal-content d-inline-block" style="width:70rem;">

            <form action="" method="post" enctype="multipart/form-data" style="height: 100%; overflow: auto;">
                @*the following hidden fors are here so i can do a request.save in for the info that is being given here.
                    in the future might want to change it to loading the request from this request id and then adding in the values
                    given here (done in the controller)*@
                @Html.HiddenFor(vm => vm.Request.RequestID)
                @Html.HiddenFor(vm => vm.Request.ProductID)
                @Html.HiddenFor(vm => vm.Request.ParentRequestID)
                @Html.HiddenFor(vm => vm.Request.RequestStatusID)
                @Html.HiddenFor(vm => vm.Request.AmountWithInLocation)
                @Html.HiddenFor(vm => vm.Request.AmountWithOutLocation)
                @Html.HiddenFor(vm => vm.Request.IsDeleted)
                @Html.HiddenFor(vm => vm.Request.IsApproved)
                @Html.HiddenFor(vm => vm.Request.Unit)
                @Html.HiddenFor(vm => vm.Request.UnitTypeID)
                @Html.HiddenFor(vm => vm.Request.SubUnit)
                @Html.HiddenFor(vm => vm.Request.SubUnitTypeID)
                @Html.HiddenFor(vm => vm.Request.SubSubUnit)
                @Html.HiddenFor(vm => vm.Request.SubSubUnitTypeID)
                @Html.HiddenFor(vm => vm.Request.UnitsOrdered)
                @Html.HiddenFor(vm => vm.Request.UnitsInStock)
                @Html.HiddenFor(vm => vm.Request.Quantity)
                @Html.HiddenFor(vm => vm.Request.Cost)
                @Html.HiddenFor(vm => vm.Request.Currency)
                @Html.HiddenFor(vm => vm.Request.CatalogNumber)
                @Html.HiddenFor(vm => vm.Request.SerialNumber)
                @Html.HiddenFor(vm => vm.Request.URL)
                @Html.HiddenFor(vm => vm.Request.Warranty)
                @Html.HiddenFor(vm => vm.Request.VAT)
                @Html.HiddenFor(vm => vm.Request.ExchangeRate)
                @Html.HiddenFor(vm => vm.Request.Terms)
                @Html.HiddenFor(vm => vm.Request.ExpectedSupplyDays)
                @Html.HiddenFor(vm => vm.Request.RequestComment) @*???????? THis should be taken out of the model....*@

                @*THE FOLLOWING HIDDEN VALUES ARE TO REMEMBER THE REQUESTS INDEX PAGE FROM BEFORE*@
                @*the values for the hidden data is set in js on the modal success area off of the tempdata*@
                @Html.HiddenFor(model => model.Page)
                @Html.HiddenFor(model => model.RequestStatusID)
                @Html.HiddenFor(model => model.SubCategoryID)
                @Html.HiddenFor(model => model.VendorID)
                @Html.HiddenFor(model => model.ApplicationUserID) @*MAKE SURE THIS IS DOING IT CORRECTLY --> make sure js is parsing it as a string*@
                @Html.HiddenFor(model => model.PageType) @*JS shoulde be taking this as a string *@



                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="modal-header border-bottom-0">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <h6 class="text-danger">@TempData["ErrorMessage"]</h6>
                        <br />
                    }
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body modal-dialog-scrollable">
                    <div class="container">
                        <div class="row">
                            <div class="col-3">
                                <label asp-for="Request.ArrivalDate" class="control-label"></label>
                                <input asp-for="Request.ArrivalDate" class="form-control-plaintext border-bottom" />
                                <span asp-validation-for="Request.ArrivalDate" class="text-danger"></span>
                            </div>
                            <div class="col-3">
                                <label asp-for="Request.ApplicationUserReceiverID" class="control-label"></label>
                                <select asp-for="Request.ApplicationUserReceiverID" class="form-control-plaintext border-bottom">
                                    @foreach (var user in Model.ApplicationUsers)
                                    {
                                        <option value="@user.Id">@user.UserName</option>
                                    }
                                </select>
                                <span asp-validation-for="Request.ApplicationUserReceiverID" class="text-danger"></span>
                            </div>
                            <div class="col-2 text-center">
                                <input type="checkbox" asp-for="Arrival" class="custom-radio" />
                                <label asp-for="Arrival">Arrival</label>
                            </div>
                            <div class="col-2 text-center">
                                <input type="checkbox" asp-for="Clarify" class="custom-radio" />
                                <label asp-for="Clarify">Clarify</label>
                            </div>
                            <div class="col-2 text-center">
                                <input type="checkbox" asp-for="PartialDelivery" class="custom-radio" />
                                <label asp-for="PartialDelivery">Partial Delivery</label>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label" asp-for="locationTypesDepthZero">Location Type</label>
                                    @Html.DropDownListFor(m => m.LocationTypeID,
                                    new SelectList(Model.locationTypesDepthZero, "LocationTypeID", "LocationTypeName"),
                                    "Select Type", new { @class = "form-control-plaintext border-bottom ", @id = "locationTypeDepthZero" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="divSublocations">

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="visualView col-md-12 text-center">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row">
                        @*<div class="divSublocations">

                            </div>*@
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row">
                        @*<div class="visualView col-md-12 text-center">

                            </div>*@
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" asp-action="ReceivedModal" class="btn btn-secondary" />
                </div>
            </form>

        </div>
    </div>
</div>

<script>
    $("input:checkbox").on('click', function () {
        // in the handler, 'this' refers to the box clicked on
        var $box = $(this);
        if ($box.is(":checked")) {
            // the name of the box is retrieved using the .attr() method
            // as it is assumed and expected to be immutable
            var group = "input:checkbox[name='" + $box.attr("name") + "']";
            // the checked state of the group/box on the other hand will change
            // and the current value is retrieved using .prop() method
            $(group).prop("checked", false);
            $box.prop("checked", true);
        } else {
            $box.prop("checked", false);
        }
    });
</script>