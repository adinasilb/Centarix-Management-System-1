@using PrototypeWithAuth.AppData
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@model PrototypeWithAuth.ViewModels.ReceivedLocationViewModel
@{
    var bcColor = "order-inv-background-color";
    var form = "order-inv-form";
    if (Model.RequestIndexObject.SectionType == AppUtility.MenuItems.Operations)
    {
        bcColor = "oper-background-color";
        form = "oper-form";
    }
}
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/Validation/receivedModalFormValidation.js"></script>
<script src="~/js/validate.js" asp-append-version="true"></script>
<script src="~/js/receivedmodal.js"></script>
<div class="modal modal-view" id="myModal" role="dialog" aria-labelledby="Request" data-backdrop="false">

    <div class="modal-dialog-centered mx-auto  modal-lg on-form-modal" role="document" style="max-height:100%; max-width:90rem; overflow-y:auto;">

        <div class="modal-content d-inline-block modal-border-radius modal-box-shadow">
            <button type="button" class="close modal-close-padding modal-close-style" data-dismiss="modal" aria-label="Close" onclick="$(this).closest('.modal').modal('hide');">
                <span aria-hidden="true">&times;</span>
            </button>
            <form action="" id="myForm" method="post" enctype="multipart/form-data" style="height: 100%; overflow: auto;" class="modal-padding @form receivedModalForm">
                @*the following hidden fors are here so i can do a request.save in for the info that is being given here.
        in the future might want to change it to loading the request from this request id and then adding in the values
        given here (done in the controller)*@
                @Html.HiddenFor(model => model.RequestIndexObject.PageType)
                @Html.HiddenFor(model => model.RequestIndexObject.PageNumber)
                @Html.HiddenFor(model => model.RequestIndexObject.SectionType)
                @Html.HiddenFor(model => model.RequestIndexObject.SelectedCurrency)
                @*@Html.HiddenFor(model => model.RequestIndexObject.SelectedPriceSort)*@
                @Html.HiddenFor(model => model.RequestIndexObject.RequestStatusID)
                @Html.HiddenFor(model => model.RequestIndexObject.SidebarFilterID)
                @Html.HiddenFor(model => model.RequestIndexObject.SidebarType)
                @Html.HiddenFor(vm => vm.Request.RequestID)

                @Html.HiddenFor(vm => vm.CategoryType)

                @*THE FOLLOWING HIDDEN VALUES ARE TO REMEMBER THE REQUESTS INDEX PAGE FROM BEFORE*@
                @*the values for the hidden data is set in js on the modal success area off of the tempdata*@
                @Html.HiddenFor(model => model.Page)
                @*@Html.HiddenFor(model => model.RequestStatusID)*@
                <input type="hidden" asp-for="PageRequestStatusID" value="@Model.PageRequestStatusID" />
                @Html.HiddenFor(model => model.SubCategoryID)
                @Html.HiddenFor(model => model.VendorID)
                @Html.HiddenFor(model => model.ApplicationUserID) @*MAKE SURE THIS IS DOING IT CORRECTLY --> make sure js is parsing it as a string*@
                @Html.HiddenFor(model => model.PageType) @*JS shoulde be taking this as a string *@



                <div asp-validation-summary="ModelOnly" class="text-danger-centarix"></div>
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="modal-header border-bottom-0 modal-header-padding">
                        <h6 class="text-danger-centarix">@TempData["ErrorMessage"]</h6>
                        <br />
                    </div>
                }

                <div class="modal-body p-0">

                    <div class="row">
                        <div class="col-8">
                            <div class="row">
                                <div class="col-2">
                                    @if (Model.Request.Product.ProductSubcategory.ImageURL != null)
                                    {
                                        var imageurl = Model.Request.Product.ProductSubcategory.ImageURL;
                                        <img src="@imageurl" alt="Image" width="100" class="category-image" />
                                    }
                                    else
                                    {
                                        <img src="~/images/css/accounting/sample_image.png" alt="Image" width="100" class="category-image" />
                                    }
                                </div>
                                <div class="col-10">
                                    <input asp-for="Request.Product.ProductName" class="form-control-plaintext heading-1 mt-2 center-horizontally my-auto" readonly />
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-4">
                                    <label asp-for="Request.ArrivalDate" class="control-label"></label>
                                    <input asp-for="Request.ArrivalDate" type="text" class="form-control-plaintext border-bottom datepicker" />
                                    <span asp-validation-for="Request.ArrivalDate" class="text-danger-centarix"></span>
                                </div>
                                <div class="col-4">
                                    <div class="form-group">
                                        <label class="control-label">Application User Receiver</label>
                                        <select asp-for="Request.ApplicationUserReceiverID" class="mdb-select custom select-dropdown form-control-plaintext">
                                            @foreach (var user in Model.ApplicationUsers)
                                            {
                                                <option value="@user.Id">@user.UserName</option>
                                            }
                                        </select>
                                        <span asp-validation-for="Request.ApplicationUserReceiverID" class="text-danger-centarix"></span>
                                    </div>
                                </div>
                                @*<div class="col-1 text-center">
                            <input type="checkbox" asp-for="Arrival" class="new-chckbx" />
                            <label asp-for="Arrival">Arrival</label>
                        </div>*@
                                <div class="col-2 text-center">
                                    <br />
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input filled-in" asp-for="Clarify" />
                                        <label class="form-check-label " asp-for="Clarify"></label>
                                    </div>
                                </div>
                                <div class="col-2 text-center">
                                    <br />
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input filled-in" asp-for="PartialDelivery" />
                                        <label class="form-check-label " asp-for="PartialDelivery"></label>
                                    </div>
                                </div>
                                @*<div class="col-1 text-center">
                            <input type="checkbox" id="test-chkbx" class="new-chckbx" />
                            <label for="test-chkbx">Trial</label>
                        </div>*@
                            </div>

                            <br />
                            @if (Model.Request.Product.ProductSubcategory.ParentCategory.CategoryTypeID == 1)
                            {
                                <div class="row">
                                    <div class="col-2">
                                        <div class="form-group">
                                            <label class="control-label" asp-for="locationTypesDepthZero">Location Type</label>
                                            <div class=" form-control-plaintext border-bottom p-0">
                                                <span class="choose p-0"></span>
                                                <div class="dropdown dropdown-main">
                                                    <div class="select d-inline-flex">
                                                        <span class="caret py-0">
                                                            ▼
                                                        </span>
                                                        <span class="overflow-hidden">Select Type:</span>

                                                    </div>

                                                    <ul class="p-0 locationinstance dropdown-menu ">

                                                        @foreach (var locationType in Model.locationTypesDepthZero)
                                                        {
                                                            <li id="@locationType.LocationTypeID" class="open-sublocations-types" @*onclick="loadReceivedModalSubLocations(this.id)"*@>
                                                                @locationType.LocationTypeName
                                                            </li>
                                                        }
                                                    </ul>

                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-10">
                                        <div class="divSublocations container-fluid">

                                        </div>
                                    </div>
                                </div>

                                @*<div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="control-label">Location Details</label>
                                    <input class="form-control-plaintext border-bottom" placeholder="Notes..." disabled />
                                </div>
                            </div>
                        </div>*@}
                        </div>
                        @if (Model.Request.Product.ProductSubcategory.ParentCategory.CategoryTypeID == 1)
                        {
                            <div class="col-4">
                                <div class="visualView col-12 p-0 m-0 text-center">

                                </div>
                            </div>
                        }
                    </div>

                </div>

                @*Why are there 2 empty modal-body's here?*@
                <!--<div class="modal-body">
    <div class="row">-->
                @*<div class="divSublocations">

        </div>*@
                <!--</div>
    </div>

    <div class="modal-body">
        <div class="row">-->
                @*<div class="visualView col-md-12 text-center">

        </div>*@
                <!--</div>
    </div>-->
                <input type="hidden" style="pointer-events:none" id="locationSelected" name="locationSelected" />
                <div class="modal-footer border-0 modal-footer-mt">
                    <div class="m-auto">
                        <input type="submit" class="submit-received custom-button custom-button-font @bcColor between-button-margin" />
                        <input type="button" value="Cancel" data-dismiss="modal" class="custom-cancel custom-button" onclick="$(this).closest('.modal').modal('hide');" />
                    </div>

                </div>

            </form>

        </div>
    </div>
</div>
<script src="~/js/InitializeDatePicker.js"></script>
<script>
    $(".submit-received").click( function (e) {
        //alert("validate form");
        e.preventDefault();
        $("#myForm").data("validator").settings.ignore = "";
        var valid = $("#myForm").valid();
        console.log("valid form: " + valid)
        if (!valid) {
      
            e.stopPropagation();
            if (!$('input[type="submit"], button[type="submit"] ').hasClass('disabled-submit')) {
                $('input[type="submit"], button[type="submit"] ').addClass('disabled-submit')
            }          

        }
        else {
            $('input[type="submit"], button[type="submit"] ').removeClass('disabled-submit')
            $("#loading").show();
            var formData = new FormData($("#myForm")[0]);
            console.log(...formData)
            ajaxPartialIndexTable($(".request-status-id").val(), "/Requests/ReceivedModal/", "._IndexTableWithCounts", "POST", formData);
        }
        $("#myForm").data("validator").settings.ignore = ':not(select:hidden, input:visible, textarea:visible)';
    
        return false;
    });

</script>
