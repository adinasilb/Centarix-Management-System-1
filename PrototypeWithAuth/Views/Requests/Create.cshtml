@model PrototypeWithAuth.ViewModels.RequestItemViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/RequestNavView.cshtml";
}

<h1>Create</h1>

<h4>Request</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @* HIDDEN FORS *@

            @*Products:*@
            @Html.HiddenFor(vm => vm.Request.Product.QuantityPerUnit, new { @Value = 0 })
            @Html.HiddenFor(vm => vm.Request.Product.UnitsInStock, new { @Value = 0 })
            @Html.HiddenFor(vm => vm.Request.Product.UnitsInOrder, new { @Value = "0" })
            @Html.HiddenFor(vm => vm.Request.Product.ReorderLevel, new { @Value = "0" })
            @Html.HiddenFor(vm => vm.Request.Product.ProductComment, new { @Value = "" })
            @Html.HiddenFor(vm => vm.Request.Product.ProductMedia, new { @Value = "" })
            @Html.HiddenFor(vm => vm.Request.Product.Handeling, new { @Value = "0" })
            @Html.HiddenFor(vm => vm.Request.Product.ProductSubcategory.ProductSubcategoryDescription)
            @Html.HiddenFor(vm => vm.Request.Product.Vendor.VendorID)
            @Html.HiddenFor(vm => vm.Request.Product.Vendor.VendorBank)
            @Html.HiddenFor(vm => vm.Request.Product.Vendor.VendorEnName)
            @Html.HiddenFor(vm => vm.Request.Product.Vendor.VendorAccountNum)
            @Html.HiddenFor(vm => vm.Request.Product.Vendor.VendorBankBranch)
            @Html.HiddenFor(vm => vm.Request.Product.Vendor.VendorBuisnessID)

            @*Requests*@
            @Html.HiddenFor(vm => vm.Request.RequestID)
            @Html.HiddenFor(r => r.Request.Product.ProductID)


            @Html.HiddenFor(m => m.Request.Product.ProductSubcategory.ProductSubcategoryID)
            @Html.HiddenFor(m => m.Request.Product.ProductSubcategory.ProductSubcategoryDescription)


            <div class="form-group">
                <label asp-for="Request.Product.ProductName" class="control-label"></label>
                <input asp-for="Request.Product.ProductName" class="form-control" />
                <span asp-validation-for="Request.Product.ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.Product.ProductSubcategory.ParentCategory.ParentCategoryDescription" class="control-label"></label>
                @Html.DropDownListFor(c => c.Request.Product.ProductSubcategory.ParentCategoryID,
                new SelectList(Model.ParentCategories, "ParentCategoryID", "ParentCategoryDescription"),
                "Select Category", new { @class = "form-control", @id = "parentlist" })
                <span asp-validation-for="Request.Product.ProductSubcategory.ParentCategoryID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.Product.ProductSubcategory.ProductSubcategoryDescription" class="control-label"></label>
                <select @*asp-for="Request.Product.ProductSubcategoryID"*@ name="Request.Product.ProductSubcategoryID" id="sublist" class="form-control"></select>
                <span asp-validation-for="Request.Product.ProductSubcategoryID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.Product.Vendor.VendorEnName" class="control-label"></label>
                @Html.DropDownListFor(
                    vm => vm.Request.Product.VendorID,
                    new SelectList(
                        Model.Vendors,
                        dataValueField: "VendorID",
                        dataTextField: "VendorEnName"),
                    optionLabel: "Select A Vendor", //FUTURE: Ask If we should put in the functionality to create a new vendor here rather than just choosing
                    htmlAttributes: new { @class = "form-control" }
                )
                <span asp-validation-for="Request.Product.Vendor.VendorID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.Product.LocationID" class="control-label"></label>
                <input asp-for="Request.Product.LocationID" class="form-control" />
                <span asp-validation-for="Request.Product.LocationID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.RequestStatusID" class="control-label"></label>
                @Html.DropDownListFor(
                    vm => vm.Request.RequestStatusID,
                    new SelectList(
                        Model.RequestStatuses,
                        dataValueField: "RequestStatusID",
                        dataTextField: "RequestStatusDescription"),
                    optionLabel: "Select Request Status",
                    htmlAttributes: new { @class = "form-control" }
                )
                <span asp-validation-for="Request.RequestStatusID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.AmountWithInLocation" class="control-label"></label>
                <input asp-for="Request.AmountWithInLocation" class="form-control" />
                <span asp-validation-for="Request.AmountWithInLocation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.AmountWithOutLocation" class="control-label"></label>
                <input asp-for="Request.AmountWithOutLocation" class="form-control" />
                <span asp-validation-for="Request.AmountWithOutLocation" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label asp-for="Request.ParentRequest.ApplicationUserID" class="control-label"></label>
                @Html.DropDownListFor(
                        vm => vm.Request.ParentRequest.ApplicationUserID,
                        Model.Users,
                        htmlAttributes: new { @class = "form-control" }
                    )

                <span asp-validation-for="Request.ParentRequest.ParentRequestID" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="Request.ParentRequest.OrderDate" class="control-label"></label>
                @Html.TextBoxFor(model => model.Request.ParentRequest.OrderDate,
                                        new { @class="form-control", @type = "date", @Value = Model.Request.ParentRequest.OrderDate.ToString("yyyy-MM-dd") })
                @*<input asp-for="Request.ParentRequest.OrderDate" class="form-control" />*@
                <span asp-validation-for="Request.ParentRequest.OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.ParentRequest.OrderNumber" class="control-label"></label>
                <input asp-for="Request.ParentRequest.OrderNumber" class="form-control" />
                <span asp-validation-for="Request.ParentRequest.OrderNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.Quantity" class="control-label"></label>
                <input asp-for="Request.Quantity" class="form-control" />
                <span asp-validation-for="Request.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.Cost" class="control-label"></label>
                <input asp-for="Request.Cost" class="form-control" />
                <span asp-validation-for="Request.Cost" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Request.ParentRequest.WithOrder" /> @Html.DisplayNameFor(model => model.Request.ParentRequest.WithOrder)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Request.ParentRequest.InvoiceNumber" class="control-label"></label>
                <input asp-for="Request.ParentRequest.InvoiceNumber" class="form-control" />
                <span asp-validation-for="Request.ParentRequest.InvoiceNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.CatalogNumber" class="control-label"></label>
                <input asp-for="Request.CatalogNumber" class="form-control" />
                <span asp-validation-for="Request.CatalogNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.SerialNumber" class="control-label"></label>
                <input asp-for="Request.SerialNumber" class="form-control" />
                <span asp-validation-for="Request.SerialNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Request.URL" class="control-label"></label>
                <input asp-for="Request.URL" class="form-control" />
                <span asp-validation-for="Request.URL" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index"> Back to List</a>
</div>
@*Javascript that filters according to which parentcategory is selected, you must have the function in the controller for GetSubcategory*@
@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script type="text/javascript">
        //Insert default item "Select" in dropdownlist on load
        $(document).ready(function () {
            var items = "<option value='0'>Select Subcategory</option>";
            $("#sublist").html(items);
        });


    </script>
}





