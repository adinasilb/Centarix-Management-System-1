@model IEnumerable<PrototypeWithAuth.Data.ApplicationUser>
@using PrototypeWithAuth.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/RequestNavView.cshtml";
}


<table class="table table-headerspaced">
    <tbody>
        <tr class="text-center" style="border-color:transparent; border-bottom: 2px solid lightgrey;">
            <td>
                @Html.DisplayNameFor(vm => vm.UserNum)
            </td>
            <td>
                @Html.DisplayNameFor(vm => vm.UserName)
            </td>
            <td>
                @Html.DisplayNameFor(vm => vm.Email)
            </td>
            <td>
                @Html.DisplayNameFor(vm => vm.DateCreated)
            </td>
            <td></td>
        </tr>
        @foreach (var user in Model)
        {
    <tr class="text-center users-tr">
        <td>
            @*<a href="@Url.Action("EditUser", "Admin", new { id = user.Id })" style="display:block;">
                @Html.DisplayFor(modelItem => user.UserNum)
            </a>*@
            <a href="" class="open-user-modal" value="@user.Id" style="display:block;">
                @Html.DisplayFor(modelItem => user.UserNum)
            </a>
        </td>
        <td>
            <a href="" class="open-user-modal" value="@user.Id" style="display:block;">
                @Html.DisplayFor(modelItem => user.UserName)
            </a>
        </td>
        <td>
            <a href="" class="open-user-modal" value="@user.Id" style="display:block;">
                @Html.DisplayFor(modelItem => user.Email)
            </a>
        </td>
        <td>
            <a href="" class="open-user-modal" value="@user.Id" style="display:block;">
                @Html.DisplayFor(modelItem => user.DateCreated)
            </a>
        </td>
        @if (User.IsInRole("Admin"))
        {
    <td>
        @{
            var userid = user.Id;

            if (userid != UserManager.GetUserId(User))
            {
                if (user.LockoutEnabled && user.LockoutEnd > DateTime.Now)
                {
                    <a href="" onclick="$.fn.SuspendUserModal('@userid')" class="prevent-js-reload">
                        Unsuspend
                    </a>
                }
                else
                {
                    <a href="" onclick="$.fn.SuspendUserModal('@userid')" class="prevent-js-reload">
                        Suspend
                    </a>
                }
            }


        }

    </td>
    }
    </tr>
        }
    </tbody>
</table>