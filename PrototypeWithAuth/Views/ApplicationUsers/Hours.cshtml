@model PrototypeWithAuth.ViewModels.WorkersHoursViewModel
@using Microsoft.AspNetCore.Identity
@using PrototypeWithAuth.Data
@using PrototypeWithAuth.AppData
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Hours";
    Layout = "~/Views/Shared/RequestNavView.cshtml";

    var date = new DateTime(Model.Year, Model.Month, 1);
    var monthStyle = "";
    var yearStyle = " ";
    var header = "";
    var col1 = "";
    var col2 = "";
    switch (Model.YearlyMonthlyEnum)
    {
        case AppUtility.YearlyMonthlyEnum.Monthly:
            monthStyle = "yearly-monthly ";
            header = date.ToString("MMMM") + " ";
            col1 = " col-2 ";
            col2 = " col-6 ";
            break;
        case AppUtility.YearlyMonthlyEnum.Yearly:
            yearStyle = "yearly-monthly ";
            col1 = " col-1 ";
            col2 = " col-7 ";
            break;
    }

 }
 

    <div class="container-fluid m-0">
        <div class="row">
            <div class="@col1 heading-1">
                @header@date.Year
            </div>
            <div class="@col2 ">
                <a class="black-text py-2 mr-6  rounded-pill @monthStyle text-center  px-5  border border-dark black-text" asp-action="Hours" asp-route-yearlyMonthlyEnum="@AppUtility.YearlyMonthlyEnum.Monthly" style="font-size:1.4375rem; " asp-route-month="@Model.Month" asp-route-year="@Model.Year">Monthly</a>

                <a class="@yearStyle  px-5  py-2 rounded-pill text-center  border border-dark black-text" asp-action="Hours"
                   asp-route-yearlyMonthlyEnum="@AppUtility.YearlyMonthlyEnum.Yearly" style="font-size:1.4375rem " asp-route-month="@Model.Month" asp-route-year="@Model.Year">Yearly</a>
            </div>
            @{ var yearDropDown = "offset-3"; }
            @if (Model.YearlyMonthlyEnum == AppUtility.YearlyMonthlyEnum.Monthly)
            {
                <div class="col-1 text-right offset-2 ">
                    <div>
                        @Html.DropDownList("months", Model.Months.Select(x =>
                            new SelectListItem
                            {
                                Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(x),
                                Value =  Url.Action("Hours", new { @month=x, @year=Model.Year, @yearlyMonthlyEnum = Model.YearlyMonthlyEnum }),
                                Selected = (x == Model.Month)
                            }
                        ), htmlAttributes: new { @class = "mdb-select  custom users select-dropdown workersHours", @name = "DOBMonth" })
                    </div>
                </div>
                                yearDropDown = "";
                            }

            <div class="col-1 @yearDropDown">
                <div>
                    @Html.DropDownList("years", Model.Years.Select(x =>
                        new SelectListItem
                        {
                            Text = x.ToString(),
                            Value = Url.Action("Hours", new { @year = x, @month = Model.Month, @yearlyMonthlyEnum = Model.YearlyMonthlyEnum }),
                            Selected = (x == Model.Year)
                        }
                    ), htmlAttributes: new { @class = "mdb-select  custom users select-dropdown workersHours", @name = "DOBYear" })
                </div>
            </div>
        </div>

        <div class="row ">
            <table class="table table-headerspaced  col-12 ">
                <tbody>
                    <tr class="text-center " style="border-color:transparent; border-bottom: 1px solid lightgrey;">
                        <td width="11%"></td>
                        <td width="11%">Name</td>
                        <td width="11%">
                            Job Title
                        </td>
                        <td width="11%">
                            Job Category
                        </td>
                        <td width="11%">
                            Job Type
                        </td>
                        <td width="10%">
                            Hours
                        </td>
                        <td width="8%">
                            Working Days
                        </td>
                        <td width="8%">
                            Vacation Days
                        </td>
                        <td width="8%">
                            Sick Days
                        </td>
                    </tr>
                    @foreach (var employee in Model.Employees)
                    {
                        <tr class="text-center users-tr ">
                            <td width="11%" class="py-2">
                                @{
                                    var src = "/UserImages/profile_circle_big.png";
                                    if (employee.Employee.UserImage != null)
                                    {
                                        src = UserManager.GetUserAsync(User).Result.UserImage;
                                    }
                                }
                                <div class="btn btn-link p-0 circular-profile-img circular-profile-img-65"><img id="user-image" src="@src" /></div>
                            </td>
                            <td width="11%">
                                @employee.Employee.FirstName  @employee.Employee.LastName
                            </td>
                            <td width="11%">
                                @employee.Employee.JobTitle
                            </td>
                            <td width="11%">
                                @employee.Employee.JobCategoryType?.Description
                            </td>
                            <td width="11%">
                                @employee.Employee.EmployeeStatus.Description
                            </td>
                            <td width="10%">
                                @{var totalHours = employee.Hours.Days * 24 + employee.Hours.Hours;
                                }
                                @totalHours:@employee.Hours.ToString("mm")
                            </td>
                            <td width="8%">
                                @employee.WorkingDays
                            </td>
                            <td width="8%">
                                @employee.VacationDays
                            </td>
                            <td width="8%">
                                @employee.SickDays
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>