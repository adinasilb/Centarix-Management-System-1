@model PrototypeWithAuth.ViewModels.ChartViewModel
@using System.Text.Json
<div id="labelChart" style="height: 700px; width: 100%;"></div>
<script type="text/javascript" src="~/lib/canvasjs.min.js"></script>

<script>
	$(function () {


	@*var myPieChart = new Chart(ctxP, {

		plugins: [ChartDataLabels],
		type: 'pie',
		data: {
            labels: [@Html.Raw(Model.SectionName)],
			//ChartDataLabels: ["1", "2", "3", "4", "5"],
			datasets: [{
				data: [@Html.Raw(Model.SectionValue)],
				backgroundColor: [@Html.Raw(Model.SectionColor)],
				borderWidth: 6,
                //hoverBackgroundColor: [@Html.Raw(Model.SectionColor)],
			},
			]
		},
		options: {
			hover: false,
			tooltips: {
				// Disable the on-canvas tooltip
				enabled: false,
			},
			legend: {
				display: false
			},
			responsive: true,

			plugins: {
				datalabels: {
					display: function (ctx) {
						//only displays labels with values
						return ctx.chart.data.datasets[0].data[ctx.dataIndex] != 0;

                    },
					//anchor: 'end',
					//clamp: false,

					//align:'end',
					formatter: (value, ctx) => {
						var sum = 0;
						var dataArr = ctx.chart.data.datasets[0].data;
						dataArr.map(data => {
							sum += parseFloat(data);
						});
						//alert(sum)
                        var percentage = (value * 100 / sum).toFixed(2) + "%";
                        //alert("value"+(value * 100)+ "sum"+sum)
                        return ctx.chart.data.labels[ctx.dataIndex] + "\n" + percentage + "\n" + parseFloat(ctx.chart.data.datasets[0].data[ctx.dataIndex]).toFixed(2) ;
					},
					color: 'black',
					labels: {
						title: {
							font: {
								size: 18,
								textAlign: 'center'
							},
							text: "Custom TEgt"


						}
					},

				}
			}
		}
	});*@
		var colors = JSON.parse('@Html.Raw(Json.Serialize(Model.SectionColor))')
        var values = JSON.parse('@Html.Raw(Json.Serialize(Model.SectionValue))')
		var names = JSON.parse('@Html.Raw(Json.Serialize(Model.SectionName))')
        var currency = JSON.parse('@Html.Raw(Json.Serialize(Model.Currency))')
		var datapoints =[]
        for (var i = 0, len = values.length; i < len; i++) {
			datapoints.push({ y: values[i], indexLabel: names[i] })
		}
        CanvasJS.addColorSet("colors",
            colors);

        var chart = new CanvasJS.Chart("labelChart",
			{
				colorSet: "colors",
                title: {

                },
                legend: {

				},

                data: [
					{
                        indexLabelFontSize: 12,
                        indexLabelPlacement: "outside",
                        indexLabelOrientation: "horizontal",
						toolTipContent: currency+"{y} - #percent %",
                        indexLabel: "{indexLabel} {y}%",
                        type: "pie",
                        showInLegend: false,

						dataPoints: datapoints
                    }
                ]
            });
        chart.render();

})</script>

