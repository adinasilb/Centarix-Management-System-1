@model PrototypeWithAuth.ViewModels.ChartViewModel
<canvas id="labelChart" width="400" height="400"></canvas>
<script>
	$(function () {
//alert("chart function")
	var ctxP = document.getElementById("labelChart").getContext('2d');

	var bodyStyles = window.getComputedStyle(document.body);
	var $orderInvColor = bodyStyles.getPropertyValue("--order-inv-color");
	var $protocolsColor = bodyStyles.getPropertyValue("--protocol-color");
	var $operationsColor = bodyStyles.getPropertyValue("--operations-color");
	var $biomarkersColor = bodyStyles.getPropertyValue("--biomarkers-color");
	var $timekeeperColor = bodyStyles.getPropertyValue("--timekeeper-color");
	var $labManageColor = bodyStyles.getPropertyValue("--lab-man-color");
	var $accountingColor = bodyStyles.getPropertyValue("--acc-color");
	var $expensesColor = bodyStyles.getPropertyValue("--expense-color");
	var $incomeColor = bodyStyles.getPropertyValue("--income-color");
	var $usersColor = bodyStyles.getPropertyValue("--user-color");
	var $orderInvColorHover = bodyStyles.getPropertyValue("--order-inv-25");
	var $protocolsColorHover = bodyStyles.getPropertyValue("--protocols-25");
	var $operationsColorHover = bodyStyles.getPropertyValue("--operations-25");
	var $biomarkersColorHover = bodyStyles.getPropertyValue("--biomarkers-25");
	var $timekeeperColorHover = bodyStyles.getPropertyValue("--timekeeper-25");
	var $labManageColorHover = bodyStyles.getPropertyValue("--lab-man-25");
	var $accountingColorHover = bodyStyles.getPropertyValue("--accounting-25");
	var $expensesColorHover = bodyStyles.getPropertyValue("--expenses-25");
	var $incomeColorHover = bodyStyles.getPropertyValue("--income-25");
	var $usersColorHover = bodyStyles.getPropertyValue("--users-25");



	var myPieChart = new Chart(ctxP, {

		plugins: [ChartDataLabels],
		type: 'pie',
		data: {
            labels: [@Html.Raw(Model.SectionName)],
			//ChartDataLabels: ["1", "2", "3", "4", "5"],
			datasets: [{
				data: [@Html.Raw(Model.SectionValue)],
				backgroundColor: [@Html.Raw(Model.SectionColor)],
				borderWidth: 6,
                //hoverBackgroundColor: [@Html.Raw(Model.SectionColor)],
			},
			]
		},
		options: {
			hover: false,
			tooltips: {
				// Disable the on-canvas tooltip
				enabled: false,
			},
			legend: {
				display: false
			},
			responsive: true,

			plugins: {
				datalabels: {
					display: function (ctx) {
						//only displays labels with values
						return ctx.chart.data.datasets[0].data[ctx.dataIndex] != 0;
                       
                    },
					//anchor: 'end',
					//clamp: false,
				
					//align:'end',
					formatter: (value, ctx) => {
						var sum = 0;
						var dataArr = ctx.chart.data.datasets[0].data;
						dataArr.map(data => {
							sum += parseFloat(data);
						});
						//alert(sum)
                        var percentage = (value * 100 / sum).toFixed(2) + "%";
                        //alert("value"+(value * 100)+ "sum"+sum)
                        return ctx.chart.data.labels[ctx.dataIndex] + "\n" + percentage + "\n" + parseFloat(ctx.chart.data.datasets[0].data[ctx.dataIndex]).toFixed(2) ;
					},
					color: 'black',
					labels: {
						title: {
							font: {
								size: 18,
								textAlign: 'center'
							},
							text: "Custom TEgt"


						}
					},

				}
			}
		}
	});

})</script>

