@using PrototypeWithAuth.ViewModels;
@model ProtocolsLinesViewModel


@if (Model.ErrorMessage != null)
{
    <h6 class="text-danger-centarix">
        @Model.ErrorMessage
    </h6>
    <br />
}

@foreach (var line in Model.Lines)
{
    await Html.RenderPartialAsync("_Line", line);
}

<script>
    $(".addLinePopover").click(function () {
        var val = $(this).val();
        $('[data-toggle="popover"]').popover('dispose');
        $(this).popover({
            sanitize: false,
            placement: 'bottom',
            html: true,
            content: function () {
                return $('#' + val).html();
            }
        });
        $(this).popover('toggle');
        $(".popover").off("click").on("click", ".addLine", function () {
            $.ajax({
                processData: false,
                contentType: false,
                data: new FormData($("#myForm")[0]),
                url: "/Protocols/_Lines?lineTypeID=" + $(this).val() +
                    "&currentLineID=" + $(this).attr("current-line-id") + "&protocolID=" + $(".createProtocolMasterProtocolID").val(),
                type: 'POST',
                success: function (data) {
                    $("._Lines").html(data);
                },
                error: function (jqxhr) {
                    $("._Lines").html(jqxhr.responseText);
                }
            });
        });
    });
    $(".line").click(function () {
        $(".addLinePopover").addClass("d-none");
        $("." + $(this).attr("id") + "LinePopoverButton").removeClass("d-none");
        $(".line").removeClass("focused-line");
        $(this).addClass("focused-line");

    });
    $(".function").click(function () {
        $(".addLinePopover").addClass("d-none");
        $("." + $(this).attr("id") + "LinePopoverButton").removeClass("d-none");
        $(".focused-line").append($(this).html());
    });
    $(".line").change(function () {
       $("#"+$(this).attr("line-id")).val($(this).html());
    });
    var lastText = $('#editable').text();
    $('.line').on('focus', function () {
        var $this = $(this);
        $this.data('before', $this.html());
        return $this;
    }).on('blur keyup paste', function () {
        var $this = $(this);
        if ($this.data('before') !== $this.html()) {
            $this.data('before', $this.html());
            $this.trigger('change');
        }

        return $this;
    });
  
</script>
