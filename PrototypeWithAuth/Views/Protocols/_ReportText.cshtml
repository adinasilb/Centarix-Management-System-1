@model Report
@using PrototypeWithAuth.AppData
@{
    Layout = null;
}

<div class="col-12">
    <span role="textbox" contenteditable="false" class="editable-span report-text form-control-plaintext h-100 text-transform-none">
        @if (Model.TemporaryReportText == null)
        {
            <div contenteditable="true" class="editable-span text form-control-plaintext text-transform-none start-div"><span class='focusedText'></span></div>
        }
        else
        {
            @Html.Raw(Model.TemporaryReportText)
        }
    </span>
    <input type="hidden" id="TemporaryReportText" name="Report.TemporaryReportText" value="@Model.TemporaryReportText" />
    <input type="hidden" id="closingTags" value="div" />
</div>

<script>
    $(".report-text").on('change click', function (e) {
        console.log("click")
        var node = $.fn.GetCurrentPositionParents();
        $('#closingTags').val(node ?? " ")
        $(".focusedText").blur()
        $(".focusedText").remove()
        pasteHtmlAtCaret("<span class='focusedText'></span>")
        $("#TemporaryReportText").val($(this).html())

    })
    function pasteHtmlAtCaret(html) {
        var sel, range;
        if (window.getSelection) {
            // IE9 and non-IE
            sel = window.getSelection();
            if (sel.getRangeAt && sel.rangeCount) {
                range = sel.getRangeAt(0);
                //range.deleteContents();

                // Range.createContextualFragment() would be useful here but is
                // non-standard and not supported in all browsers (IE9, for one)
                var el = document.createElement("div");
                el.innerHTML = html;
                var frag = document.createDocumentFragment(), node, lastNode;
                while ((node = el.firstChild)) {
                    lastNode = frag.appendChild(node);
                }
                range.insertNode(frag);

                // Preserve the selection
                //if (lastNode) {
                //    range = range.cloneRange();
                //    range.setStartAfter(lastNode);
                //    //range.collapse(false);
                //    sel.removeAllRanges();
                //    sel.addRange(range);
                //}
            }
        } 
    }
    $.fn.GetCurrentPositionParents = function (e) {
        var nodeString = "";
            var target = null;
        if (window.getSelection) {
            if (window.getSelection().rangeCount > 0) {
                target = window.getSelection().getRangeAt(0).commonAncestorContainer;
                if (target.nodeType != 1) {
                    target = target.parentNode;
                }
                else if (document.selection) {
                    var target = document.selection.createRange().parentElement();
                }
                while (!$(target).hasClass('start-div') && target != null) {
                    nodeString = nodeString + (target?.tagName?? "") + ",";
                    target = target.parentNode
                }
            }
        }
        return nodeString + "div";
    }
    $(document).ready(function (e) {
        //$(".report-text").trigger("change")
        $(".report-text").trigger("focus")
    })
    $('.reports-iframe').on("load", function () {
        console.log("iframe")
        $(this).contents().find('img').css({ maxHeight: '100%' });

    });
</script>
<script src="~/js/function.js"></script>
<script src="~/js/spanContentEditable.js"></script>