@model Report
@using PrototypeWithAuth.AppData
@{
    Layout = null;
}

<div class="col-12">
    <span role="textbox" contenteditable="false" class="editable-span report-text form-control-plaintext h-100 text-transform-none">
    @if (Model.TemporaryReportText == null)
    {
        <div contenteditable="true" class="editable-span form-control-plaintext text-transform-none"><span class='focusedText'></span></div>
    }
    else
    {
        @Html.Raw(Model.TemporaryReportText)
                <span class='focusedText'></span>
    }
    </span>
    <input type="hidden" id="TemporaryReportText" name="Report.TemporaryReportText" value="@Model.TemporaryReportText" />
</div>

<script>
    $(".report-text").on('change', function (e) {
        $("#TemporaryReportText").val($(this).html())
    })
    $(".report-text").on('click', function (e) {
        console.log("focus")
        $(".focusedText").remove()
        pasteHtmlAtCaret("<span class='focusedText'></span>")
        $(".report-text").trigger("change")
    })
    function pasteHtmlAtCaret(html) {
        var sel, range;
        if (window.getSelection) {
            // IE9 and non-IE
            sel = window.getSelection();
            if (sel.getRangeAt && sel.rangeCount) {
                range = sel.getRangeAt(0);
                //range.deleteContents();

                // Range.createContextualFragment() would be useful here but is
                // non-standard and not supported in all browsers (IE9, for one)
                var el = document.createElement("div");
                el.innerHTML = html;
                var frag = document.createDocumentFragment(), node, lastNode;
                while ((node = el.firstChild)) {
                    lastNode = frag.appendChild(node);
                }
                range.insertNode(frag);

                // Preserve the selection
                if (lastNode) {
                    range = range.cloneRange();
                    range.setStartAfter(lastNode);
                    range.collapse(true);
                    sel.removeAllRanges();
                    sel.addRange(range);
                }
            }
        } else if (document.selection && document.selection.type != "Control") {
            // IE < 9
            document.selection.createRange().pasteHTML(html);
        }
    }
    $(document).ready(function (e) {
        $(".report-text").trigger("change")
        $(".report-text").trigger("focus")
    })
    $('.reports-iframe').on("load", function () {
        console.log("iframe")
        $(this).contents().find('img').css({ maxHeight: '100%' });

    });
</script>
<script src="~/js/function.js"></script>
<script src="~/js/spanContentEditable.js"></script>