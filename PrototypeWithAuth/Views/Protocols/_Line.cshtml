@model PrototypeWithAuth.ViewModels.ProtocolsLineViewModel
@{
    var dynamicID = "Protocol_Lines_" + Model.Index + "__";
    var dynamicName = "Protocol.Lines[" + Model.Index + "].";
}
<div class="position-absolute" style="right:91%;">
    <ul class="list-unstyled m-0">
        <li>
            <button type="button" data-toggle="popover" data-placement="bottom" data-container="body" data-trigger="focus" class="no-box-shadow btn p-0 m-0 addLinePopover" lineNumber="@Model.LineNumberString" value="line-content@(Model.Index)" parentLineID="@Model.Line" lineCount="@Model.Index">
                <i class="protocols-color icon-add_circle-24px" style="  font-size: 3rem;"></i>
            </button>
        </li>
        <div style="display:none; " id="line-content@(Model.Index)">
            @foreach (var item in Model.LineTypes)
            {
                <div class="row px-2 comment-btn">
                    <button type="button" value="@item.LineTypeID" currentLineTypeID ="@Model.Line?.LineTypeID" lineNumberString="@Model.LineNumberString" currentLineNumber="@Model.Line?.LineNumber"  lineCount="@(Model.Index)" class="no-box-shadow btn bg-transparent row p-0 text-capitalize text-dark addLine " style="font-size:1rem; font-weight:400;">
                        @item.LineTypeDescription
                    </button><hr class="m-0" />
                </div>
            }
        </div>
    </ul>
</div>

@switch (Model.Line?.LineTypeID)
{
    case 1:
        <div class="d-flex 2parent">
            <div class="text d-flex align-items-center lineNumberString">@Model.LineNumberString</div>
            <input name="@(dynamicName)Content" id="@(dynamicID)Content" value="@Model.Line?.Content" class="text form-control-plaintext " />
        </div>
        break;
    case 2:
            <div class="d-flex ml-4 3parent">
                <div class="text d-flex align-items-center lineNumberString ">@Model.LineNumberString</div>
                <input name="@(dynamicName)Content" id="@(dynamicID)Content" value="@Model.Line?.Content" class="text form-control-plaintext " />
            </div>
            break;
        case 3:
            <div class="d-flex ml-6">
                <div class="text  d-flex align-items-center lineNumberString ">@Model.LineNumberString</div>
                <input name="@(dynamicName)Content" id="@(dynamicID)Content" value="@Model.Line?.Content" class="text form-control-plaintext" />
            </div>
            break;
    }


<script>
    $(".addLinePopover").click(function () {
        var val = $(this).val();
        $('[data-toggle="popover"]').popover('dispose');
        $(this).popover({
            sanitize: false,
            placement: 'bottom',
            html: true,
            content: function () {
                return $('#' + val).html();
            }
        });
        $(this).popover('toggle');
        $(".popover").off("click").on("click", ".addLine", function () {
            var lineNumber = $(this).attr("currentlinenumber");
            var lineNumberString = $(this).attr("lineNumberString");
            var lineTypeID = $(this).val();
            var currentLineTypeID = $(this).attr("currentLineTypeID");
            var lineCount = $(this).attr("lineCount")
            var selector = "."+lineTypeID + "parent .lineNumberString";
            console.log(selector)
            var parentString = $(selector).html();
            //this is to make sure it does not come to controller as undefined
            if(parentString ==undefined)
            {
                parentString = "";
            }
            if (lineNumberString == undefined) {
                lineNumberString = "";
            }
            $.ajax({
                url: "/Protocols/_Line?index=" + lineCount + "&lineTypeID=" + lineTypeID + "&currentLineTypeID=" + currentLineTypeID + "&currentLineNumber=" + lineNumber + "&lineNumberString=" + lineNumberString +"&parentLineNumberString="+parentString,
                type: 'GET',
                success: function (data) {
                    $(".addLinePopover").addClass("d-none");
                    $(".lines").append(data);
                }
            });
        });
    });
</script>
