@model IEnumerable<PrototypeWithAuth.Models.Vendor>
@using PrototypeWithAuth.AppData
@{
    string hoverClass = "";
    string controller = "";
    ViewData["Title"] = "IndexForPayment";
    Layout = "~/Views/Shared/RequestNavView.cshtml";
    if (TempData[AppUtility.TempDataTypes.MenuType.ToString()].Equals(AppUtility.MenuItems.Operations))
    {
        hoverClass = "oper-link-clr";
        controller = "Operations";
    }
    else
    {
        hoverClass = "inv-link-clr";
        controller = "Requests";
    }
}

<div class="">
    <table class="table table-headerspaced table-noheaderlines text-center">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.VendorID)
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.VendorEnName)*@
                    Vendor Name
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.VendorHeName)*@
                    Hebrew Name
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VendorBuisnessID)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.OrdersEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VendorTelephone)
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="vendor-list-item">
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorID)
                    </td>
                    <td>
                        @{ 
                            RequestIndexObject requestIndexObject = new RequestIndexObject() { SidebarFilterID = item.VendorID.ToString(), SectionType = ((AppUtility.MenuItems)TempData[AppUtility.TempDataTypes.MenuType.ToString()]), PageType = ((AppUtility.PageTypeEnum)TempData[AppUtility.TempDataTypes.PageType.ToString()]) };

                        }
                        <a asp-action="IndexTableVendor" asp-controller="@controller" asp-route-requestIndexObject="@requestIndexObject" class="@hoverClass">@Html.DisplayFor(modelItem => item.VendorEnName)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorHeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorBuisnessID)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.OrdersEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorTelephone)
                    </td>
                    @*<td>

                            @Html.ActionLink("orders", "Index", "Requests", new { vendorID = @item.VendorID, @PageType = pageType }, null)
                        </td>*@
                    <td>
                        @*<a asp-action="Edit" asp-route-id="@item.VendorID">Edit</a> |*@

                        @*<a asp-action="Delete" asp-route-id="@item.VendorID">Delete</a>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>