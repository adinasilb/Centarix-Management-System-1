@model PrototypeWithAuth.ViewModels.CreateSupplierViewModel
@using PrototypeWithAuth.AppData
    @{string navLinkClass = "";
        }
        @if (Model.SectionType.Equals(AppUtility.MenuItems.LabManagement))
        {
            navLinkClass = "lab-man-nav-link";

        }
        else if (Model.SectionType.Equals(AppUtility.MenuItems.Requests))
        {
            navLinkClass = "";

        }
        else
        {
            navLinkClass = "supplier-nav-link";
        }
    <div class="new-modal-header modal-line-1-header-with-back modal-sides" style="padding: 0.5em 6em">
        @if (Model.ErrorMessage != null)
        {
            <div class="row">
                <span class="text danger-text view-bag-error">Error: @Model.ErrorMessage</span>
            </div>
        }
        @if (!Model.SectionType.Equals(AppUtility.MenuItems.Requests))
        { 
        <div>
            <button class="back-button" type="button" @*data-dismiss="modal"*@ style="border-width: 0; background: transparent" @*onclick="$(this).closest('.modal').modal('hide');"*@>
                <img src="~/images/css/inventory/icons/RightArrow.png" alt="Alternate Text" />
            </button>
        </div>
        }
        <div class=" col _VendorHeader">
            @{ await Html.RenderPartialAsync("~/Views/Vendors/_VendorHeader.cshtml", Model);}
        </div>
        @{string showDetails = "";
            string showCategories = "";
            string showPayment = "";
            string showComments = "";
            string showContact = "";
            switch (Model.Tab)
            {
                case 1:
                    showDetails = " active show ";
                    break;
                @*        case 2:
                showCategories = " active show ";
                break;*@
                case 2:
                    showPayment = " active show ";
                    break;
                case 3:
                    showComments = " active show ";
                    break;
                case 4:
                    showContact = " active show ";
                    break;

            } }
        <div class="row">
            <div class="col-12 px-0">
                <div class="container-fluid div-tabs text-center pl-0">
                    <ul class="nav nav-tabs container-fluid pr-0 border-bottom-0 pl-0 nav-tabs-icons">
                        <li class="nav-item icon"><a data-toggle="tab" href="#details" id="vendor-details-tab" class="nav-link next-tab @showDetails  @navLinkClass "><i class="icon-storefront-24px" style="font-size: 2rem;"></i><br />Details</a></li>
                        @*<li class="nav-item icon"><a data-toggle="tab" href="#categories" id="vendor-categories-tab" class="nav-link next-tab  @navLinkClass" disabled><i class="icon-category-24px1" style="font-size: 2rem;"></i><br />Categories</a></li>*@
                        <li class="nav-item icon"><a data-toggle="tab" href="#payment" id="vendor-payments-tab" class="nav-link next-tab @showPayment @navLinkClass" disabled><i class="icon-monetization_on-24px" style="font-size: 2rem;"></i><br />Payment</a></li>
                        <li class="nav-item icon"><a data-toggle="tab" id="vendor-comment-tab" href="#vendorComments" class="nav-link next-tab @showComments @navLinkClass " disabled><i class="icon-centarix-icons-06" style="font-size: 2rem;"></i><br />Comments</a></li>
                        <li class="nav-item icon"><a data-toggle="tab" id="vendor-contact-tab" href="#contact" class="nav-link next-tab @showContact  @navLinkClass " disabled><i class="icon-perm_contact_calendar-24px" e.css style="font-size: 2rem;"></i><br />Contact</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="new-modal-body edit-modal-outer-body partial-div">
        @{await Html.RenderPartialAsync("~/Views/Vendors/EditPartial.cshtml", Model);
        }
    </div>